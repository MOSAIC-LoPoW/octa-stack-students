ARM GAS  /tmp/cckT6pGy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_iwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_IWDG_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_IWDG_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_IWDG_Init:
  26              	.LFB123:
  27              		.file 1 "../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c"
   1:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /**
   2:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ******************************************************************************
   3:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @file    stm32l4xx_hal_iwdg.c
   4:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @author  MCD Application Team
   5:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @brief   IWDG HAL module driver.
   6:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *          This file provides firmware functions to manage the following 
   7:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *          functionalities of the Independent Watchdog (IWDG) peripheral:
   8:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *           + Initialization and Start functions
   9:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *           + IO operation functions
  10:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *
  11:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   @verbatim
  12:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ==============================================================================
  13:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****                     ##### IWDG Generic features #####
  14:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ==============================================================================
  15:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   [..]
  16:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) The IWDG can be started by either software or hardware (configurable
  17:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         through option byte).
  18:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  19:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) The IWDG is clocked by Low-Speed clock (LSI) and thus stays active even
  20:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         if the main clock fails.
  21:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  22:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) Once the IWDG is started, the LSI is forced ON and both can not be 
  23:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         disabled. The counter starts counting down from the reset value (0xFFF).
  24:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         When it reaches the end of count value (0x000) a reset signal is 
  25:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         generated (IWDG reset).
  26:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  27:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) Whenever the key value 0x0000 AAAA is written in the IWDG_KR register, 
  28:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         the IWDG_RLR value is reloaded in the counter and the watchdog reset is
  29:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         prevented.
  30:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  31:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) The IWDG is implemented in the VDD voltage domain that is still functional
ARM GAS  /tmp/cckT6pGy.s 			page 2


  32:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).
  33:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         IWDGRST flag in RCC_CSR register can be used to inform when an IWDG
  34:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         reset occurs.
  35:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  36:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (+) Debug mode : When the microcontroller enters debug mode (core halted),
  37:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         the IWDG counter either continues to work normally or stops, depending 
  38:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         on DBG_IWDG_STOP configuration bit in DBG module, accessible through
  39:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         __HAL_DBGMCU_FREEZE_IWDG() and __HAL_DBGMCU_UNFREEZE_IWDG() macros
  40:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  41:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     [..] Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  42:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****          The IWDG timeout may vary due to LSI frequency dispersion. STM32L4xx
  43:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****          devices provide the capability to measure the LSI frequency (LSI clock
  44:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****          connected internally to TIM16 CH1 input capture). The measured value
  45:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****          can be used to have an IWDG timeout with an acceptable accuracy.
  46:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  47:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****                      ##### How to use this driver #####
  48:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ==============================================================================
  49:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   [..]
  50:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (#) Use IWDG using HAL_IWDG_Init() function to :
  51:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (++) Enable instance by writing Start keyword in IWDG_KEY register. LSI 
  52:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****            clock is forced ON and IWDG counter starts downcounting.
  53:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (++) Enable write access to configuration register: IWDG_PR, IWDG_RLR & 
  54:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****            IWDG_WINR.
  55:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (++) Configure the IWDG prescaler and counter reload value. This reload 
  56:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****            value will be loaded in the IWDG counter each time the watchdog is 
  57:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****            reloaded, then the IWDG will start counting down from this value.
  58:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (++) Wait for status flags to be reset
  59:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (++) Depending on window parameter:
  60:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         (+++) If Window Init parameter is same as Window register value, 
  61:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****              nothing more is done but reload counter value in order to exit 
  62:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****              function withy exact time base.
  63:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         (+++) Else modify Window register. This will automatically reload
  64:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****              watchdog counter.
  65:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  66:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     (#) Then the application program must refresh the IWDG counter at regular
  67:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         intervals during normal operation to prevent an MCU reset, using
  68:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****         HAL_IWDG_Refresh() function.
  69:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  70:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****      *** IWDG HAL driver macros list ***
  71:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****      ====================================
  72:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****      [..]
  73:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****        Below the list of most used macros in IWDG HAL driver:
  74:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) __HAL_IWDG_START: Enable the IWDG peripheral
  75:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) __HAL_IWDG_RELOAD_COUNTER: Reloads IWDG counter with value defined in
  76:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****           the reload register
  77:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
  78:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   @endverbatim
  79:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ******************************************************************************
  80:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @attention
  81:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *
  82:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  83:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *
  84:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * Redistribution and use in source and binary forms, with or without modification,
  85:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * are permitted provided that the following conditions are met:
  86:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  87:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *      this list of conditions and the following disclaimer.
  88:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cckT6pGy.s 			page 3


  89:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *      this list of conditions and the following disclaimer in the documentation
  90:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *      and/or other materials provided with the distribution.
  91:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  92:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *      may be used to endorse or promote products derived from this software
  93:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *      without specific prior written permission.
  94:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *
  95:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  96:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  97:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  98:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  99:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *
 106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   ******************************************************************************
 107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Includes ------------------------------------------------------------------*/
 110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** #include "stm32l4xx_hal.h"
 111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @addtogroup STM32L4xx_HAL_Driver
 113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** #ifdef HAL_IWDG_MODULE_ENABLED
 117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @addtogroup IWDG
 118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @brief IWDG HAL module driver.
 119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Private define ------------------------------------------------------------*/
 124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @defgroup IWDG_Private_Defines IWDG Private Defines
 125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Status register need 5 RC LSI divided by prescaler clock to be updated. With 
 128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****    higher prescaler (256), and according to HSI variation, we need to wait at 
 129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****    least 6 cycles so 48 ms. */
 130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** #define HAL_IWDG_DEFAULT_TIMEOUT            48u
 131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /**
 132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @}
 133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /* Exported functions --------------------------------------------------------*/
 139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions
 141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group1
 145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  *  @brief    Initialization and Start functions.
ARM GAS  /tmp/cckT6pGy.s 			page 4


 146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  *
 147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** @verbatim
 148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  ===============================================================================
 149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****           ##### Initialization and Start functions #####
 150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  ===============================================================================
 151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) Initialize the IWDG according to the specified parameters in the 
 153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****           IWDG_InitTypeDef of associated handle.
 154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) Manage Window option.
 155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) Once initialization is performed in HAL_IWDG_Init function, Watchdog 
 156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****           is reloaded in order to exit function with correct time base.
 157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** @endverbatim
 159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /**
 163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @brief  Initialize the IWDG according to the specified parameters in the 
 164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *         IWDG_InitTypeDef and start watchdog. Before exiting function, 
 165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *         watchdog is refreshed in order to have correct time base.
 166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @retval HAL status
 169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Init(IWDG_HandleTypeDef *hiwdg)
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** {
  28              		.loc 1 171 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   uint32_t tickstart;
 173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Check the IWDG handle allocation */
 175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   if(hiwdg == NULL)
  33              		.loc 1 175 0
  34 0000 40B3     		cbz	r0, .L6
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   uint32_t tickstart;
  35              		.loc 1 171 0
  36 0002 38B5     		push	{r3, r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 3, -16
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 14, -4
  43 0004 0446     		mov	r4, r0
 176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   {
 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     return HAL_ERROR;
 178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
 179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Check the parameters */
 181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   assert_param(IS_IWDG_ALL_INSTANCE(hiwdg->Instance));
 182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(hiwdg->Init.Prescaler));
 183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
 184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   assert_param(IS_IWDG_WINDOW(hiwdg->Init.Window));
 185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
ARM GAS  /tmp/cckT6pGy.s 			page 5


 186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Enable IWDG. LSI is turned on automaticaly */
 187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   __HAL_IWDG_START(hiwdg);
  44              		.loc 1 187 0
  45 0006 0368     		ldr	r3, [r0]
  46 0008 4CF6CC42 		movw	r2, #52428
  47 000c 1A60     		str	r2, [r3]
 188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Enable write access to IWDG_PR, IWDG_RLR and IWDG_WINR registers by writing
 190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   0x5555 in KR */
 191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   IWDG_ENABLE_WRITE_ACCESS(hiwdg);
  48              		.loc 1 191 0
  49 000e 0368     		ldr	r3, [r0]
  50 0010 45F25552 		movw	r2, #21845
  51 0014 1A60     		str	r2, [r3]
 192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Write to IWDG registers the Prescaler & Reload values to work with */
 194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   hiwdg->Instance->PR = hiwdg->Init.Prescaler;
  52              		.loc 1 194 0
  53 0016 0368     		ldr	r3, [r0]
  54 0018 4268     		ldr	r2, [r0, #4]
  55 001a 5A60     		str	r2, [r3, #4]
 195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   hiwdg->Instance->RLR = hiwdg->Init.Reload;
  56              		.loc 1 195 0
  57 001c 0368     		ldr	r3, [r0]
  58 001e 8268     		ldr	r2, [r0, #8]
  59 0020 9A60     		str	r2, [r3, #8]
 196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Check pending flag, if previous update not done, return timeout */
 198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   tickstart = HAL_GetTick();
  60              		.loc 1 198 0
  61 0022 FFF7FEFF 		bl	HAL_GetTick
  62              	.LVL1:
  63 0026 0546     		mov	r5, r0
  64              	.LVL2:
  65              	.L3:
 199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Wait for register to be updated */
 201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   while (hiwdg->Instance->SR != 0x00u)
  66              		.loc 1 201 0
  67 0028 2368     		ldr	r3, [r4]
  68 002a DA68     		ldr	r2, [r3, #12]
  69 002c 32B1     		cbz	r2, .L12
 202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   {
 203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     if((HAL_GetTick() - tickstart ) > HAL_IWDG_DEFAULT_TIMEOUT)
  70              		.loc 1 203 0
  71 002e FFF7FEFF 		bl	HAL_GetTick
  72              	.LVL3:
  73 0032 401B     		subs	r0, r0, r5
  74 0034 3028     		cmp	r0, #48
  75 0036 F7D9     		bls	.L3
 204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     {
 205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       return HAL_TIMEOUT;
  76              		.loc 1 205 0
  77 0038 0320     		movs	r0, #3
  78              	.L2:
 206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     }
 207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
ARM GAS  /tmp/cckT6pGy.s 			page 6


 208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* If window parameter is different than current value, modify window 
 210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   register */
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   if(hiwdg->Instance->WINR != hiwdg->Init.Window)
 212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   {
 213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     /* Write to IWDG WINR the IWDG_Window value to compare with. In any case,
 214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     even if window feature is disabled, Watchdog will be reloaded by writing 
 215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     windows register */
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     hiwdg->Instance->WINR = hiwdg->Init.Window;
 217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
 218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   else
 219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   {
 220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     /* Reload IWDG counter with value defined in the reload register */
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****     __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
 223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Return function status */
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   return HAL_OK;
 226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** }
  79              		.loc 1 226 0
  80 003a 38BD     		pop	{r3, r4, r5, pc}
  81              	.LVL4:
  82              	.L12:
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   {
  83              		.loc 1 211 0
  84 003c 1969     		ldr	r1, [r3, #16]
  85 003e E268     		ldr	r2, [r4, #12]
  86 0040 9142     		cmp	r1, r2
  87 0042 02D0     		beq	.L5
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
  88              		.loc 1 216 0
  89 0044 1A61     		str	r2, [r3, #16]
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** }
  90              		.loc 1 225 0
  91 0046 0020     		movs	r0, #0
  92 0048 F7E7     		b	.L2
  93              	.L5:
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
  94              		.loc 1 221 0
  95 004a 4AF6AA22 		movw	r2, #43690
  96 004e 1A60     		str	r2, [r3]
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** }
  97              		.loc 1 225 0
  98 0050 0020     		movs	r0, #0
  99 0052 F2E7     		b	.L2
 100              	.LVL5:
 101              	.L6:
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 0
 104              		.cfi_restore 3
 105              		.cfi_restore 4
 106              		.cfi_restore 5
 107              		.cfi_restore 14
 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   }
 108              		.loc 1 177 0
 109 0054 0120     		movs	r0, #1
 110              	.LVL6:
ARM GAS  /tmp/cckT6pGy.s 			page 7


 111              		.loc 1 226 0
 112 0056 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE123:
 116              		.section	.text.HAL_IWDG_Refresh,"ax",%progbits
 117              		.align	1
 118              		.global	HAL_IWDG_Refresh
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	HAL_IWDG_Refresh:
 125              	.LFB124:
 227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /**
 229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @}
 230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group2
 234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  *  @brief   IO operation functions
 235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  *
 236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** @verbatim
 237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  ===============================================================================
 238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****                       ##### IO operation functions #####
 239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  ===============================================================================
 240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****       (+) Refresh the IWDG.
 242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** @endverbatim
 244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @{
 245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** /**
 249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @brief  Refresh the IWDG.
 250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   * @retval HAL status
 253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   */
 254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Refresh(IWDG_HandleTypeDef *hiwdg)
 255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** {
 126              		.loc 1 255 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL7:
 256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Reload IWDG counter with value defined in the reload register */
 257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 132              		.loc 1 257 0
 133 0000 0368     		ldr	r3, [r0]
 134 0002 4AF6AA22 		movw	r2, #43690
 135 0006 1A60     		str	r2, [r3]
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** 
 259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   /* Return function status */
 260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c ****   return HAL_OK;
ARM GAS  /tmp/cckT6pGy.s 			page 8


 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c **** }
 136              		.loc 1 261 0
 137 0008 0020     		movs	r0, #0
 138              	.LVL8:
 139 000a 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE124:
 143              		.text
 144              	.Letext0:
 145              		.file 2 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 146              		.file 3 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 147              		.file 4 "../../core/ST/CMSIS/Include/core_cm4.h"
 148              		.file 5 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 149              		.file 6 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 150              		.file 7 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 151              		.file 8 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_iwdg.h"
 152              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/cckT6pGy.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_iwdg.c
     /tmp/cckT6pGy.s:18     .text.HAL_IWDG_Init:0000000000000000 $t
     /tmp/cckT6pGy.s:25     .text.HAL_IWDG_Init:0000000000000000 HAL_IWDG_Init
     /tmp/cckT6pGy.s:117    .text.HAL_IWDG_Refresh:0000000000000000 $t
     /tmp/cckT6pGy.s:124    .text.HAL_IWDG_Refresh:0000000000000000 HAL_IWDG_Refresh

UNDEFINED SYMBOLS
HAL_GetTick
