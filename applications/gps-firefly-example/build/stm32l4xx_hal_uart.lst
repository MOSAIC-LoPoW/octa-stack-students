ARM GAS  /tmp/ccyzTMkC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB166:
  26              		.file 1 "../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/ccyzTMkC.s 			page 2


  33:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
ARM GAS  /tmp/ccyzTMkC.s 			page 3


  90:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccyzTMkC.s 			page 4


 147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      without specific prior written permission.
 157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccyzTMkC.s 			page 5


 204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 6


 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 7


 318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 8


 375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/ccyzTMkC.s 			page 9


 432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
ARM GAS  /tmp/ccyzTMkC.s 			page 10


 489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
ARM GAS  /tmp/ccyzTMkC.s 			page 11


 546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccyzTMkC.s 			page 12


 603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 13


 660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlock */
 689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccyzTMkC.s 			page 14


 717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
ARM GAS  /tmp/ccyzTMkC.s 			page 15


 774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  /tmp/ccyzTMkC.s 			page 16


 831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccyzTMkC.s 			page 17


 888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process locked */
 890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccyzTMkC.s 			page 18


 945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Update the error code */
 973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Return error status */
 976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Update the error code */
 983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Return error status */
 986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Release Lock */
 990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
ARM GAS  /tmp/ccyzTMkC.s 			page 19


1002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
1003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
1006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
1009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
1011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
1014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
1016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
1019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
1021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
1024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 20


1059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccyzTMkC.s 			page 21


1116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData;
1123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
1131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
1136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
1167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
1169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 22


1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
1176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
1193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
1200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) pData ;
1204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
1206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
1212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
ARM GAS  /tmp/ccyzTMkC.s 			page 23


1230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
1252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
ARM GAS  /tmp/ccyzTMkC.s 			page 24


1287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
1331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
1332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
ARM GAS  /tmp/ccyzTMkC.s 			page 25


1344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Process Unlocked */
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccyzTMkC.s 			page 26


1401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
1418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
1436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
ARM GAS  /tmp/ccyzTMkC.s 			page 27


1458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
1472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
1476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
1479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
1490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
1491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
1493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
1494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
1496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
1497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
1499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
1512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 28


1515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
1516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
1561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 29


1572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback() /
1595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   the stream and the corresponding call back is executed. */
1599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
1602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
1603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
1617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
1618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccyzTMkC.s 			page 30


1629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
ARM GAS  /tmp/ccyzTMkC.s 			page 31


1686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 32


1743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 33


1800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccyzTMkC.s 			page 34


1857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
ARM GAS  /tmp/ccyzTMkC.s 			page 35


1914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
1926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
1930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
1936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
1942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
1943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
1944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
1946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
1958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
1960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccyzTMkC.s 			page 36


1971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
1977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
1978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
1995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
ARM GAS  /tmp/ccyzTMkC.s 			page 37


2028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
2029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
2050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
ARM GAS  /tmp/ccyzTMkC.s 			page 38


2085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  /tmp/ccyzTMkC.s 			page 39


2142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
2188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != RESET)
2196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
2197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccyzTMkC.s 			page 40


2199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
2202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)
2211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != RESET))))
2212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != RESET)
2214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
2215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
2216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET) ||
2246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != RESET)))
2247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != RESET)
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
2250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
2251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
ARM GAS  /tmp/ccyzTMkC.s 			page 41


2256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != RESET)
2264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != RESET)
2265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != RESET)))
2266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != RESET)
2268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
2269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
2274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
2280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
2281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccyzTMkC.s 			page 42


2313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
2351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != RESET)
ARM GAS  /tmp/ccyzTMkC.s 			page 43


2370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != RESET)
2371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != RESET)))
2372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != RESET)
2374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
2375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
2380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != RESET) && ((cr1its & USART_CR1_TXFEIE) != RESET))
2394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != RESET) && ((cr1its & USART_CR1_RXFFIE) != RESET))
2407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
ARM GAS  /tmp/ccyzTMkC.s 			page 44


2427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
2452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART error callback.
2482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/ccyzTMkC.s 			page 45


2484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccyzTMkC.s 			page 46


2541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_Wakeup_AddressConfig() API configures the wake-up from stop mode parameters
2561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
2570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Disable UART mute mode (does not mean the UART actually exits mute mode
2591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * as it may not have been in mute mode at this very moment).
2592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
ARM GAS  /tmp/ccyzTMkC.s 			page 47


2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  /tmp/ccyzTMkC.s 			page 48


2655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
2684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->RQR, UART_SENDBREAK_REQUEST);
2689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
2696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *
2705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
ARM GAS  /tmp/ccyzTMkC.s 			page 49


2712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
2728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
2729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @brief  Return the UART handle error code.
2735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *              the configuration information for the specified UART.
2737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** * @retval UART Error Code
2738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
2742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
ARM GAS  /tmp/ccyzTMkC.s 			page 50


2769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
2789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
ARM GAS  /tmp/ccyzTMkC.s 			page 51


2826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
ARM GAS  /tmp/ccyzTMkC.s 			page 52


2883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3 * huart->Init.BaudRate)) ||
2903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
2904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
2906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
2910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
2914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
2923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
2928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
2930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
2937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
ARM GAS  /tmp/ccyzTMkC.s 			page 53


2940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
2941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
2942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
2943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
2953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
2961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
2965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
2972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
2979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, h
2986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
2990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate, huart->Init.Clock
2993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
2996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccyzTMkC.s 			page 54


2997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = usartdiv & 0xFFF0U;
3007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
3009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
3018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
3022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
3024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, hua
3029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
3031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
3038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
3043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
3045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
3052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccyzTMkC.s 			page 55


3054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
3057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
3058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
3064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
3068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
3079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
3080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
3082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 56


3111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
3117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
3166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
ARM GAS  /tmp/ccyzTMkC.s 			page 57


3168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
3191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
3199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
3222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/ccyzTMkC.s 			page 58


3225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Process Unlocked */
3235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
3238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
3242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  27              		.loc 1 3251 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3258 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 3262 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F87130 		strb	r3, [r0, #113]
3263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
  41              		.loc 1 3263 0
  42 0010 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE166:
ARM GAS  /tmp/ccyzTMkC.s 			page 59


  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  51              		.fpu fpv4-sp-d16
  53              	UART_EndRxTransfer:
  54              	.LFB167:
3264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  55              		.loc 1 3272 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
3273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 3278 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 1368     		ldr	r3, [r2]
  64 0004 23F49073 		bic	r3, r3, #288
  65 0008 1360     		str	r3, [r2]
3279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  66              		.loc 1 3279 0
  67 000a 0268     		ldr	r2, [r0]
  68 000c 9368     		ldr	r3, [r2, #8]
  69 000e 23F00103 		bic	r3, r3, #1
  70 0012 9360     		str	r3, [r2, #8]
3280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  71              		.loc 1 3283 0
  72 0014 2023     		movs	r3, #32
  73 0016 80F87230 		strb	r3, [r0, #114]
3284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
  74              		.loc 1 3286 0
  75 001a 0023     		movs	r3, #0
  76 001c 0366     		str	r3, [r0, #96]
3287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
  77              		.loc 1 3287 0
  78 001e 7047     		bx	lr
  79              		.cfi_endproc
ARM GAS  /tmp/ccyzTMkC.s 			page 60


  80              	.LFE167:
  82              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  83              		.align	1
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	UART_TxISR_8BIT:
  90              	.LFB178:
3288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
ARM GAS  /tmp/ccyzTMkC.s 			page 61


3336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccyzTMkC.s 			page 62


3393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX)
3406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
3407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX)
3414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
3415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccyzTMkC.s 			page 63


3450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 64


3507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
ARM GAS  /tmp/ccyzTMkC.s 			page 65


3564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/ccyzTMkC.s 			page 66


3621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  91              		.loc 1 3635 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL2:
3636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  97              		.loc 1 3637 0
  98 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
  99 0004 DBB2     		uxtb	r3, r3
 100 0006 212B     		cmp	r3, #33
 101 0008 00D0     		beq	.L6
 102              	.L3:
3638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
3640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
3654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 103              		.loc 1 3657 0
 104 000a 7047     		bx	lr
 105              	.L6:
3639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 106              		.loc 1 3639 0
 107 000c B0F85230 		ldrh	r3, [r0, #82]
 108 0010 9BB2     		uxth	r3, r3
 109 0012 63B1     		cbz	r3, .L7
ARM GAS  /tmp/ccyzTMkC.s 			page 67


3653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 110              		.loc 1 3653 0
 111 0014 C36C     		ldr	r3, [r0, #76]
 112 0016 5A1C     		adds	r2, r3, #1
 113 0018 C264     		str	r2, [r0, #76]
 114 001a 0268     		ldr	r2, [r0]
 115 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 116 001e 1385     		strh	r3, [r2, #40]	@ movhi
3654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 117              		.loc 1 3654 0
 118 0020 B0F85230 		ldrh	r3, [r0, #82]
 119 0024 013B     		subs	r3, r3, #1
 120 0026 9BB2     		uxth	r3, r3
 121 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
 122              		.loc 1 3657 0
 123 002c EDE7     		b	.L3
 124              	.L7:
3645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 125              		.loc 1 3645 0
 126 002e 0268     		ldr	r2, [r0]
 127 0030 1368     		ldr	r3, [r2]
 128 0032 23F08003 		bic	r3, r3, #128
 129 0036 1360     		str	r3, [r2]
3649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 130              		.loc 1 3649 0
 131 0038 0268     		ldr	r2, [r0]
 132 003a 1368     		ldr	r3, [r2]
 133 003c 43F04003 		orr	r3, r3, #64
 134 0040 1360     		str	r3, [r2]
 135 0042 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE178:
 139              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	UART_TxISR_16BIT:
 147              	.LFB179:
3658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 148              		.loc 1 3667 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153              	.LVL3:
3668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
ARM GAS  /tmp/ccyzTMkC.s 			page 68


3669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 154              		.loc 1 3671 0
 155 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 156 0004 DBB2     		uxtb	r3, r3
 157 0006 212B     		cmp	r3, #33
 158 0008 00D0     		beq	.L11
 159              	.L8:
3672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0)
3674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
3689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
3690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 160              		.loc 1 3693 0
 161 000a 7047     		bx	lr
 162              	.L11:
3673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 163              		.loc 1 3673 0
 164 000c B0F85230 		ldrh	r3, [r0, #82]
 165 0010 9BB2     		uxth	r3, r3
 166 0012 7BB1     		cbz	r3, .L12
3687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 167              		.loc 1 3687 0
 168 0014 C36C     		ldr	r3, [r0, #76]
 169              	.LVL4:
3688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2;
 170              		.loc 1 3688 0
 171 0016 0268     		ldr	r2, [r0]
 172 0018 1B88     		ldrh	r3, [r3]
 173              	.LVL5:
 174 001a C3F30803 		ubfx	r3, r3, #0, #9
 175 001e 1385     		strh	r3, [r2, #40]	@ movhi
 176              	.LVL6:
3689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 177              		.loc 1 3689 0
 178 0020 C36C     		ldr	r3, [r0, #76]
 179 0022 0233     		adds	r3, r3, #2
 180 0024 C364     		str	r3, [r0, #76]
3690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccyzTMkC.s 			page 69


 181              		.loc 1 3690 0
 182 0026 B0F85230 		ldrh	r3, [r0, #82]
 183 002a 013B     		subs	r3, r3, #1
 184 002c 9BB2     		uxth	r3, r3
 185 002e A0F85230 		strh	r3, [r0, #82]	@ movhi
 186              		.loc 1 3693 0
 187 0032 EAE7     		b	.L8
 188              	.L12:
3679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 189              		.loc 1 3679 0
 190 0034 0268     		ldr	r2, [r0]
 191 0036 1368     		ldr	r3, [r2]
 192 0038 23F08003 		bic	r3, r3, #128
 193 003c 1360     		str	r3, [r2]
3683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 194              		.loc 1 3683 0
 195 003e 0268     		ldr	r2, [r0]
 196 0040 1368     		ldr	r3, [r2]
 197 0042 43F04003 		orr	r3, r3, #64
 198 0046 1360     		str	r3, [r2]
 199 0048 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE179:
 203              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 204              		.align	1
 205              		.weak	HAL_UART_MspInit
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	HAL_UART_MspInit:
 212              	.LFB128:
 700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 213              		.loc 1 700 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218              	.LVL7:
 707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 219              		.loc 1 707 0
 220 0000 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE128:
 224              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 225              		.align	1
 226              		.weak	HAL_UART_MspDeInit
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	HAL_UART_MspDeInit:
 233              	.LFB129:
 715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 234              		.loc 1 715 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccyzTMkC.s 			page 70


 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL8:
 722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 240              		.loc 1 722 0
 241 0000 7047     		bx	lr
 242              		.cfi_endproc
 243              	.LFE129:
 245              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 246              		.align	1
 247              		.global	HAL_UART_DeInit
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	HAL_UART_DeInit:
 254              	.LFB127:
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 255              		.loc 1 653 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              	.LVL9:
 655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 260              		.loc 1 655 0
 261 0000 D8B1     		cbz	r0, .L17
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 262              		.loc 1 653 0
 263 0002 38B5     		push	{r3, r4, r5, lr}
 264              	.LCFI0:
 265              		.cfi_def_cfa_offset 16
 266              		.cfi_offset 3, -16
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 14, -4
 270 0004 0446     		mov	r4, r0
 663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 271              		.loc 1 663 0
 272 0006 2423     		movs	r3, #36
 273 0008 80F87130 		strb	r3, [r0, #113]
 666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 274              		.loc 1 666 0
 275 000c 0268     		ldr	r2, [r0]
 276 000e 1368     		ldr	r3, [r2]
 277 0010 23F00103 		bic	r3, r3, #1
 278 0014 1360     		str	r3, [r2]
 668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 279              		.loc 1 668 0
 280 0016 0368     		ldr	r3, [r0]
 281 0018 0025     		movs	r5, #0
 282 001a 1D60     		str	r5, [r3]
 669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 283              		.loc 1 669 0
 284 001c 0368     		ldr	r3, [r0]
 285 001e 5D60     		str	r5, [r3, #4]
 670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 286              		.loc 1 670 0
ARM GAS  /tmp/ccyzTMkC.s 			page 71


 287 0020 0368     		ldr	r3, [r0]
 288 0022 9D60     		str	r5, [r3, #8]
 681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 289              		.loc 1 681 0
 290 0024 FFF7FEFF 		bl	HAL_UART_MspDeInit
 291              	.LVL10:
 684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 292              		.loc 1 684 0
 293 0028 6567     		str	r5, [r4, #116]
 685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 294              		.loc 1 685 0
 295 002a 84F87150 		strb	r5, [r4, #113]
 686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 296              		.loc 1 686 0
 297 002e 84F87250 		strb	r5, [r4, #114]
 689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 298              		.loc 1 689 0
 299 0032 84F87050 		strb	r5, [r4, #112]
 691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 300              		.loc 1 691 0
 301 0036 2846     		mov	r0, r5
 692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 302              		.loc 1 692 0
 303 0038 38BD     		pop	{r3, r4, r5, pc}
 304              	.LVL11:
 305              	.L17:
 306              	.LCFI1:
 307              		.cfi_def_cfa_offset 0
 308              		.cfi_restore 3
 309              		.cfi_restore 4
 310              		.cfi_restore 5
 311              		.cfi_restore 14
 657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 312              		.loc 1 657 0
 313 003a 0120     		movs	r0, #1
 314              	.LVL12:
 692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 315              		.loc 1 692 0
 316 003c 7047     		bx	lr
 317              		.cfi_endproc
 318              	.LFE127:
 320              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_UART_Transmit_IT
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	HAL_UART_Transmit_IT:
 329              	.LFB132:
1236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 330              		.loc 1 1236 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335              	.LVL13:
ARM GAS  /tmp/ccyzTMkC.s 			page 72


1238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 336              		.loc 1 1238 0
 337 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 338 0004 DBB2     		uxtb	r3, r3
 339 0006 202B     		cmp	r3, #32
 340 0008 29D1     		bne	.L26
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 341              		.loc 1 1240 0
 342 000a 51B3     		cbz	r1, .L27
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 343              		.loc 1 1240 0 is_stmt 0 discriminator 1
 344 000c 5AB3     		cbz	r2, .L28
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 345              		.loc 1 1246 0 is_stmt 1
 346 000e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 347 0012 012B     		cmp	r3, #1
 348 0014 29D0     		beq	.L29
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 349              		.loc 1 1246 0 is_stmt 0 discriminator 2
 350 0016 0123     		movs	r3, #1
 351 0018 80F87030 		strb	r3, [r0, #112]
1248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 352              		.loc 1 1248 0 is_stmt 1 discriminator 2
 353 001c C164     		str	r1, [r0, #76]
1249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 354              		.loc 1 1249 0 discriminator 2
 355 001e A0F85020 		strh	r2, [r0, #80]	@ movhi
1250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 356              		.loc 1 1250 0 discriminator 2
 357 0022 A0F85220 		strh	r2, [r0, #82]	@ movhi
1251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 358              		.loc 1 1251 0 discriminator 2
 359 0026 0023     		movs	r3, #0
 360 0028 4366     		str	r3, [r0, #100]
1253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 361              		.loc 1 1253 0 discriminator 2
 362 002a 4367     		str	r3, [r0, #116]
1254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 363              		.loc 1 1254 0 discriminator 2
 364 002c 2123     		movs	r3, #33
 365 002e 80F87130 		strb	r3, [r0, #113]
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 366              		.loc 1 1280 0 discriminator 2
 367 0032 8368     		ldr	r3, [r0, #8]
 368 0034 B3F5805F 		cmp	r3, #4096
 369 0038 0BD0     		beq	.L30
 370              	.L24:
1286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 371              		.loc 1 1286 0
 372 003a 0D4B     		ldr	r3, .L31
 373 003c 4366     		str	r3, [r0, #100]
 374              	.L25:
1290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 375              		.loc 1 1290 0
 376 003e 0023     		movs	r3, #0
 377 0040 80F87030 		strb	r3, [r0, #112]
1296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
ARM GAS  /tmp/ccyzTMkC.s 			page 73


 378              		.loc 1 1296 0
 379 0044 0168     		ldr	r1, [r0]
 380              	.LVL14:
 381 0046 0A68     		ldr	r2, [r1]
 382              	.LVL15:
 383 0048 42F08002 		orr	r2, r2, #128
 384 004c 0A60     		str	r2, [r1]
 385              	.LVL16:
1300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 386              		.loc 1 1300 0
 387 004e 1846     		mov	r0, r3
 388              	.LVL17:
 389 0050 7047     		bx	lr
 390              	.LVL18:
 391              	.L30:
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 392              		.loc 1 1280 0 discriminator 1
 393 0052 0369     		ldr	r3, [r0, #16]
 394 0054 002B     		cmp	r3, #0
 395 0056 F0D1     		bne	.L24
1282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 396              		.loc 1 1282 0
 397 0058 064B     		ldr	r3, .L31+4
 398 005a 4366     		str	r3, [r0, #100]
 399 005c EFE7     		b	.L25
 400              	.L26:
1304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 401              		.loc 1 1304 0
 402 005e 0220     		movs	r0, #2
 403              	.LVL19:
 404 0060 7047     		bx	lr
 405              	.LVL20:
 406              	.L27:
1242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 407              		.loc 1 1242 0
 408 0062 0120     		movs	r0, #1
 409              	.LVL21:
 410 0064 7047     		bx	lr
 411              	.LVL22:
 412              	.L28:
 413 0066 0120     		movs	r0, #1
 414              	.LVL23:
 415 0068 7047     		bx	lr
 416              	.LVL24:
 417              	.L29:
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 418              		.loc 1 1246 0
 419 006a 0220     		movs	r0, #2
 420              	.LVL25:
1306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 421              		.loc 1 1306 0
 422 006c 7047     		bx	lr
 423              	.L32:
 424 006e 00BF     		.align	2
 425              	.L31:
 426 0070 00000000 		.word	UART_TxISR_8BIT
 427 0074 00000000 		.word	UART_TxISR_16BIT
ARM GAS  /tmp/ccyzTMkC.s 			page 74


 428              		.cfi_endproc
 429              	.LFE132:
 431              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 432              		.align	1
 433              		.global	HAL_UART_Receive_IT
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	HAL_UART_Receive_IT:
 440              	.LFB133:
1316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 441              		.loc 1 1316 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL26:
1318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 447              		.loc 1 1318 0
 448 0000 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 449 0004 DBB2     		uxtb	r3, r3
 450 0006 202B     		cmp	r3, #32
 451 0008 58D1     		bne	.L43
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 452              		.loc 1 1320 0
 453 000a 0029     		cmp	r1, #0
 454 000c 58D0     		beq	.L44
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 455              		.loc 1 1320 0 is_stmt 0 discriminator 1
 456 000e 002A     		cmp	r2, #0
 457 0010 58D0     		beq	.L45
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 458              		.loc 1 1326 0 is_stmt 1
 459 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 460 0016 012B     		cmp	r3, #1
 461 0018 56D0     		beq	.L46
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462              		.loc 1 1326 0 is_stmt 0 discriminator 2
 463 001a 0123     		movs	r3, #1
 464 001c 80F87030 		strb	r3, [r0, #112]
1328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 465              		.loc 1 1328 0 is_stmt 1 discriminator 2
 466 0020 4165     		str	r1, [r0, #84]
1329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 467              		.loc 1 1329 0 discriminator 2
 468 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
1330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 469              		.loc 1 1330 0 discriminator 2
 470 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
1331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 471              		.loc 1 1331 0 discriminator 2
 472 002a 0023     		movs	r3, #0
 473 002c 0366     		str	r3, [r0, #96]
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 474              		.loc 1 1334 0 discriminator 2
 475 002e 8368     		ldr	r3, [r0, #8]
ARM GAS  /tmp/ccyzTMkC.s 			page 75


 476 0030 B3F5805F 		cmp	r3, #4096
 477 0034 06D0     		beq	.L47
 478 0036 A3B9     		cbnz	r3, .L38
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 479              		.loc 1 1334 0 is_stmt 0 discriminator 5
 480 0038 0369     		ldr	r3, [r0, #16]
 481 003a 73B9     		cbnz	r3, .L39
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 482              		.loc 1 1334 0 discriminator 7
 483 003c FF23     		movs	r3, #255
 484 003e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 485 0042 11E0     		b	.L37
 486              	.L47:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 487              		.loc 1 1334 0 discriminator 1
 488 0044 0369     		ldr	r3, [r0, #16]
 489 0046 23B9     		cbnz	r3, .L36
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 490              		.loc 1 1334 0 discriminator 3
 491 0048 40F2FF13 		movw	r3, #511
 492 004c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 493 0050 0AE0     		b	.L37
 494              	.L36:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 495              		.loc 1 1334 0 discriminator 4
 496 0052 FF23     		movs	r3, #255
 497 0054 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 498 0058 06E0     		b	.L37
 499              	.L39:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 500              		.loc 1 1334 0 discriminator 8
 501 005a 7F23     		movs	r3, #127
 502 005c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 503 0060 02E0     		b	.L37
 504              	.L38:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 505              		.loc 1 1334 0 discriminator 6
 506 0062 B3F1805F 		cmp	r3, #268435456
 507 0066 19D0     		beq	.L48
 508              	.L37:
1336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 509              		.loc 1 1336 0 is_stmt 1
 510 0068 0023     		movs	r3, #0
 511 006a 4367     		str	r3, [r0, #116]
1337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 512              		.loc 1 1337 0
 513 006c 2223     		movs	r3, #34
 514 006e 80F87230 		strb	r3, [r0, #114]
1340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 515              		.loc 1 1340 0
 516 0072 0268     		ldr	r2, [r0]
 517              	.LVL27:
 518 0074 9368     		ldr	r3, [r2, #8]
 519 0076 43F00103 		orr	r3, r3, #1
 520 007a 9360     		str	r3, [r2, #8]
 521              	.LVL28:
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
ARM GAS  /tmp/ccyzTMkC.s 			page 76


 522              		.loc 1 1367 0
 523 007c 8368     		ldr	r3, [r0, #8]
 524 007e B3F5805F 		cmp	r3, #4096
 525 0082 15D0     		beq	.L49
 526              	.L41:
1373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 527              		.loc 1 1373 0
 528 0084 114B     		ldr	r3, .L50
 529 0086 0366     		str	r3, [r0, #96]
 530              	.L42:
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 531              		.loc 1 1377 0
 532 0088 0023     		movs	r3, #0
 533 008a 80F87030 		strb	r3, [r0, #112]
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 534              		.loc 1 1383 0
 535 008e 0168     		ldr	r1, [r0]
 536              	.LVL29:
 537 0090 0A68     		ldr	r2, [r1]
 538 0092 42F49072 		orr	r2, r2, #288
 539 0096 0A60     		str	r2, [r1]
1387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 540              		.loc 1 1387 0
 541 0098 1846     		mov	r0, r3
 542              	.LVL30:
 543 009a 7047     		bx	lr
 544              	.LVL31:
 545              	.L48:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 546              		.loc 1 1334 0 discriminator 9
 547 009c 0369     		ldr	r3, [r0, #16]
 548 009e 1BB9     		cbnz	r3, .L40
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 549              		.loc 1 1334 0 is_stmt 0 discriminator 10
 550 00a0 7F23     		movs	r3, #127
 551 00a2 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 552 00a6 DFE7     		b	.L37
 553              	.L40:
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 554              		.loc 1 1334 0 discriminator 11
 555 00a8 3F23     		movs	r3, #63
 556 00aa A0F85C30 		strh	r3, [r0, #92]	@ movhi
 557 00ae DBE7     		b	.L37
 558              	.LVL32:
 559              	.L49:
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 560              		.loc 1 1367 0 is_stmt 1 discriminator 1
 561 00b0 0369     		ldr	r3, [r0, #16]
 562 00b2 002B     		cmp	r3, #0
 563 00b4 E6D1     		bne	.L41
1369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 564              		.loc 1 1369 0
 565 00b6 064B     		ldr	r3, .L50+4
 566 00b8 0366     		str	r3, [r0, #96]
 567 00ba E5E7     		b	.L42
 568              	.LVL33:
 569              	.L43:
ARM GAS  /tmp/ccyzTMkC.s 			page 77


1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 570              		.loc 1 1391 0
 571 00bc 0220     		movs	r0, #2
 572              	.LVL34:
 573 00be 7047     		bx	lr
 574              	.LVL35:
 575              	.L44:
1322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 576              		.loc 1 1322 0
 577 00c0 0120     		movs	r0, #1
 578              	.LVL36:
 579 00c2 7047     		bx	lr
 580              	.LVL37:
 581              	.L45:
 582 00c4 0120     		movs	r0, #1
 583              	.LVL38:
 584 00c6 7047     		bx	lr
 585              	.LVL39:
 586              	.L46:
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587              		.loc 1 1326 0
 588 00c8 0220     		movs	r0, #2
 589              	.LVL40:
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 590              		.loc 1 1393 0
 591 00ca 7047     		bx	lr
 592              	.L51:
 593              		.align	2
 594              	.L50:
 595 00cc 00000000 		.word	UART_RxISR_8BIT
 596 00d0 00000000 		.word	UART_RxISR_16BIT
 597              		.cfi_endproc
 598              	.LFE133:
 600              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 601              		.align	1
 602              		.global	HAL_UART_Transmit_DMA
 603              		.syntax unified
 604              		.thumb
 605              		.thumb_func
 606              		.fpu fpv4-sp-d16
 608              	HAL_UART_Transmit_DMA:
 609              	.LFB134:
1403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 610              		.loc 1 1403 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614              	.LVL41:
 615 0000 38B5     		push	{r3, r4, r5, lr}
 616              	.LCFI2:
 617              		.cfi_def_cfa_offset 16
 618              		.cfi_offset 3, -16
 619              		.cfi_offset 4, -12
 620              		.cfi_offset 5, -8
 621              		.cfi_offset 14, -4
1405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 622              		.loc 1 1405 0
ARM GAS  /tmp/ccyzTMkC.s 			page 78


 623 0002 90F87150 		ldrb	r5, [r0, #113]	@ zero_extendqisi2
 624 0006 EDB2     		uxtb	r5, r5
 625 0008 202D     		cmp	r5, #32
 626 000a 33D1     		bne	.L54
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 627              		.loc 1 1407 0
 628 000c 0029     		cmp	r1, #0
 629 000e 33D0     		beq	.L55
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 630              		.loc 1 1407 0 is_stmt 0 discriminator 1
 631 0010 002A     		cmp	r2, #0
 632 0012 33D0     		beq	.L56
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 633              		.loc 1 1413 0 is_stmt 1
 634 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 635 0018 012B     		cmp	r3, #1
 636 001a 31D0     		beq	.L57
 637 001c 1346     		mov	r3, r2
 638 001e 0446     		mov	r4, r0
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 639              		.loc 1 1413 0 is_stmt 0 discriminator 2
 640 0020 0122     		movs	r2, #1
 641              	.LVL42:
 642 0022 80F87020 		strb	r2, [r0, #112]
1415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 643              		.loc 1 1415 0 is_stmt 1 discriminator 2
 644 0026 C164     		str	r1, [r0, #76]
1416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 645              		.loc 1 1416 0 discriminator 2
 646 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
1417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 647              		.loc 1 1417 0 discriminator 2
 648 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
1419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 649              		.loc 1 1419 0 discriminator 2
 650 0030 0025     		movs	r5, #0
 651 0032 4567     		str	r5, [r0, #116]
1420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 652              		.loc 1 1420 0 discriminator 2
 653 0034 2122     		movs	r2, #33
 654 0036 80F87120 		strb	r2, [r0, #113]
1423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 655              		.loc 1 1423 0 discriminator 2
 656 003a 826E     		ldr	r2, [r0, #104]
 657 003c 1149     		ldr	r1, .L59
 658              	.LVL43:
 659 003e D162     		str	r1, [r2, #44]
 660              	.LVL44:
1426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 661              		.loc 1 1426 0 discriminator 2
 662 0040 826E     		ldr	r2, [r0, #104]
 663 0042 1149     		ldr	r1, .L59+4
 664 0044 1163     		str	r1, [r2, #48]
1429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665              		.loc 1 1429 0 discriminator 2
 666 0046 826E     		ldr	r2, [r0, #104]
 667 0048 1049     		ldr	r1, .L59+8
ARM GAS  /tmp/ccyzTMkC.s 			page 79


 668 004a 5163     		str	r1, [r2, #52]
1432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 669              		.loc 1 1432 0 discriminator 2
 670 004c 826E     		ldr	r2, [r0, #104]
 671 004e 9563     		str	r5, [r2, #56]
1435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 672              		.loc 1 1435 0 discriminator 2
 673 0050 0268     		ldr	r2, [r0]
 674 0052 2832     		adds	r2, r2, #40
 675 0054 C16C     		ldr	r1, [r0, #76]
 676 0056 806E     		ldr	r0, [r0, #104]
 677              	.LVL45:
 678 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 679              	.LVL46:
1438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680              		.loc 1 1438 0 discriminator 2
 681 005c 2368     		ldr	r3, [r4]
 682 005e 4022     		movs	r2, #64
 683 0060 1A62     		str	r2, [r3, #32]
1441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 684              		.loc 1 1441 0 discriminator 2
 685 0062 84F87050 		strb	r5, [r4, #112]
1445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 686              		.loc 1 1445 0 discriminator 2
 687 0066 2268     		ldr	r2, [r4]
 688 0068 9368     		ldr	r3, [r2, #8]
 689 006a 43F08003 		orr	r3, r3, #128
 690 006e 9360     		str	r3, [r2, #8]
1447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 691              		.loc 1 1447 0 discriminator 2
 692 0070 2846     		mov	r0, r5
 693 0072 00E0     		b	.L53
 694              	.LVL47:
 695              	.L54:
1451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 696              		.loc 1 1451 0
 697 0074 0220     		movs	r0, #2
 698              	.LVL48:
 699              	.L53:
1453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 700              		.loc 1 1453 0
 701 0076 38BD     		pop	{r3, r4, r5, pc}
 702              	.LVL49:
 703              	.L55:
1409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 704              		.loc 1 1409 0
 705 0078 0120     		movs	r0, #1
 706              	.LVL50:
 707 007a FCE7     		b	.L53
 708              	.LVL51:
 709              	.L56:
 710 007c 0120     		movs	r0, #1
 711              	.LVL52:
 712 007e FAE7     		b	.L53
 713              	.LVL53:
 714              	.L57:
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 80


 715              		.loc 1 1413 0
 716 0080 0220     		movs	r0, #2
 717              	.LVL54:
 718 0082 F8E7     		b	.L53
 719              	.L60:
 720              		.align	2
 721              	.L59:
 722 0084 00000000 		.word	UART_DMATransmitCplt
 723 0088 00000000 		.word	UART_DMATxHalfCplt
 724 008c 00000000 		.word	UART_DMAError
 725              		.cfi_endproc
 726              	.LFE134:
 728              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 729              		.align	1
 730              		.global	HAL_UART_Receive_DMA
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 734              		.fpu fpv4-sp-d16
 736              	HAL_UART_Receive_DMA:
 737              	.LFB135:
1465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 738              		.loc 1 1465 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL55:
 743 0000 38B5     		push	{r3, r4, r5, lr}
 744              	.LCFI3:
 745              		.cfi_def_cfa_offset 16
 746              		.cfi_offset 3, -16
 747              		.cfi_offset 4, -12
 748              		.cfi_offset 5, -8
 749              		.cfi_offset 14, -4
1467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 750              		.loc 1 1467 0
 751 0002 90F87250 		ldrb	r5, [r0, #114]	@ zero_extendqisi2
 752 0006 EDB2     		uxtb	r5, r5
 753 0008 202D     		cmp	r5, #32
 754 000a 38D1     		bne	.L63
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 755              		.loc 1 1469 0
 756 000c 0029     		cmp	r1, #0
 757 000e 38D0     		beq	.L64
1469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 758              		.loc 1 1469 0 is_stmt 0 discriminator 1
 759 0010 002A     		cmp	r2, #0
 760 0012 38D0     		beq	.L65
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 761              		.loc 1 1475 0 is_stmt 1
 762 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 763 0018 012B     		cmp	r3, #1
 764 001a 36D0     		beq	.L66
 765 001c 1346     		mov	r3, r2
 766 001e 0446     		mov	r4, r0
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 767              		.loc 1 1475 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccyzTMkC.s 			page 81


 768 0020 0122     		movs	r2, #1
 769              	.LVL56:
 770 0022 80F87020 		strb	r2, [r0, #112]
1477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 771              		.loc 1 1477 0 is_stmt 1 discriminator 2
 772 0026 4165     		str	r1, [r0, #84]
1478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 773              		.loc 1 1478 0 discriminator 2
 774 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 775              		.loc 1 1480 0 discriminator 2
 776 002c 0025     		movs	r5, #0
 777 002e 4567     		str	r5, [r0, #116]
1481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 778              		.loc 1 1481 0 discriminator 2
 779 0030 2222     		movs	r2, #34
 780 0032 80F87220 		strb	r2, [r0, #114]
1484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 781              		.loc 1 1484 0 discriminator 2
 782 0036 C26E     		ldr	r2, [r0, #108]
 783 0038 1549     		ldr	r1, .L68
 784              	.LVL57:
 785 003a D162     		str	r1, [r2, #44]
 786              	.LVL58:
1487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 787              		.loc 1 1487 0 discriminator 2
 788 003c C26E     		ldr	r2, [r0, #108]
 789 003e 1549     		ldr	r1, .L68+4
 790 0040 1163     		str	r1, [r2, #48]
1490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 791              		.loc 1 1490 0 discriminator 2
 792 0042 C26E     		ldr	r2, [r0, #108]
 793 0044 1449     		ldr	r1, .L68+8
 794 0046 5163     		str	r1, [r2, #52]
1493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 795              		.loc 1 1493 0 discriminator 2
 796 0048 C26E     		ldr	r2, [r0, #108]
 797 004a 9563     		str	r5, [r2, #56]
1496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 798              		.loc 1 1496 0 discriminator 2
 799 004c 0168     		ldr	r1, [r0]
 800 004e 426D     		ldr	r2, [r0, #84]
 801 0050 2431     		adds	r1, r1, #36
 802 0052 C06E     		ldr	r0, [r0, #108]
 803              	.LVL59:
 804 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 805              	.LVL60:
1499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 806              		.loc 1 1499 0 discriminator 2
 807 0058 84F87050 		strb	r5, [r4, #112]
1502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 808              		.loc 1 1502 0 discriminator 2
 809 005c 2268     		ldr	r2, [r4]
 810 005e 1368     		ldr	r3, [r2]
 811 0060 43F48073 		orr	r3, r3, #256
 812 0064 1360     		str	r3, [r2]
1505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 82


 813              		.loc 1 1505 0 discriminator 2
 814 0066 2268     		ldr	r2, [r4]
 815 0068 9368     		ldr	r3, [r2, #8]
 816 006a 43F00103 		orr	r3, r3, #1
 817 006e 9360     		str	r3, [r2, #8]
1509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 818              		.loc 1 1509 0 discriminator 2
 819 0070 2268     		ldr	r2, [r4]
 820 0072 9368     		ldr	r3, [r2, #8]
 821 0074 43F04003 		orr	r3, r3, #64
 822 0078 9360     		str	r3, [r2, #8]
1511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 823              		.loc 1 1511 0 discriminator 2
 824 007a 2846     		mov	r0, r5
 825 007c 00E0     		b	.L62
 826              	.LVL61:
 827              	.L63:
1515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 828              		.loc 1 1515 0
 829 007e 0220     		movs	r0, #2
 830              	.LVL62:
 831              	.L62:
1517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 832              		.loc 1 1517 0
 833 0080 38BD     		pop	{r3, r4, r5, pc}
 834              	.LVL63:
 835              	.L64:
1471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 836              		.loc 1 1471 0
 837 0082 0120     		movs	r0, #1
 838              	.LVL64:
 839 0084 FCE7     		b	.L62
 840              	.LVL65:
 841              	.L65:
 842 0086 0120     		movs	r0, #1
 843              	.LVL66:
 844 0088 FAE7     		b	.L62
 845              	.LVL67:
 846              	.L66:
1475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 847              		.loc 1 1475 0
 848 008a 0220     		movs	r0, #2
 849              	.LVL68:
 850 008c F8E7     		b	.L62
 851              	.L69:
 852 008e 00BF     		.align	2
 853              	.L68:
 854 0090 00000000 		.word	UART_DMAReceiveCplt
 855 0094 00000000 		.word	UART_DMARxHalfCplt
 856 0098 00000000 		.word	UART_DMAError
 857              		.cfi_endproc
 858              	.LFE135:
 860              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 861              		.align	1
 862              		.global	HAL_UART_DMAPause
 863              		.syntax unified
 864              		.thumb
ARM GAS  /tmp/ccyzTMkC.s 			page 83


 865              		.thumb_func
 866              		.fpu fpv4-sp-d16
 868              	HAL_UART_DMAPause:
 869              	.LFB136:
1525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 870              		.loc 1 1525 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		@ link register save eliminated.
 875              	.LVL69:
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 876              		.loc 1 1527 0
 877 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 878 0004 012B     		cmp	r3, #1
 879 0006 2FD0     		beq	.L74
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 880              		.loc 1 1527 0 is_stmt 0 discriminator 2
 881 0008 0123     		movs	r3, #1
 882 000a 80F87030 		strb	r3, [r0, #112]
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 883              		.loc 1 1529 0 is_stmt 1 discriminator 2
 884 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 885 0012 DBB2     		uxtb	r3, r3
 886 0014 212B     		cmp	r3, #33
 887 0016 09D0     		beq	.L75
 888              	.L72:
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 889              		.loc 1 1535 0
 890 0018 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 891 001c DBB2     		uxtb	r3, r3
 892 001e 222B     		cmp	r3, #34
 893 0020 0ED0     		beq	.L76
 894              	.L73:
1547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895              		.loc 1 1547 0
 896 0022 0023     		movs	r3, #0
 897 0024 80F87030 		strb	r3, [r0, #112]
1549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 898              		.loc 1 1549 0
 899 0028 1846     		mov	r0, r3
 900              	.LVL70:
 901 002a 7047     		bx	lr
 902              	.LVL71:
 903              	.L75:
1530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 904              		.loc 1 1530 0 discriminator 1
 905 002c 0368     		ldr	r3, [r0]
 906 002e 9A68     		ldr	r2, [r3, #8]
1529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 907              		.loc 1 1529 0 discriminator 1
 908 0030 12F0800F 		tst	r2, #128
 909 0034 F0D0     		beq	.L72
1533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 910              		.loc 1 1533 0
 911 0036 9A68     		ldr	r2, [r3, #8]
 912 0038 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/ccyzTMkC.s 			page 84


 913 003c 9A60     		str	r2, [r3, #8]
 914 003e EBE7     		b	.L72
 915              	.L76:
1536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 916              		.loc 1 1536 0 discriminator 1
 917 0040 0368     		ldr	r3, [r0]
 918 0042 9A68     		ldr	r2, [r3, #8]
1535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 919              		.loc 1 1535 0 discriminator 1
 920 0044 12F0400F 		tst	r2, #64
 921 0048 EBD0     		beq	.L73
1539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 922              		.loc 1 1539 0
 923 004a 1A68     		ldr	r2, [r3]
 924 004c 22F48072 		bic	r2, r2, #256
 925 0050 1A60     		str	r2, [r3]
1540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 926              		.loc 1 1540 0
 927 0052 0268     		ldr	r2, [r0]
 928 0054 9368     		ldr	r3, [r2, #8]
 929 0056 23F00103 		bic	r3, r3, #1
 930 005a 9360     		str	r3, [r2, #8]
1543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 931              		.loc 1 1543 0
 932 005c 0268     		ldr	r2, [r0]
 933 005e 9368     		ldr	r3, [r2, #8]
 934 0060 23F04003 		bic	r3, r3, #64
 935 0064 9360     		str	r3, [r2, #8]
 936 0066 DCE7     		b	.L73
 937              	.L74:
1527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 938              		.loc 1 1527 0
 939 0068 0220     		movs	r0, #2
 940              	.LVL72:
1550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 941              		.loc 1 1550 0
 942 006a 7047     		bx	lr
 943              		.cfi_endproc
 944              	.LFE136:
 946              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 947              		.align	1
 948              		.global	HAL_UART_DMAResume
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu fpv4-sp-d16
 954              	HAL_UART_DMAResume:
 955              	.LFB137:
1558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 956              		.loc 1 1558 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              		@ link register save eliminated.
 961              	.LVL73:
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 962              		.loc 1 1560 0
ARM GAS  /tmp/ccyzTMkC.s 			page 85


 963 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 964 0004 012B     		cmp	r3, #1
 965 0006 2AD0     		beq	.L81
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 966              		.loc 1 1560 0 is_stmt 0 discriminator 2
 967 0008 0123     		movs	r3, #1
 968 000a 80F87030 		strb	r3, [r0, #112]
1562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 969              		.loc 1 1562 0 is_stmt 1 discriminator 2
 970 000e 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 971 0012 DBB2     		uxtb	r3, r3
 972 0014 212B     		cmp	r3, #33
 973 0016 09D0     		beq	.L82
 974              	.L79:
1567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 975              		.loc 1 1567 0
 976 0018 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 977 001c DBB2     		uxtb	r3, r3
 978 001e 222B     		cmp	r3, #34
 979 0020 0AD0     		beq	.L83
 980              	.L80:
1581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 981              		.loc 1 1581 0
 982 0022 0023     		movs	r3, #0
 983 0024 80F87030 		strb	r3, [r0, #112]
1583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 984              		.loc 1 1583 0
 985 0028 1846     		mov	r0, r3
 986              	.LVL74:
 987 002a 7047     		bx	lr
 988              	.LVL75:
 989              	.L82:
1565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 990              		.loc 1 1565 0
 991 002c 0268     		ldr	r2, [r0]
 992 002e 9368     		ldr	r3, [r2, #8]
 993 0030 43F08003 		orr	r3, r3, #128
 994 0034 9360     		str	r3, [r2, #8]
 995 0036 EFE7     		b	.L79
 996              	.L83:
1570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 997              		.loc 1 1570 0
 998 0038 0368     		ldr	r3, [r0]
 999 003a 0822     		movs	r2, #8
 1000 003c 1A62     		str	r2, [r3, #32]
1573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1001              		.loc 1 1573 0
 1002 003e 0268     		ldr	r2, [r0]
 1003 0040 1368     		ldr	r3, [r2]
 1004 0042 43F48073 		orr	r3, r3, #256
 1005 0046 1360     		str	r3, [r2]
1574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1006              		.loc 1 1574 0
 1007 0048 0268     		ldr	r2, [r0]
 1008 004a 9368     		ldr	r3, [r2, #8]
 1009 004c 43F00103 		orr	r3, r3, #1
 1010 0050 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccyzTMkC.s 			page 86


1577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1011              		.loc 1 1577 0
 1012 0052 0268     		ldr	r2, [r0]
 1013 0054 9368     		ldr	r3, [r2, #8]
 1014 0056 43F04003 		orr	r3, r3, #64
 1015 005a 9360     		str	r3, [r2, #8]
 1016 005c E1E7     		b	.L80
 1017              	.L81:
1560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1018              		.loc 1 1560 0
 1019 005e 0220     		movs	r0, #2
 1020              	.LVL76:
1584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1021              		.loc 1 1584 0
 1022 0060 7047     		bx	lr
 1023              		.cfi_endproc
 1024              	.LFE137:
 1026              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1027              		.align	1
 1028              		.global	HAL_UART_DMAStop
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	HAL_UART_DMAStop:
 1035              	.LFB138:
1592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1036              		.loc 1 1592 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              	.LVL77:
 1041 0000 10B5     		push	{r4, lr}
 1042              	.LCFI4:
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 4, -8
 1045              		.cfi_offset 14, -4
 1046 0002 0446     		mov	r4, r0
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1047              		.loc 1 1601 0
 1048 0004 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 1049 0008 DBB2     		uxtb	r3, r3
 1050 000a 212B     		cmp	r3, #33
 1051 000c 06D0     		beq	.L90
 1052              	.LVL78:
 1053              	.L85:
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1054              		.loc 1 1616 0
 1055 000e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1056 0012 DBB2     		uxtb	r3, r3
 1057 0014 222B     		cmp	r3, #34
 1058 0016 12D0     		beq	.L91
 1059              	.L87:
1631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1060              		.loc 1 1631 0
 1061 0018 0020     		movs	r0, #0
 1062 001a 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccyzTMkC.s 			page 87


 1063              	.LVL79:
 1064              	.L90:
1602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1065              		.loc 1 1602 0 discriminator 1
 1066 001c 0368     		ldr	r3, [r0]
 1067 001e 9A68     		ldr	r2, [r3, #8]
1601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1068              		.loc 1 1601 0 discriminator 1
 1069 0020 12F0800F 		tst	r2, #128
 1070 0024 F3D0     		beq	.L85
1604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1071              		.loc 1 1604 0
 1072 0026 9A68     		ldr	r2, [r3, #8]
 1073 0028 22F08002 		bic	r2, r2, #128
 1074 002c 9A60     		str	r2, [r3, #8]
1607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1075              		.loc 1 1607 0
 1076 002e 806E     		ldr	r0, [r0, #104]
 1077              	.LVL80:
 1078 0030 08B1     		cbz	r0, .L86
1609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1079              		.loc 1 1609 0
 1080 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1081              	.LVL81:
 1082              	.L86:
1612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1083              		.loc 1 1612 0
 1084 0036 2046     		mov	r0, r4
 1085 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 1086              	.LVL82:
 1087 003c E7E7     		b	.L85
 1088              	.L91:
1617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1089              		.loc 1 1617 0 discriminator 1
 1090 003e 2368     		ldr	r3, [r4]
 1091 0040 9A68     		ldr	r2, [r3, #8]
1616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1092              		.loc 1 1616 0 discriminator 1
 1093 0042 12F0400F 		tst	r2, #64
 1094 0046 E7D0     		beq	.L87
1619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1095              		.loc 1 1619 0
 1096 0048 9A68     		ldr	r2, [r3, #8]
 1097 004a 22F04002 		bic	r2, r2, #64
 1098 004e 9A60     		str	r2, [r3, #8]
1622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1099              		.loc 1 1622 0
 1100 0050 E06E     		ldr	r0, [r4, #108]
 1101 0052 08B1     		cbz	r0, .L88
1624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1102              		.loc 1 1624 0
 1103 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1104              	.LVL83:
 1105              	.L88:
1627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1106              		.loc 1 1627 0
 1107 0058 2046     		mov	r0, r4
ARM GAS  /tmp/ccyzTMkC.s 			page 88


 1108 005a FFF7FEFF 		bl	UART_EndRxTransfer
 1109              	.LVL84:
 1110 005e DBE7     		b	.L87
 1111              		.cfi_endproc
 1112              	.LFE138:
 1114              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1115              		.align	1
 1116              		.global	HAL_UART_Abort
 1117              		.syntax unified
 1118              		.thumb
 1119              		.thumb_func
 1120              		.fpu fpv4-sp-d16
 1122              	HAL_UART_Abort:
 1123              	.LFB139:
1646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1124              		.loc 1 1646 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL85:
 1129 0000 10B5     		push	{r4, lr}
 1130              	.LCFI5:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 4, -8
 1133              		.cfi_offset 14, -4
 1134 0002 0446     		mov	r4, r0
1653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1135              		.loc 1 1653 0
 1136 0004 0268     		ldr	r2, [r0]
 1137 0006 1368     		ldr	r3, [r2]
 1138 0008 23F4F073 		bic	r3, r3, #480
 1139 000c 1360     		str	r3, [r2]
1654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1140              		.loc 1 1654 0
 1141 000e 0268     		ldr	r2, [r0]
 1142 0010 9368     		ldr	r3, [r2, #8]
 1143 0012 23F00103 		bic	r3, r3, #1
 1144 0016 9360     		str	r3, [r2, #8]
1658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1145              		.loc 1 1658 0
 1146 0018 0368     		ldr	r3, [r0]
 1147 001a 9A68     		ldr	r2, [r3, #8]
 1148 001c 12F0800F 		tst	r2, #128
 1149 0020 0AD0     		beq	.L93
1660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1150              		.loc 1 1660 0
 1151 0022 9A68     		ldr	r2, [r3, #8]
 1152 0024 22F08002 		bic	r2, r2, #128
 1153 0028 9A60     		str	r2, [r3, #8]
1663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1154              		.loc 1 1663 0
 1155 002a 836E     		ldr	r3, [r0, #104]
 1156 002c 23B1     		cbz	r3, .L93
1667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1157              		.loc 1 1667 0
 1158 002e 0022     		movs	r2, #0
 1159 0030 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccyzTMkC.s 			page 89


1669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1160              		.loc 1 1669 0
 1161 0032 806E     		ldr	r0, [r0, #104]
 1162              	.LVL86:
 1163 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1164              	.LVL87:
 1165              	.L93:
1674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1166              		.loc 1 1674 0
 1167 0038 2368     		ldr	r3, [r4]
 1168 003a 9A68     		ldr	r2, [r3, #8]
 1169 003c 12F0400F 		tst	r2, #64
 1170 0040 0AD0     		beq	.L94
1676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1171              		.loc 1 1676 0
 1172 0042 9A68     		ldr	r2, [r3, #8]
 1173 0044 22F04002 		bic	r2, r2, #64
 1174 0048 9A60     		str	r2, [r3, #8]
1679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1175              		.loc 1 1679 0
 1176 004a E36E     		ldr	r3, [r4, #108]
 1177 004c 23B1     		cbz	r3, .L94
1683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1178              		.loc 1 1683 0
 1179 004e 0022     		movs	r2, #0
 1180 0050 9A63     		str	r2, [r3, #56]
1685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1181              		.loc 1 1685 0
 1182 0052 E06E     		ldr	r0, [r4, #108]
 1183 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 1184              	.LVL88:
 1185              	.L94:
1690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1186              		.loc 1 1690 0
 1187 0058 0020     		movs	r0, #0
 1188 005a A4F85200 		strh	r0, [r4, #82]	@ movhi
1691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1189              		.loc 1 1691 0
 1190 005e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1191              		.loc 1 1694 0
 1192 0062 2368     		ldr	r3, [r4]
 1193 0064 0F22     		movs	r2, #15
 1194 0066 1A62     		str	r2, [r3, #32]
1705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1195              		.loc 1 1705 0
 1196 0068 2268     		ldr	r2, [r4]
 1197 006a 138B     		ldrh	r3, [r2, #24]
 1198 006c 43F00803 		orr	r3, r3, #8
 1199 0070 1383     		strh	r3, [r2, #24]	@ movhi
1708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1200              		.loc 1 1708 0
 1201 0072 2023     		movs	r3, #32
 1202 0074 84F87130 		strb	r3, [r4, #113]
1709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1203              		.loc 1 1709 0
 1204 0078 84F87230 		strb	r3, [r4, #114]
ARM GAS  /tmp/ccyzTMkC.s 			page 90


1712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1205              		.loc 1 1712 0
 1206 007c 6067     		str	r0, [r4, #116]
1715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1207              		.loc 1 1715 0
 1208 007e 10BD     		pop	{r4, pc}
 1209              		.cfi_endproc
 1210              	.LFE139:
 1212              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1213              		.align	1
 1214              		.global	HAL_UART_AbortTransmit
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu fpv4-sp-d16
 1220              	HAL_UART_AbortTransmit:
 1221              	.LFB140:
1730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1222              		.loc 1 1730 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL89:
 1227 0000 10B5     		push	{r4, lr}
 1228              	.LCFI6:
 1229              		.cfi_def_cfa_offset 8
 1230              		.cfi_offset 4, -8
 1231              		.cfi_offset 14, -4
 1232 0002 0446     		mov	r4, r0
1737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1233              		.loc 1 1737 0
 1234 0004 0268     		ldr	r2, [r0]
 1235 0006 1368     		ldr	r3, [r2]
 1236 0008 23F0C003 		bic	r3, r3, #192
 1237 000c 1360     		str	r3, [r2]
1741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1238              		.loc 1 1741 0
 1239 000e 0368     		ldr	r3, [r0]
 1240 0010 9A68     		ldr	r2, [r3, #8]
 1241 0012 12F0800F 		tst	r2, #128
 1242 0016 0AD0     		beq	.L97
1743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1243              		.loc 1 1743 0
 1244 0018 9A68     		ldr	r2, [r3, #8]
 1245 001a 22F08002 		bic	r2, r2, #128
 1246 001e 9A60     		str	r2, [r3, #8]
1746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1247              		.loc 1 1746 0
 1248 0020 836E     		ldr	r3, [r0, #104]
 1249 0022 23B1     		cbz	r3, .L97
1750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1250              		.loc 1 1750 0
 1251 0024 0022     		movs	r2, #0
 1252 0026 9A63     		str	r2, [r3, #56]
1752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1253              		.loc 1 1752 0
 1254 0028 806E     		ldr	r0, [r0, #104]
ARM GAS  /tmp/ccyzTMkC.s 			page 91


 1255              	.LVL90:
 1256 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1257              	.LVL91:
 1258              	.L97:
1757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1259              		.loc 1 1757 0
 1260 002e 0020     		movs	r0, #0
 1261 0030 A4F85200 		strh	r0, [r4, #82]	@ movhi
1768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1262              		.loc 1 1768 0
 1263 0034 2023     		movs	r3, #32
 1264 0036 84F87130 		strb	r3, [r4, #113]
1771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1265              		.loc 1 1771 0
 1266 003a 10BD     		pop	{r4, pc}
 1267              		.cfi_endproc
 1268              	.LFE140:
 1270              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1271              		.align	1
 1272              		.global	HAL_UART_AbortReceive
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv4-sp-d16
 1278              	HAL_UART_AbortReceive:
 1279              	.LFB141:
1786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 1280              		.loc 1 1786 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              	.LVL92:
 1285 0000 10B5     		push	{r4, lr}
 1286              	.LCFI7:
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 4, -8
 1289              		.cfi_offset 14, -4
 1290 0002 0446     		mov	r4, r0
1793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1291              		.loc 1 1793 0
 1292 0004 0268     		ldr	r2, [r0]
 1293 0006 1368     		ldr	r3, [r2]
 1294 0008 23F49073 		bic	r3, r3, #288
 1295 000c 1360     		str	r3, [r2]
1794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1296              		.loc 1 1794 0
 1297 000e 0268     		ldr	r2, [r0]
 1298 0010 9368     		ldr	r3, [r2, #8]
 1299 0012 23F00103 		bic	r3, r3, #1
 1300 0016 9360     		str	r3, [r2, #8]
1798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1301              		.loc 1 1798 0
 1302 0018 0368     		ldr	r3, [r0]
 1303 001a 9A68     		ldr	r2, [r3, #8]
 1304 001c 12F0400F 		tst	r2, #64
 1305 0020 0AD0     		beq	.L100
1800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 92


 1306              		.loc 1 1800 0
 1307 0022 9A68     		ldr	r2, [r3, #8]
 1308 0024 22F04002 		bic	r2, r2, #64
 1309 0028 9A60     		str	r2, [r3, #8]
1803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1310              		.loc 1 1803 0
 1311 002a C36E     		ldr	r3, [r0, #108]
 1312 002c 23B1     		cbz	r3, .L100
1807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1313              		.loc 1 1807 0
 1314 002e 0022     		movs	r2, #0
 1315 0030 9A63     		str	r2, [r3, #56]
1809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1316              		.loc 1 1809 0
 1317 0032 C06E     		ldr	r0, [r0, #108]
 1318              	.LVL93:
 1319 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1320              	.LVL94:
 1321              	.L100:
1814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1322              		.loc 1 1814 0
 1323 0038 0020     		movs	r0, #0
 1324 003a A4F85A00 		strh	r0, [r4, #90]	@ movhi
1817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1325              		.loc 1 1817 0
 1326 003e 2368     		ldr	r3, [r4]
 1327 0040 0F22     		movs	r2, #15
 1328 0042 1A62     		str	r2, [r3, #32]
1820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1329              		.loc 1 1820 0
 1330 0044 2268     		ldr	r2, [r4]
 1331 0046 138B     		ldrh	r3, [r2, #24]
 1332 0048 43F00803 		orr	r3, r3, #8
 1333 004c 1383     		strh	r3, [r2, #24]	@ movhi
1823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1334              		.loc 1 1823 0
 1335 004e 2023     		movs	r3, #32
 1336 0050 84F87230 		strb	r3, [r4, #114]
1826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1337              		.loc 1 1826 0
 1338 0054 10BD     		pop	{r4, pc}
 1339              		.cfi_endproc
 1340              	.LFE141:
 1342              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1343              		.align	1
 1344              		.weak	HAL_UART_TxCpltCallback
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1348              		.fpu fpv4-sp-d16
 1350              	HAL_UART_TxCpltCallback:
 1351              	.LFB146:
2426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1352              		.loc 1 2426 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccyzTMkC.s 			page 93


 1356              		@ link register save eliminated.
 1357              	.LVL95:
2433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1358              		.loc 1 2433 0
 1359 0000 7047     		bx	lr
 1360              		.cfi_endproc
 1361              	.LFE146:
 1363              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1364              		.align	1
 1365              		.syntax unified
 1366              		.thumb
 1367              		.thumb_func
 1368              		.fpu fpv4-sp-d16
 1370              	UART_DMATransmitCplt:
 1371              	.LFB168:
3296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1372              		.loc 1 3296 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              	.LVL96:
 1377 0000 08B5     		push	{r3, lr}
 1378              	.LCFI8:
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 3, -8
 1381              		.cfi_offset 14, -4
3297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1382              		.loc 1 3297 0
 1383 0002 836A     		ldr	r3, [r0, #40]
 1384              	.LVL97:
3300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1385              		.loc 1 3300 0
 1386 0004 0268     		ldr	r2, [r0]
 1387 0006 1268     		ldr	r2, [r2]
 1388 0008 12F0200F 		tst	r2, #32
 1389 000c 0DD1     		bne	.L104
3302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1390              		.loc 1 3302 0
 1391 000e 0022     		movs	r2, #0
 1392 0010 A3F85220 		strh	r2, [r3, #82]	@ movhi
3306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1393              		.loc 1 3306 0
 1394 0014 1968     		ldr	r1, [r3]
 1395 0016 8A68     		ldr	r2, [r1, #8]
 1396 0018 22F08002 		bic	r2, r2, #128
 1397 001c 8A60     		str	r2, [r1, #8]
3309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1398              		.loc 1 3309 0
 1399 001e 1A68     		ldr	r2, [r3]
 1400 0020 1368     		ldr	r3, [r2]
 1401              	.LVL98:
 1402 0022 43F04003 		orr	r3, r3, #64
 1403 0026 1360     		str	r3, [r2]
 1404              	.LVL99:
 1405              	.L103:
3322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1406              		.loc 1 3322 0
ARM GAS  /tmp/ccyzTMkC.s 			page 94


 1407 0028 08BD     		pop	{r3, pc}
 1408              	.LVL100:
 1409              	.L104:
3319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1410              		.loc 1 3319 0
 1411 002a 1846     		mov	r0, r3
 1412              	.LVL101:
 1413 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1414              	.LVL102:
3322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1415              		.loc 1 3322 0
 1416 0030 FAE7     		b	.L103
 1417              		.cfi_endproc
 1418              	.LFE168:
 1420              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1421              		.align	1
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv4-sp-d16
 1427              	UART_EndTransmit_IT:
 1428              	.LFB180:
3694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
3725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccyzTMkC.s 			page 95


3729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t   nb_tx_data;
3742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0 ; nb_tx_data--)
3747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != RESET)
3759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
3762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart pointer to a UART_HandleTypeDef structure that contains
3773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1429              		.loc 1 3777 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              	.LVL103:
 1434 0000 08B5     		push	{r3, lr}
 1435              	.LCFI9:
 1436              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccyzTMkC.s 			page 96


 1437              		.cfi_offset 3, -8
 1438              		.cfi_offset 14, -4
3778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1439              		.loc 1 3779 0
 1440 0002 0168     		ldr	r1, [r0]
 1441 0004 0A68     		ldr	r2, [r1]
 1442 0006 22F04002 		bic	r2, r2, #64
 1443 000a 0A60     		str	r2, [r1]
3780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1444              		.loc 1 3782 0
 1445 000c 2022     		movs	r2, #32
 1446 000e 80F87120 		strb	r2, [r0, #113]
3783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 1447              		.loc 1 3785 0
 1448 0012 0022     		movs	r2, #0
 1449 0014 4266     		str	r2, [r0, #100]
3786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1450              		.loc 1 3792 0
 1451 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1452              	.LVL104:
3793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1453              		.loc 1 3794 0
 1454 001a 08BD     		pop	{r3, pc}
 1455              		.cfi_endproc
 1456              	.LFE180:
 1458              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1459              		.align	1
 1460              		.weak	HAL_UART_TxHalfCpltCallback
 1461              		.syntax unified
 1462              		.thumb
 1463              		.thumb_func
 1464              		.fpu fpv4-sp-d16
 1466              	HAL_UART_TxHalfCpltCallback:
 1467              	.LFB147:
2441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1468              		.loc 1 2441 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473              	.LVL105:
2448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1474              		.loc 1 2448 0
 1475 0000 7047     		bx	lr
 1476              		.cfi_endproc
ARM GAS  /tmp/ccyzTMkC.s 			page 97


 1477              	.LFE147:
 1479              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1480              		.align	1
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv4-sp-d16
 1486              	UART_DMATxHalfCplt:
 1487              	.LFB169:
3330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1488              		.loc 1 3330 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL106:
 1493 0000 08B5     		push	{r3, lr}
 1494              	.LCFI10:
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 3, -8
 1497              		.cfi_offset 14, -4
 1498              	.LVL107:
3338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1499              		.loc 1 3338 0
 1500 0002 806A     		ldr	r0, [r0, #40]
 1501              	.LVL108:
 1502 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1503              	.LVL109:
3340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1504              		.loc 1 3340 0
 1505 0008 08BD     		pop	{r3, pc}
 1506              		.cfi_endproc
 1507              	.LFE169:
 1509              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1510              		.align	1
 1511              		.weak	HAL_UART_RxCpltCallback
 1512              		.syntax unified
 1513              		.thumb
 1514              		.thumb_func
 1515              		.fpu fpv4-sp-d16
 1517              	HAL_UART_RxCpltCallback:
 1518              	.LFB148:
2456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1519              		.loc 1 2456 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
 1524              	.LVL110:
2463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1525              		.loc 1 2463 0
 1526 0000 7047     		bx	lr
 1527              		.cfi_endproc
 1528              	.LFE148:
 1530              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1531              		.align	1
 1532              		.syntax unified
 1533              		.thumb
ARM GAS  /tmp/ccyzTMkC.s 			page 98


 1534              		.thumb_func
 1535              		.fpu fpv4-sp-d16
 1537              	UART_RxISR_8BIT:
 1538              	.LFB181:
3795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1539              		.loc 1 3802 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              	.LVL111:
3803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1544              		.loc 1 3803 0
 1545 0000 B0F85C20 		ldrh	r2, [r0, #92]
 1546              	.LVL112:
3804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1547              		.loc 1 3807 0
 1548 0004 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1549 0008 DBB2     		uxtb	r3, r3
 1550 000a 222B     		cmp	r3, #34
 1551 000c 05D0     		beq	.L120
3808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
3811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
3813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
3829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
ARM GAS  /tmp/ccyzTMkC.s 			page 99


3835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1552              		.loc 1 3842 0
 1553 000e 0268     		ldr	r2, [r0]
 1554              	.LVL113:
 1555 0010 138B     		ldrh	r3, [r2, #24]
 1556 0012 43F00803 		orr	r3, r3, #8
 1557 0016 1383     		strh	r3, [r2, #24]	@ movhi
 1558              	.LVL114:
 1559 0018 7047     		bx	lr
 1560              	.LVL115:
 1561              	.L120:
3802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1562              		.loc 1 3802 0
 1563 001a 10B5     		push	{r4, lr}
 1564              	.LCFI11:
 1565              		.cfi_def_cfa_offset 8
 1566              		.cfi_offset 4, -8
 1567              		.cfi_offset 14, -4
3809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 1568              		.loc 1 3809 0
 1569 001c 0368     		ldr	r3, [r0]
 1570 001e 998C     		ldrh	r1, [r3, #36]
 1571              	.LVL116:
3810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1572              		.loc 1 3810 0
 1573 0020 D2B2     		uxtb	r2, r2
 1574              	.LVL117:
 1575 0022 436D     		ldr	r3, [r0, #84]
 1576 0024 5C1C     		adds	r4, r3, #1
 1577 0026 4465     		str	r4, [r0, #84]
 1578 0028 0A40     		ands	r2, r2, r1
 1579 002a 1A70     		strb	r2, [r3]
 1580              	.LVL118:
3812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1581              		.loc 1 3812 0
 1582 002c B0F85A30 		ldrh	r3, [r0, #90]
 1583 0030 013B     		subs	r3, r3, #1
 1584 0032 9BB2     		uxth	r3, r3
 1585 0034 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1586 0038 03B1     		cbz	r3, .L121
 1587              	.LVL119:
 1588              	.L113:
3843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1589              		.loc 1 3844 0
 1590 003a 10BD     		pop	{r4, pc}
 1591              	.LVL120:
 1592              	.L121:
3818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1593              		.loc 1 3818 0
ARM GAS  /tmp/ccyzTMkC.s 			page 100


 1594 003c 0268     		ldr	r2, [r0]
 1595 003e 1368     		ldr	r3, [r2]
 1596 0040 23F49073 		bic	r3, r3, #288
 1597 0044 1360     		str	r3, [r2]
3822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1598              		.loc 1 3822 0
 1599 0046 0268     		ldr	r2, [r0]
 1600 0048 9368     		ldr	r3, [r2, #8]
 1601 004a 23F00103 		bic	r3, r3, #1
 1602 004e 9360     		str	r3, [r2, #8]
3825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1603              		.loc 1 3825 0
 1604 0050 2023     		movs	r3, #32
 1605 0052 80F87230 		strb	r3, [r0, #114]
3828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1606              		.loc 1 3828 0
 1607 0056 0023     		movs	r3, #0
 1608 0058 0366     		str	r3, [r0, #96]
3835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1609              		.loc 1 3835 0
 1610 005a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1611              	.LVL121:
 1612 005e ECE7     		b	.L113
 1613              		.cfi_endproc
 1614              	.LFE181:
 1616              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1617              		.align	1
 1618              		.syntax unified
 1619              		.thumb
 1620              		.thumb_func
 1621              		.fpu fpv4-sp-d16
 1623              	UART_RxISR_16BIT:
 1624              	.LFB182:
3845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1625              		.loc 1 3854 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 1629              	.LVL122:
 1630 0000 08B5     		push	{r3, lr}
 1631              	.LCFI12:
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
3855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1635              		.loc 1 3856 0
 1636 0002 B0F85C20 		ldrh	r2, [r0, #92]
ARM GAS  /tmp/ccyzTMkC.s 			page 101


 1637              	.LVL123:
3857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1638              		.loc 1 3860 0
 1639 0006 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 1640 000a DBB2     		uxtb	r3, r3
 1641 000c 222B     		cmp	r3, #34
 1642 000e 05D0     		beq	.L126
3861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2;
3866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (--huart->RxXferCount == 0)
3868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
3875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
3884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1643              		.loc 1 3897 0
 1644 0010 0268     		ldr	r2, [r0]
 1645              	.LVL124:
 1646 0012 138B     		ldrh	r3, [r2, #24]
 1647 0014 43F00803 		orr	r3, r3, #8
 1648 0018 1383     		strh	r3, [r2, #24]	@ movhi
 1649              	.LVL125:
 1650              	.L122:
3898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccyzTMkC.s 			page 102


 1651              		.loc 1 3899 0
 1652 001a 08BD     		pop	{r3, pc}
 1653              	.LVL126:
 1654              	.L126:
3862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1655              		.loc 1 3862 0
 1656 001c 0368     		ldr	r3, [r0]
 1657 001e 998C     		ldrh	r1, [r3, #36]
 1658              	.LVL127:
3863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1659              		.loc 1 3863 0
 1660 0020 436D     		ldr	r3, [r0, #84]
 1661              	.LVL128:
3864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2;
 1662              		.loc 1 3864 0
 1663 0022 0A40     		ands	r2, r2, r1
 1664              	.LVL129:
 1665 0024 1A80     		strh	r2, [r3]	@ movhi
 1666              	.LVL130:
3865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1667              		.loc 1 3865 0
 1668 0026 436D     		ldr	r3, [r0, #84]
 1669              	.LVL131:
 1670 0028 0233     		adds	r3, r3, #2
 1671 002a 4365     		str	r3, [r0, #84]
3867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1672              		.loc 1 3867 0
 1673 002c B0F85A30 		ldrh	r3, [r0, #90]
 1674 0030 013B     		subs	r3, r3, #1
 1675 0032 9BB2     		uxth	r3, r3
 1676 0034 A0F85A30 		strh	r3, [r0, #90]	@ movhi
 1677 0038 002B     		cmp	r3, #0
 1678 003a EED1     		bne	.L122
3873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1679              		.loc 1 3873 0
 1680 003c 0268     		ldr	r2, [r0]
 1681 003e 1368     		ldr	r3, [r2]
 1682 0040 23F49073 		bic	r3, r3, #288
 1683 0044 1360     		str	r3, [r2]
3877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1684              		.loc 1 3877 0
 1685 0046 0268     		ldr	r2, [r0]
 1686 0048 9368     		ldr	r3, [r2, #8]
 1687 004a 23F00103 		bic	r3, r3, #1
 1688 004e 9360     		str	r3, [r2, #8]
3880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1689              		.loc 1 3880 0
 1690 0050 2023     		movs	r3, #32
 1691 0052 80F87230 		strb	r3, [r0, #114]
3883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1692              		.loc 1 3883 0
 1693 0056 0023     		movs	r3, #0
 1694 0058 0366     		str	r3, [r0, #96]
3890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1695              		.loc 1 3890 0
 1696 005a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1697              	.LVL132:
ARM GAS  /tmp/ccyzTMkC.s 			page 103


 1698 005e DCE7     		b	.L122
 1699              		.cfi_endproc
 1700              	.LFE182:
 1702              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1703              		.align	1
 1704              		.syntax unified
 1705              		.thumb
 1706              		.thumb_func
 1707              		.fpu fpv4-sp-d16
 1709              	UART_DMAReceiveCplt:
 1710              	.LFB170:
3348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1711              		.loc 1 3348 0
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 0
 1714              		@ frame_needed = 0, uses_anonymous_args = 0
 1715              	.LVL133:
 1716 0000 08B5     		push	{r3, lr}
 1717              	.LCFI13:
 1718              		.cfi_def_cfa_offset 8
 1719              		.cfi_offset 3, -8
 1720              		.cfi_offset 14, -4
3349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1721              		.loc 1 3349 0
 1722 0002 836A     		ldr	r3, [r0, #40]
 1723              	.LVL134:
3352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1724              		.loc 1 3352 0
 1725 0004 0268     		ldr	r2, [r0]
 1726 0006 1268     		ldr	r2, [r2]
 1727 0008 12F0200F 		tst	r2, #32
 1728 000c 14D1     		bne	.L128
3354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1729              		.loc 1 3354 0
 1730 000e 0022     		movs	r2, #0
 1731 0010 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1732              		.loc 1 3357 0
 1733 0014 1968     		ldr	r1, [r3]
 1734 0016 0A68     		ldr	r2, [r1]
 1735 0018 22F48072 		bic	r2, r2, #256
 1736 001c 0A60     		str	r2, [r1]
3358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1737              		.loc 1 3358 0
 1738 001e 1968     		ldr	r1, [r3]
 1739 0020 8A68     		ldr	r2, [r1, #8]
 1740 0022 22F00102 		bic	r2, r2, #1
 1741 0026 8A60     		str	r2, [r1, #8]
3362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1742              		.loc 1 3362 0
 1743 0028 1968     		ldr	r1, [r3]
 1744 002a 8A68     		ldr	r2, [r1, #8]
 1745 002c 22F04002 		bic	r2, r2, #64
 1746 0030 8A60     		str	r2, [r1, #8]
3365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1747              		.loc 1 3365 0
 1748 0032 2022     		movs	r2, #32
ARM GAS  /tmp/ccyzTMkC.s 			page 104


 1749 0034 83F87220 		strb	r2, [r3, #114]
 1750              	.L128:
3373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1751              		.loc 1 3373 0
 1752 0038 1846     		mov	r0, r3
 1753              	.LVL135:
 1754 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1755              	.LVL136:
3375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1756              		.loc 1 3375 0
 1757 003e 08BD     		pop	{r3, pc}
 1758              		.cfi_endproc
 1759              	.LFE170:
 1761              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1762              		.align	1
 1763              		.weak	HAL_UART_RxHalfCpltCallback
 1764              		.syntax unified
 1765              		.thumb
 1766              		.thumb_func
 1767              		.fpu fpv4-sp-d16
 1769              	HAL_UART_RxHalfCpltCallback:
 1770              	.LFB149:
2471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1771              		.loc 1 2471 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 1776              	.LVL137:
2478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1777              		.loc 1 2478 0
 1778 0000 7047     		bx	lr
 1779              		.cfi_endproc
 1780              	.LFE149:
 1782              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1783              		.align	1
 1784              		.syntax unified
 1785              		.thumb
 1786              		.thumb_func
 1787              		.fpu fpv4-sp-d16
 1789              	UART_DMARxHalfCplt:
 1790              	.LFB171:
3383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1791              		.loc 1 3383 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              	.LVL138:
 1796 0000 08B5     		push	{r3, lr}
 1797              	.LCFI14:
 1798              		.cfi_def_cfa_offset 8
 1799              		.cfi_offset 3, -8
 1800              		.cfi_offset 14, -4
 1801              	.LVL139:
3391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1802              		.loc 1 3391 0
 1803 0002 806A     		ldr	r0, [r0, #40]
ARM GAS  /tmp/ccyzTMkC.s 			page 105


 1804              	.LVL140:
 1805 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1806              	.LVL141:
3393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1807              		.loc 1 3393 0
 1808 0008 08BD     		pop	{r3, pc}
 1809              		.cfi_endproc
 1810              	.LFE171:
 1812              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1813              		.align	1
 1814              		.weak	HAL_UART_ErrorCallback
 1815              		.syntax unified
 1816              		.thumb
 1817              		.thumb_func
 1818              		.fpu fpv4-sp-d16
 1820              	HAL_UART_ErrorCallback:
 1821              	.LFB150:
2486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1822              		.loc 1 2486 0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
 1827              	.LVL142:
2493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1828              		.loc 1 2493 0
 1829 0000 7047     		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE150:
 1833              		.section	.text.UART_DMAError,"ax",%progbits
 1834              		.align	1
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu fpv4-sp-d16
 1840              	UART_DMAError:
 1841              	.LFB172:
3401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1842              		.loc 1 3401 0
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 0
 1845              		@ frame_needed = 0, uses_anonymous_args = 0
 1846              	.LVL143:
 1847 0000 10B5     		push	{r4, lr}
 1848              	.LCFI15:
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 4, -8
 1851              		.cfi_offset 14, -4
3402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1852              		.loc 1 3402 0
 1853 0002 846A     		ldr	r4, [r0, #40]
 1854              	.LVL144:
3405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1855              		.loc 1 3405 0
 1856 0004 94F87130 		ldrb	r3, [r4, #113]	@ zero_extendqisi2
 1857 0008 DBB2     		uxtb	r3, r3
 1858 000a 212B     		cmp	r3, #33
ARM GAS  /tmp/ccyzTMkC.s 			page 106


 1859 000c 0CD0     		beq	.L138
 1860              	.LVL145:
 1861              	.L135:
3413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1862              		.loc 1 3413 0
 1863 000e 94F87230 		ldrb	r3, [r4, #114]	@ zero_extendqisi2
 1864 0012 DBB2     		uxtb	r3, r3
 1865 0014 222B     		cmp	r3, #34
 1866 0016 13D0     		beq	.L139
 1867              	.L136:
3420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1868              		.loc 1 3420 0
 1869 0018 636F     		ldr	r3, [r4, #116]
 1870 001a 43F01003 		orr	r3, r3, #16
 1871 001e 6367     		str	r3, [r4, #116]
3427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1872              		.loc 1 3427 0
 1873 0020 2046     		mov	r0, r4
 1874 0022 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1875              	.LVL146:
3429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1876              		.loc 1 3429 0
 1877 0026 10BD     		pop	{r4, pc}
 1878              	.LVL147:
 1879              	.L138:
3406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1880              		.loc 1 3406 0
 1881 0028 2368     		ldr	r3, [r4]
 1882 002a 9B68     		ldr	r3, [r3, #8]
 1883 002c 13F0800F 		tst	r3, #128
 1884 0030 EDD0     		beq	.L135
3408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1885              		.loc 1 3408 0
 1886 0032 0023     		movs	r3, #0
 1887 0034 A4F85230 		strh	r3, [r4, #82]	@ movhi
3409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1888              		.loc 1 3409 0
 1889 0038 2046     		mov	r0, r4
 1890              	.LVL148:
 1891 003a FFF7FEFF 		bl	UART_EndTxTransfer
 1892              	.LVL149:
 1893 003e E6E7     		b	.L135
 1894              	.L139:
3414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1895              		.loc 1 3414 0
 1896 0040 2368     		ldr	r3, [r4]
 1897 0042 9B68     		ldr	r3, [r3, #8]
 1898 0044 13F0400F 		tst	r3, #64
 1899 0048 E6D0     		beq	.L136
3416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1900              		.loc 1 3416 0
 1901 004a 0023     		movs	r3, #0
 1902 004c A4F85A30 		strh	r3, [r4, #90]	@ movhi
3417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 1903              		.loc 1 3417 0
 1904 0050 2046     		mov	r0, r4
 1905 0052 FFF7FEFF 		bl	UART_EndRxTransfer
ARM GAS  /tmp/ccyzTMkC.s 			page 107


 1906              	.LVL150:
 1907 0056 DFE7     		b	.L136
 1908              		.cfi_endproc
 1909              	.LFE172:
 1911              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1912              		.align	1
 1913              		.global	HAL_UART_IRQHandler
 1914              		.syntax unified
 1915              		.thumb
 1916              		.thumb_func
 1917              		.fpu fpv4-sp-d16
 1919              	HAL_UART_IRQHandler:
 1920              	.LFB145:
2179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1921              		.loc 1 2179 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL151:
 1926 0000 38B5     		push	{r3, r4, r5, lr}
 1927              	.LCFI16:
 1928              		.cfi_def_cfa_offset 16
 1929              		.cfi_offset 3, -16
 1930              		.cfi_offset 4, -12
 1931              		.cfi_offset 5, -8
 1932              		.cfi_offset 14, -4
 1933 0002 0446     		mov	r4, r0
2180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1934              		.loc 1 2180 0
 1935 0004 0268     		ldr	r2, [r0]
 1936 0006 D369     		ldr	r3, [r2, #28]
 1937              	.LVL152:
2181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1938              		.loc 1 2181 0
 1939 0008 1168     		ldr	r1, [r2]
 1940              	.LVL153:
2182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
 1941              		.loc 1 2182 0
 1942 000a 9068     		ldr	r0, [r2, #8]
 1943              	.LVL154:
2187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 1944              		.loc 1 2187 0
 1945 000c 13F00F05 		ands	r5, r3, #15
 1946              	.LVL155:
 1947 0010 0CD1     		bne	.L141
2195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != RESET))
 1948              		.loc 1 2195 0
 1949 0012 13F0200F 		tst	r3, #32
 1950 0016 09D0     		beq	.L141
2196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1951              		.loc 1 2196 0
 1952 0018 11F0200F 		tst	r1, #32
 1953 001c 06D0     		beq	.L141
2199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 1954              		.loc 1 2199 0
 1955 001e 236E     		ldr	r3, [r4, #96]
 1956              	.LVL156:
ARM GAS  /tmp/ccyzTMkC.s 			page 108


 1957 0020 002B     		cmp	r3, #0
 1958 0022 00F09380 		beq	.L140
2201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 1959              		.loc 1 2201 0
 1960 0026 2046     		mov	r0, r4
 1961              	.LVL157:
 1962 0028 9847     		blx	r3
 1963              	.LVL158:
 1964 002a 8FE0     		b	.L140
 1965              	.LVL159:
 1966              	.L141:
2213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != RESET)
 1967              		.loc 1 2213 0
 1968 002c 002D     		cmp	r5, #0
 1969 002e 6FD0     		beq	.L143
2214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 1970              		.loc 1 2214 0
 1971 0030 10F00105 		ands	r5, r0, #1
 1972              	.LVL160:
 1973 0034 02D1     		bne	.L144
2215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 1974              		.loc 1 2215 0
 1975 0036 11F4907F 		tst	r1, #288
 1976 003a 69D0     		beq	.L143
 1977              	.L144:
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1978              		.loc 1 2219 0
 1979 003c 13F0010F 		tst	r3, #1
 1980 0040 07D0     		beq	.L145
2219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1981              		.loc 1 2219 0 is_stmt 0 discriminator 1
 1982 0042 11F4807F 		tst	r1, #256
 1983 0046 04D0     		beq	.L145
2221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1984              		.loc 1 2221 0 is_stmt 1
 1985 0048 0120     		movs	r0, #1
 1986              	.LVL161:
 1987 004a 1062     		str	r0, [r2, #32]
2223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 1988              		.loc 1 2223 0
 1989 004c 626F     		ldr	r2, [r4, #116]
 1990 004e 0243     		orrs	r2, r2, r0
 1991 0050 6267     		str	r2, [r4, #116]
 1992              	.L145:
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1993              		.loc 1 2227 0
 1994 0052 13F0020F 		tst	r3, #2
 1995 0056 07D0     		beq	.L146
2227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1996              		.loc 1 2227 0 is_stmt 0 discriminator 1
 1997 0058 35B1     		cbz	r5, .L146
2229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 1998              		.loc 1 2229 0 is_stmt 1
 1999 005a 2268     		ldr	r2, [r4]
 2000 005c 0220     		movs	r0, #2
 2001 005e 1062     		str	r0, [r2, #32]
2231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccyzTMkC.s 			page 109


 2002              		.loc 1 2231 0
 2003 0060 626F     		ldr	r2, [r4, #116]
 2004 0062 42F00402 		orr	r2, r2, #4
 2005 0066 6267     		str	r2, [r4, #116]
 2006              	.L146:
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2007              		.loc 1 2235 0
 2008 0068 13F0040F 		tst	r3, #4
 2009 006c 07D0     		beq	.L147
2235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2010              		.loc 1 2235 0 is_stmt 0 discriminator 1
 2011 006e 35B1     		cbz	r5, .L147
2237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2012              		.loc 1 2237 0 is_stmt 1
 2013 0070 2268     		ldr	r2, [r4]
 2014 0072 0420     		movs	r0, #4
 2015 0074 1062     		str	r0, [r2, #32]
2239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2016              		.loc 1 2239 0
 2017 0076 626F     		ldr	r2, [r4, #116]
 2018 0078 42F00202 		orr	r2, r2, #2
 2019 007c 6267     		str	r2, [r4, #116]
 2020              	.L147:
2248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != RESET) ||
 2021              		.loc 1 2248 0
 2022 007e 13F0080F 		tst	r3, #8
 2023 0082 09D0     		beq	.L148
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2024              		.loc 1 2249 0
 2025 0084 11F0200F 		tst	r1, #32
 2026 0088 00D1     		bne	.L149
2249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != RESET)))
 2027              		.loc 1 2249 0 is_stmt 0 discriminator 1
 2028 008a 2DB1     		cbz	r5, .L148
 2029              	.L149:
2253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2030              		.loc 1 2253 0 is_stmt 1
 2031 008c 2268     		ldr	r2, [r4]
 2032 008e 0820     		movs	r0, #8
 2033 0090 1062     		str	r0, [r2, #32]
2255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2034              		.loc 1 2255 0
 2035 0092 626F     		ldr	r2, [r4, #116]
 2036 0094 0243     		orrs	r2, r2, r0
 2037 0096 6267     		str	r2, [r4, #116]
 2038              	.L148:
2259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2039              		.loc 1 2259 0
 2040 0098 626F     		ldr	r2, [r4, #116]
 2041 009a 002A     		cmp	r2, #0
 2042 009c 56D0     		beq	.L140
2267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2043              		.loc 1 2267 0
 2044 009e 13F0200F 		tst	r3, #32
 2045 00a2 06D0     		beq	.L150
2268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2046              		.loc 1 2268 0
ARM GAS  /tmp/ccyzTMkC.s 			page 110


 2047 00a4 11F0200F 		tst	r1, #32
 2048 00a8 03D0     		beq	.L150
2271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2049              		.loc 1 2271 0
 2050 00aa 236E     		ldr	r3, [r4, #96]
 2051              	.LVL162:
 2052 00ac 0BB1     		cbz	r3, .L150
2273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 2053              		.loc 1 2273 0
 2054 00ae 2046     		mov	r0, r4
 2055 00b0 9847     		blx	r3
 2056              	.LVL163:
 2057              	.L150:
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2058              		.loc 1 2279 0
 2059 00b2 636F     		ldr	r3, [r4, #116]
 2060 00b4 13F0080F 		tst	r3, #8
 2061 00b8 04D1     		bne	.L151
2280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2062              		.loc 1 2280 0 discriminator 1
 2063 00ba 2368     		ldr	r3, [r4]
 2064 00bc 9B68     		ldr	r3, [r3, #8]
2279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2065              		.loc 1 2279 0 discriminator 1
 2066 00be 13F0400F 		tst	r3, #64
 2067 00c2 1FD0     		beq	.L152
 2068              	.L151:
2285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2069              		.loc 1 2285 0
 2070 00c4 2046     		mov	r0, r4
 2071 00c6 FFF7FEFF 		bl	UART_EndRxTransfer
 2072              	.LVL164:
2288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 2073              		.loc 1 2288 0
 2074 00ca 2368     		ldr	r3, [r4]
 2075 00cc 9A68     		ldr	r2, [r3, #8]
 2076 00ce 12F0400F 		tst	r2, #64
 2077 00d2 13D0     		beq	.L153
2290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2078              		.loc 1 2290 0
 2079 00d4 9A68     		ldr	r2, [r3, #8]
 2080 00d6 22F04002 		bic	r2, r2, #64
 2081 00da 9A60     		str	r2, [r3, #8]
2293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
 2082              		.loc 1 2293 0
 2083 00dc E36E     		ldr	r3, [r4, #108]
 2084 00de 4BB1     		cbz	r3, .L154
2297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2085              		.loc 1 2297 0
 2086 00e0 1D4A     		ldr	r2, .L160
 2087 00e2 9A63     		str	r2, [r3, #56]
2300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
 2088              		.loc 1 2300 0
 2089 00e4 E06E     		ldr	r0, [r4, #108]
 2090 00e6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2091              	.LVL165:
 2092 00ea 78B3     		cbz	r0, .L140
ARM GAS  /tmp/ccyzTMkC.s 			page 111


2303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
 2093              		.loc 1 2303 0
 2094 00ec E06E     		ldr	r0, [r4, #108]
 2095 00ee 836B     		ldr	r3, [r0, #56]
 2096 00f0 9847     		blx	r3
 2097              	.LVL166:
 2098 00f2 2BE0     		b	.L140
 2099              	.L154:
2314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2100              		.loc 1 2314 0
 2101 00f4 2046     		mov	r0, r4
 2102 00f6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2103              	.LVL167:
 2104 00fa 27E0     		b	.L140
 2105              	.L153:
2327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2106              		.loc 1 2327 0
 2107 00fc 2046     		mov	r0, r4
 2108 00fe FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2109              	.LVL168:
 2110 0102 23E0     		b	.L140
 2111              	.L152:
2340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2112              		.loc 1 2340 0
 2113 0104 2046     		mov	r0, r4
 2114 0106 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2115              	.LVL169:
2342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2116              		.loc 1 2342 0
 2117 010a 0023     		movs	r3, #0
 2118 010c 6367     		str	r3, [r4, #116]
 2119 010e 1DE0     		b	.L140
 2120              	.LVL170:
 2121              	.L143:
2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2122              		.loc 1 2350 0
 2123 0110 13F4801F 		tst	r3, #1048576
 2124 0114 02D0     		beq	.L155
2350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2125              		.loc 1 2350 0 is_stmt 0 discriminator 1
 2126 0116 10F4800F 		tst	r0, #4194304
 2127 011a 0AD1     		bne	.L158
 2128              	.L155:
2373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != RESET))
 2129              		.loc 1 2373 0 is_stmt 1
 2130 011c 13F0800F 		tst	r3, #128
 2131 0120 0ED0     		beq	.L156
2374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2132              		.loc 1 2374 0
 2133 0122 11F0800F 		tst	r1, #128
 2134 0126 0BD0     		beq	.L156
2377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2135              		.loc 1 2377 0
 2136 0128 636E     		ldr	r3, [r4, #100]
 2137              	.LVL171:
 2138 012a 7BB1     		cbz	r3, .L140
2379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccyzTMkC.s 			page 112


 2139              		.loc 1 2379 0
 2140 012c 2046     		mov	r0, r4
 2141              	.LVL172:
 2142 012e 9847     		blx	r3
 2143              	.LVL173:
 2144 0130 0CE0     		b	.L140
 2145              	.LVL174:
 2146              	.L158:
2352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2147              		.loc 1 2352 0
 2148 0132 4FF48013 		mov	r3, #1048576
 2149              	.LVL175:
 2150 0136 1362     		str	r3, [r2, #32]
2362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2151              		.loc 1 2362 0
 2152 0138 2046     		mov	r0, r4
 2153              	.LVL176:
 2154 013a FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2155              	.LVL177:
2364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2156              		.loc 1 2364 0
 2157 013e 05E0     		b	.L140
 2158              	.LVL178:
 2159              	.L156:
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2160              		.loc 1 2385 0
 2161 0140 13F0400F 		tst	r3, #64
 2162 0144 02D0     		beq	.L140
2385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2163              		.loc 1 2385 0 is_stmt 0 discriminator 1
 2164 0146 11F0400F 		tst	r1, #64
 2165 014a 00D1     		bne	.L159
 2166              	.LVL179:
 2167              	.L140:
2418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2168              		.loc 1 2418 0 is_stmt 1
 2169 014c 38BD     		pop	{r3, r4, r5, pc}
 2170              	.LVL180:
 2171              	.L159:
2387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 2172              		.loc 1 2387 0
 2173 014e 2046     		mov	r0, r4
 2174              	.LVL181:
 2175 0150 FFF7FEFF 		bl	UART_EndTransmit_IT
 2176              	.LVL182:
2388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 2177              		.loc 1 2388 0
 2178 0154 FAE7     		b	.L140
 2179              	.L161:
 2180 0156 00BF     		.align	2
 2181              	.L160:
 2182 0158 00000000 		.word	UART_DMAAbortOnError
 2183              		.cfi_endproc
 2184              	.LFE145:
 2186              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2187              		.align	1
 2188              		.syntax unified
ARM GAS  /tmp/ccyzTMkC.s 			page 113


 2189              		.thumb
 2190              		.thumb_func
 2191              		.fpu fpv4-sp-d16
 2193              	UART_DMAAbortOnError:
 2194              	.LFB173:
3438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2195              		.loc 1 3438 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              	.LVL183:
 2200 0000 08B5     		push	{r3, lr}
 2201              	.LCFI17:
 2202              		.cfi_def_cfa_offset 8
 2203              		.cfi_offset 3, -8
 2204              		.cfi_offset 14, -4
3439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2205              		.loc 1 3439 0
 2206 0002 806A     		ldr	r0, [r0, #40]
 2207              	.LVL184:
3440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2208              		.loc 1 3440 0
 2209 0004 0023     		movs	r3, #0
 2210 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2211              		.loc 1 3441 0
 2212 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2213              		.loc 1 3448 0
 2214 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2215              	.LVL185:
3450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2216              		.loc 1 3450 0
 2217 0012 08BD     		pop	{r3, pc}
 2218              		.cfi_endproc
 2219              	.LFE173:
 2221              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2222              		.align	1
 2223              		.weak	HAL_UART_AbortCpltCallback
 2224              		.syntax unified
 2225              		.thumb
 2226              		.thumb_func
 2227              		.fpu fpv4-sp-d16
 2229              	HAL_UART_AbortCpltCallback:
 2230              	.LFB151:
2501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2231              		.loc 1 2501 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 0
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 2235              		@ link register save eliminated.
 2236              	.LVL186:
2508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2237              		.loc 1 2508 0
 2238 0000 7047     		bx	lr
 2239              		.cfi_endproc
 2240              	.LFE151:
ARM GAS  /tmp/ccyzTMkC.s 			page 114


 2242              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2243              		.align	1
 2244              		.global	HAL_UART_Abort_IT
 2245              		.syntax unified
 2246              		.thumb
 2247              		.thumb_func
 2248              		.fpu fpv4-sp-d16
 2250              	HAL_UART_Abort_IT:
 2251              	.LFB142:
1843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2252              		.loc 1 1843 0
 2253              		.cfi_startproc
 2254              		@ args = 0, pretend = 0, frame = 0
 2255              		@ frame_needed = 0, uses_anonymous_args = 0
 2256              	.LVL187:
 2257 0000 10B5     		push	{r4, lr}
 2258              	.LCFI18:
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 4, -8
 2261              		.cfi_offset 14, -4
 2262 0002 0446     		mov	r4, r0
 2263              	.LVL188:
1851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2264              		.loc 1 1851 0
 2265 0004 0268     		ldr	r2, [r0]
 2266 0006 1368     		ldr	r3, [r2]
 2267 0008 23F4F073 		bic	r3, r3, #480
 2268 000c 1360     		str	r3, [r2]
1852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2269              		.loc 1 1852 0
 2270 000e 0268     		ldr	r2, [r0]
 2271 0010 9368     		ldr	r3, [r2, #8]
 2272 0012 23F00103 		bic	r3, r3, #1
 2273 0016 9360     		str	r3, [r2, #8]
1858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2274              		.loc 1 1858 0
 2275 0018 836E     		ldr	r3, [r0, #104]
 2276 001a 33B1     		cbz	r3, .L166
1862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2277              		.loc 1 1862 0
 2278 001c 0268     		ldr	r2, [r0]
 2279 001e 9268     		ldr	r2, [r2, #8]
 2280 0020 12F0800F 		tst	r2, #128
 2281 0024 1FD0     		beq	.L167
1864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2282              		.loc 1 1864 0
 2283 0026 2C4A     		ldr	r2, .L178
 2284 0028 9A63     		str	r2, [r3, #56]
 2285              	.L166:
1872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2286              		.loc 1 1872 0
 2287 002a E36E     		ldr	r3, [r4, #108]
 2288 002c 33B1     		cbz	r3, .L168
1876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2289              		.loc 1 1876 0
 2290 002e 2268     		ldr	r2, [r4]
 2291 0030 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccyzTMkC.s 			page 115


 2292 0032 12F0400F 		tst	r2, #64
 2293 0036 19D0     		beq	.L169
1878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2294              		.loc 1 1878 0
 2295 0038 284A     		ldr	r2, .L178+4
 2296 003a 9A63     		str	r2, [r3, #56]
 2297              	.L168:
1887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2298              		.loc 1 1887 0
 2299 003c 2368     		ldr	r3, [r4]
 2300 003e 9A68     		ldr	r2, [r3, #8]
 2301 0040 12F0800F 		tst	r2, #128
 2302 0044 15D0     		beq	.L174
1890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2303              		.loc 1 1890 0
 2304 0046 9A68     		ldr	r2, [r3, #8]
 2305 0048 22F08002 		bic	r2, r2, #128
 2306 004c 9A60     		str	r2, [r3, #8]
1893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2307              		.loc 1 1893 0
 2308 004e A06E     		ldr	r0, [r4, #104]
 2309              	.LVL189:
 2310 0050 0028     		cmp	r0, #0
 2311 0052 39D0     		beq	.L175
1899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2312              		.loc 1 1899 0
 2313 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2314              	.LVL190:
 2315 0058 0028     		cmp	r0, #0
 2316 005a 37D0     		beq	.L176
1901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2317              		.loc 1 1901 0
 2318 005c A36E     		ldr	r3, [r4, #104]
 2319 005e 0022     		movs	r2, #0
 2320 0060 9A63     		str	r2, [r3, #56]
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2321              		.loc 1 1844 0
 2322 0062 0121     		movs	r1, #1
 2323 0064 06E0     		b	.L170
 2324              	.LVL191:
 2325              	.L167:
1868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2326              		.loc 1 1868 0
 2327 0066 0022     		movs	r2, #0
 2328 0068 9A63     		str	r2, [r3, #56]
 2329 006a DEE7     		b	.L166
 2330              	.L169:
1882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 2331              		.loc 1 1882 0
 2332 006c 0022     		movs	r2, #0
 2333 006e 9A63     		str	r2, [r3, #56]
 2334 0070 E4E7     		b	.L168
 2335              	.L174:
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2336              		.loc 1 1844 0
 2337 0072 0121     		movs	r1, #1
 2338              	.LVL192:
ARM GAS  /tmp/ccyzTMkC.s 			page 116


 2339              	.L170:
1911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2340              		.loc 1 1911 0
 2341 0074 2368     		ldr	r3, [r4]
 2342 0076 9A68     		ldr	r2, [r3, #8]
 2343 0078 12F0400F 		tst	r2, #64
 2344 007c 28D0     		beq	.L171
1913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2345              		.loc 1 1913 0
 2346 007e 9A68     		ldr	r2, [r3, #8]
 2347 0080 22F04002 		bic	r2, r2, #64
 2348 0084 9A60     		str	r2, [r3, #8]
1916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2349              		.loc 1 1916 0
 2350 0086 E06E     		ldr	r0, [r4, #108]
 2351 0088 10B3     		cbz	r0, .L171
1922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2352              		.loc 1 1922 0
 2353 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2354              	.LVL193:
 2355 008e 08B3     		cbz	r0, .L172
1924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 2356              		.loc 1 1924 0
 2357 0090 E36E     		ldr	r3, [r4, #108]
 2358 0092 0022     		movs	r2, #0
 2359 0094 9A63     		str	r2, [r3, #56]
 2360              	.LVL194:
 2361              	.L173:
1938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2362              		.loc 1 1938 0
 2363 0096 0023     		movs	r3, #0
 2364 0098 A4F85230 		strh	r3, [r4, #82]	@ movhi
1939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2365              		.loc 1 1939 0
 2366 009c A4F85A30 		strh	r3, [r4, #90]	@ movhi
1942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 2367              		.loc 1 1942 0
 2368 00a0 2366     		str	r3, [r4, #96]
1943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2369              		.loc 1 1943 0
 2370 00a2 6366     		str	r3, [r4, #100]
1946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2371              		.loc 1 1946 0
 2372 00a4 6367     		str	r3, [r4, #116]
1949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2373              		.loc 1 1949 0
 2374 00a6 2368     		ldr	r3, [r4]
 2375 00a8 0F22     		movs	r2, #15
 2376 00aa 1A62     		str	r2, [r3, #32]
1960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2377              		.loc 1 1960 0
 2378 00ac 2268     		ldr	r2, [r4]
 2379 00ae 138B     		ldrh	r3, [r2, #24]
 2380 00b0 43F00803 		orr	r3, r3, #8
 2381 00b4 1383     		strh	r3, [r2, #24]	@ movhi
1963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2382              		.loc 1 1963 0
ARM GAS  /tmp/ccyzTMkC.s 			page 117


 2383 00b6 2023     		movs	r3, #32
 2384 00b8 84F87130 		strb	r3, [r4, #113]
1964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2385              		.loc 1 1964 0
 2386 00bc 84F87230 		strb	r3, [r4, #114]
1972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2387              		.loc 1 1972 0
 2388 00c0 2046     		mov	r0, r4
 2389 00c2 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2390              	.LVL195:
 2391 00c6 05E0     		b	.L172
 2392              	.LVL196:
 2393              	.L175:
1844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2394              		.loc 1 1844 0
 2395 00c8 0121     		movs	r1, #1
 2396 00ca D3E7     		b	.L170
 2397              	.L176:
1905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2398              		.loc 1 1905 0
 2399 00cc 0021     		movs	r1, #0
 2400 00ce D1E7     		b	.L170
 2401              	.LVL197:
 2402              	.L171:
1935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2403              		.loc 1 1935 0
 2404 00d0 0029     		cmp	r1, #0
 2405 00d2 E0D1     		bne	.L173
 2406              	.LVL198:
 2407              	.L172:
1977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2408              		.loc 1 1977 0
 2409 00d4 0020     		movs	r0, #0
 2410 00d6 10BD     		pop	{r4, pc}
 2411              	.LVL199:
 2412              	.L179:
 2413              		.align	2
 2414              	.L178:
 2415 00d8 00000000 		.word	UART_DMATxAbortCallback
 2416 00dc 00000000 		.word	UART_DMARxAbortCallback
 2417              		.cfi_endproc
 2418              	.LFE142:
 2420              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2421              		.align	1
 2422              		.syntax unified
 2423              		.thumb
 2424              		.thumb_func
 2425              		.fpu fpv4-sp-d16
 2427              	UART_DMARxAbortCallback:
 2428              	.LFB175:
3517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2429              		.loc 1 3517 0
 2430              		.cfi_startproc
 2431              		@ args = 0, pretend = 0, frame = 0
 2432              		@ frame_needed = 0, uses_anonymous_args = 0
 2433              	.LVL200:
 2434 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccyzTMkC.s 			page 118


 2435              	.LCFI19:
 2436              		.cfi_def_cfa_offset 8
 2437              		.cfi_offset 3, -8
 2438              		.cfi_offset 14, -4
3518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2439              		.loc 1 3518 0
 2440 0002 806A     		ldr	r0, [r0, #40]
 2441              	.LVL201:
3520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2442              		.loc 1 3520 0
 2443 0004 C36E     		ldr	r3, [r0, #108]
 2444 0006 0022     		movs	r2, #0
 2445 0008 9A63     		str	r2, [r3, #56]
3523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2446              		.loc 1 3523 0
 2447 000a 836E     		ldr	r3, [r0, #104]
 2448 000c 13B1     		cbz	r3, .L181
3525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2449              		.loc 1 3525 0
 2450 000e 9B6B     		ldr	r3, [r3, #56]
 2451 0010 03B1     		cbz	r3, .L181
 2452              	.LVL202:
 2453              	.L180:
3556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2454              		.loc 1 3556 0
 2455 0012 08BD     		pop	{r3, pc}
 2456              	.LVL203:
 2457              	.L181:
3532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2458              		.loc 1 3532 0
 2459 0014 0023     		movs	r3, #0
 2460 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2461              		.loc 1 3533 0
 2462 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2463              		.loc 1 3536 0
 2464 001e 4367     		str	r3, [r0, #116]
3539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2465              		.loc 1 3539 0
 2466 0020 0368     		ldr	r3, [r0]
 2467 0022 0F22     		movs	r2, #15
 2468 0024 1A62     		str	r2, [r3, #32]
3542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2469              		.loc 1 3542 0
 2470 0026 0268     		ldr	r2, [r0]
 2471 0028 138B     		ldrh	r3, [r2, #24]
 2472 002a 43F00803 		orr	r3, r3, #8
 2473 002e 1383     		strh	r3, [r2, #24]	@ movhi
3545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2474              		.loc 1 3545 0
 2475 0030 2023     		movs	r3, #32
 2476 0032 80F87130 		strb	r3, [r0, #113]
3546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2477              		.loc 1 3546 0
 2478 0036 80F87230 		strb	r3, [r0, #114]
3554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccyzTMkC.s 			page 119


 2479              		.loc 1 3554 0
 2480 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2481              	.LVL204:
 2482 003e E8E7     		b	.L180
 2483              		.cfi_endproc
 2484              	.LFE175:
 2486              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2487              		.align	1
 2488              		.syntax unified
 2489              		.thumb
 2490              		.thumb_func
 2491              		.fpu fpv4-sp-d16
 2493              	UART_DMATxAbortCallback:
 2494              	.LFB174:
3461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2495              		.loc 1 3461 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 0
 2498              		@ frame_needed = 0, uses_anonymous_args = 0
 2499              	.LVL205:
 2500 0000 08B5     		push	{r3, lr}
 2501              	.LCFI20:
 2502              		.cfi_def_cfa_offset 8
 2503              		.cfi_offset 3, -8
 2504              		.cfi_offset 14, -4
3462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2505              		.loc 1 3462 0
 2506 0002 806A     		ldr	r0, [r0, #40]
 2507              	.LVL206:
3464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2508              		.loc 1 3464 0
 2509 0004 836E     		ldr	r3, [r0, #104]
 2510 0006 0022     		movs	r2, #0
 2511 0008 9A63     		str	r2, [r3, #56]
3467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2512              		.loc 1 3467 0
 2513 000a C36E     		ldr	r3, [r0, #108]
 2514 000c 13B1     		cbz	r3, .L185
3469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2515              		.loc 1 3469 0
 2516 000e 9B6B     		ldr	r3, [r3, #56]
 2517 0010 03B1     		cbz	r3, .L185
 2518              	.LVL207:
 2519              	.L184:
3505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2520              		.loc 1 3505 0
 2521 0012 08BD     		pop	{r3, pc}
 2522              	.LVL208:
 2523              	.L185:
3476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2524              		.loc 1 3476 0
 2525 0014 0023     		movs	r3, #0
 2526 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2527              		.loc 1 3477 0
 2528 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 120


 2529              		.loc 1 3480 0
 2530 001e 4367     		str	r3, [r0, #116]
3483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2531              		.loc 1 3483 0
 2532 0020 0368     		ldr	r3, [r0]
 2533 0022 0F22     		movs	r2, #15
 2534 0024 1A62     		str	r2, [r3, #32]
3494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2535              		.loc 1 3494 0
 2536 0026 2023     		movs	r3, #32
 2537 0028 80F87130 		strb	r3, [r0, #113]
3495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2538              		.loc 1 3495 0
 2539 002c 80F87230 		strb	r3, [r0, #114]
3503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2540              		.loc 1 3503 0
 2541 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2542              	.LVL209:
 2543 0034 EDE7     		b	.L184
 2544              		.cfi_endproc
 2545              	.LFE174:
 2547              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2548              		.align	1
 2549              		.weak	HAL_UART_AbortTransmitCpltCallback
 2550              		.syntax unified
 2551              		.thumb
 2552              		.thumb_func
 2553              		.fpu fpv4-sp-d16
 2555              	HAL_UART_AbortTransmitCpltCallback:
 2556              	.LFB152:
2516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2557              		.loc 1 2516 0
 2558              		.cfi_startproc
 2559              		@ args = 0, pretend = 0, frame = 0
 2560              		@ frame_needed = 0, uses_anonymous_args = 0
 2561              		@ link register save eliminated.
 2562              	.LVL210:
2523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2563              		.loc 1 2523 0
 2564 0000 7047     		bx	lr
 2565              		.cfi_endproc
 2566              	.LFE152:
 2568              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2569              		.align	1
 2570              		.global	HAL_UART_AbortTransmit_IT
 2571              		.syntax unified
 2572              		.thumb
 2573              		.thumb_func
 2574              		.fpu fpv4-sp-d16
 2576              	HAL_UART_AbortTransmit_IT:
 2577              	.LFB143:
1994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
 2578              		.loc 1 1994 0
 2579              		.cfi_startproc
 2580              		@ args = 0, pretend = 0, frame = 0
 2581              		@ frame_needed = 0, uses_anonymous_args = 0
 2582              	.LVL211:
ARM GAS  /tmp/ccyzTMkC.s 			page 121


 2583 0000 10B5     		push	{r4, lr}
 2584              	.LCFI21:
 2585              		.cfi_def_cfa_offset 8
 2586              		.cfi_offset 4, -8
 2587              		.cfi_offset 14, -4
 2588 0002 0446     		mov	r4, r0
2000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2589              		.loc 1 2000 0
 2590 0004 0268     		ldr	r2, [r0]
 2591 0006 1368     		ldr	r3, [r2]
 2592 0008 23F0C003 		bic	r3, r3, #192
 2593 000c 1360     		str	r3, [r2]
2004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2594              		.loc 1 2004 0
 2595 000e 0368     		ldr	r3, [r0]
 2596 0010 9A68     		ldr	r2, [r3, #8]
 2597 0012 12F0800F 		tst	r2, #128
 2598 0016 1AD0     		beq	.L190
2006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2599              		.loc 1 2006 0
 2600 0018 9A68     		ldr	r2, [r3, #8]
 2601 001a 22F08002 		bic	r2, r2, #128
 2602 001e 9A60     		str	r2, [r3, #8]
2009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2603              		.loc 1 2009 0
 2604 0020 836E     		ldr	r3, [r0, #104]
 2605 0022 53B1     		cbz	r3, .L191
2013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2606              		.loc 1 2013 0
 2607 0024 0F4A     		ldr	r2, .L194
 2608 0026 9A63     		str	r2, [r3, #56]
2016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2609              		.loc 1 2016 0
 2610 0028 806E     		ldr	r0, [r0, #104]
 2611              	.LVL212:
 2612 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2613              	.LVL213:
 2614 002e 10B1     		cbz	r0, .L192
2019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2615              		.loc 1 2019 0
 2616 0030 A06E     		ldr	r0, [r4, #104]
 2617 0032 836B     		ldr	r3, [r0, #56]
 2618 0034 9847     		blx	r3
 2619              	.LVL214:
 2620              	.L192:
2073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2621              		.loc 1 2073 0
 2622 0036 0020     		movs	r0, #0
 2623 0038 10BD     		pop	{r4, pc}
 2624              	.LVL215:
 2625              	.L191:
2025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2626              		.loc 1 2025 0
 2627 003a 0023     		movs	r3, #0
 2628 003c A0F85230 		strh	r3, [r0, #82]	@ movhi
2028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2629              		.loc 1 2028 0
ARM GAS  /tmp/ccyzTMkC.s 			page 122


 2630 0040 4366     		str	r3, [r0, #100]
2031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2631              		.loc 1 2031 0
 2632 0042 2023     		movs	r3, #32
 2633 0044 80F87130 		strb	r3, [r0, #113]
2039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2634              		.loc 1 2039 0
 2635 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2636              	.LVL216:
 2637 004c F3E7     		b	.L192
 2638              	.LVL217:
 2639              	.L190:
2046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2640              		.loc 1 2046 0
 2641 004e 0023     		movs	r3, #0
 2642 0050 A0F85230 		strh	r3, [r0, #82]	@ movhi
2049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2643              		.loc 1 2049 0
 2644 0054 4366     		str	r3, [r0, #100]
2060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2645              		.loc 1 2060 0
 2646 0056 2023     		movs	r3, #32
 2647 0058 80F87130 		strb	r3, [r0, #113]
2068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2648              		.loc 1 2068 0
 2649 005c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2650              	.LVL218:
 2651 0060 E9E7     		b	.L192
 2652              	.L195:
 2653 0062 00BF     		.align	2
 2654              	.L194:
 2655 0064 00000000 		.word	UART_DMATxOnlyAbortCallback
 2656              		.cfi_endproc
 2657              	.LFE143:
 2659              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2660              		.align	1
 2661              		.syntax unified
 2662              		.thumb
 2663              		.thumb_func
 2664              		.fpu fpv4-sp-d16
 2666              	UART_DMATxOnlyAbortCallback:
 2667              	.LFB176:
3568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2668              		.loc 1 3568 0
 2669              		.cfi_startproc
 2670              		@ args = 0, pretend = 0, frame = 0
 2671              		@ frame_needed = 0, uses_anonymous_args = 0
 2672              	.LVL219:
 2673 0000 08B5     		push	{r3, lr}
 2674              	.LCFI22:
 2675              		.cfi_def_cfa_offset 8
 2676              		.cfi_offset 3, -8
 2677              		.cfi_offset 14, -4
3569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2678              		.loc 1 3569 0
 2679 0002 806A     		ldr	r0, [r0, #40]
 2680              	.LVL220:
ARM GAS  /tmp/ccyzTMkC.s 			page 123


3571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2681              		.loc 1 3571 0
 2682 0004 0023     		movs	r3, #0
 2683 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2684              		.loc 1 3582 0
 2685 000a 2023     		movs	r3, #32
 2686 000c 80F87130 		strb	r3, [r0, #113]
3590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2687              		.loc 1 3590 0
 2688 0010 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2689              	.LVL221:
3592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2690              		.loc 1 3592 0
 2691 0014 08BD     		pop	{r3, pc}
 2692              		.cfi_endproc
 2693              	.LFE176:
 2695              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2696              		.align	1
 2697              		.weak	HAL_UART_AbortReceiveCpltCallback
 2698              		.syntax unified
 2699              		.thumb
 2700              		.thumb_func
 2701              		.fpu fpv4-sp-d16
 2703              	HAL_UART_AbortReceiveCpltCallback:
 2704              	.LFB153:
2531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2705              		.loc 1 2531 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709              		@ link register save eliminated.
 2710              	.LVL222:
2538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2711              		.loc 1 2538 0
 2712 0000 7047     		bx	lr
 2713              		.cfi_endproc
 2714              	.LFE153:
 2716              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2717              		.align	1
 2718              		.global	HAL_UART_AbortReceive_IT
 2719              		.syntax unified
 2720              		.thumb
 2721              		.thumb_func
 2722              		.fpu fpv4-sp-d16
 2724              	HAL_UART_AbortReceive_IT:
 2725              	.LFB144:
2090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2726              		.loc 1 2090 0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 0
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              	.LVL223:
 2731 0000 10B5     		push	{r4, lr}
 2732              	.LCFI23:
 2733              		.cfi_def_cfa_offset 8
 2734              		.cfi_offset 4, -8
ARM GAS  /tmp/ccyzTMkC.s 			page 124


 2735              		.cfi_offset 14, -4
 2736 0002 0446     		mov	r4, r0
2096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2737              		.loc 1 2096 0
 2738 0004 0268     		ldr	r2, [r0]
 2739 0006 1368     		ldr	r3, [r2]
 2740 0008 23F49073 		bic	r3, r3, #288
 2741 000c 1360     		str	r3, [r2]
2097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 2742              		.loc 1 2097 0
 2743 000e 0268     		ldr	r2, [r0]
 2744 0010 9368     		ldr	r3, [r2, #8]
 2745 0012 23F00103 		bic	r3, r3, #1
 2746 0016 9360     		str	r3, [r2, #8]
2101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 2747              		.loc 1 2101 0
 2748 0018 0368     		ldr	r3, [r0]
 2749 001a 9A68     		ldr	r2, [r3, #8]
 2750 001c 12F0400F 		tst	r2, #64
 2751 0020 22D0     		beq	.L200
2103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2752              		.loc 1 2103 0
 2753 0022 9A68     		ldr	r2, [r3, #8]
 2754 0024 22F04002 		bic	r2, r2, #64
 2755 0028 9A60     		str	r2, [r3, #8]
2106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 2756              		.loc 1 2106 0
 2757 002a C36E     		ldr	r3, [r0, #108]
 2758 002c 53B1     		cbz	r3, .L201
2110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2759              		.loc 1 2110 0
 2760 002e 144A     		ldr	r2, .L204
 2761 0030 9A63     		str	r2, [r3, #56]
2113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 2762              		.loc 1 2113 0
 2763 0032 C06E     		ldr	r0, [r0, #108]
 2764              	.LVL224:
 2765 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2766              	.LVL225:
 2767 0038 10B1     		cbz	r0, .L202
2116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 2768              		.loc 1 2116 0
 2769 003a E06E     		ldr	r0, [r4, #108]
 2770 003c 836B     		ldr	r3, [r0, #56]
 2771 003e 9847     		blx	r3
 2772              	.LVL226:
 2773              	.L202:
2171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2774              		.loc 1 2171 0
 2775 0040 0020     		movs	r0, #0
 2776 0042 10BD     		pop	{r4, pc}
 2777              	.LVL227:
 2778              	.L201:
2122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2779              		.loc 1 2122 0
 2780 0044 0023     		movs	r3, #0
 2781 0046 A0F85A30 		strh	r3, [r0, #90]	@ movhi
ARM GAS  /tmp/ccyzTMkC.s 			page 125


2125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2782              		.loc 1 2125 0
 2783 004a 4365     		str	r3, [r0, #84]
2128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2784              		.loc 1 2128 0
 2785 004c 0368     		ldr	r3, [r0]
 2786 004e 0F22     		movs	r2, #15
 2787 0050 1A62     		str	r2, [r3, #32]
2131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2788              		.loc 1 2131 0
 2789 0052 0268     		ldr	r2, [r0]
 2790 0054 138B     		ldrh	r3, [r2, #24]
 2791 0056 43F00803 		orr	r3, r3, #8
 2792 005a 1383     		strh	r3, [r2, #24]	@ movhi
2134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2793              		.loc 1 2134 0
 2794 005c 2023     		movs	r3, #32
 2795 005e 80F87230 		strb	r3, [r0, #114]
2142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2796              		.loc 1 2142 0
 2797 0062 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2798              	.LVL228:
 2799 0066 EBE7     		b	.L202
 2800              	.LVL229:
 2801              	.L200:
2149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2802              		.loc 1 2149 0
 2803 0068 0022     		movs	r2, #0
 2804 006a A0F85A20 		strh	r2, [r0, #90]	@ movhi
2152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2805              		.loc 1 2152 0
 2806 006e 4265     		str	r2, [r0, #84]
2155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2807              		.loc 1 2155 0
 2808 0070 0F22     		movs	r2, #15
 2809 0072 1A62     		str	r2, [r3, #32]
2158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2810              		.loc 1 2158 0
 2811 0074 2023     		movs	r3, #32
 2812 0076 80F87230 		strb	r3, [r0, #114]
2166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2813              		.loc 1 2166 0
 2814 007a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2815              	.LVL230:
 2816 007e DFE7     		b	.L202
 2817              	.L205:
 2818              		.align	2
 2819              	.L204:
 2820 0080 00000000 		.word	UART_DMARxOnlyAbortCallback
 2821              		.cfi_endproc
 2822              	.LFE144:
 2824              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2825              		.align	1
 2826              		.syntax unified
 2827              		.thumb
 2828              		.thumb_func
 2829              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccyzTMkC.s 			page 126


 2831              	UART_DMARxOnlyAbortCallback:
 2832              	.LFB177:
3603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2833              		.loc 1 3603 0
 2834              		.cfi_startproc
 2835              		@ args = 0, pretend = 0, frame = 0
 2836              		@ frame_needed = 0, uses_anonymous_args = 0
 2837              	.LVL231:
 2838 0000 08B5     		push	{r3, lr}
 2839              	.LCFI24:
 2840              		.cfi_def_cfa_offset 8
 2841              		.cfi_offset 3, -8
 2842              		.cfi_offset 14, -4
3604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2843              		.loc 1 3604 0
 2844 0002 806A     		ldr	r0, [r0, #40]
 2845              	.LVL232:
3606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2846              		.loc 1 3606 0
 2847 0004 0023     		movs	r3, #0
 2848 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2849              		.loc 1 3609 0
 2850 000a 0368     		ldr	r3, [r0]
 2851 000c 0F22     		movs	r2, #15
 2852 000e 1A62     		str	r2, [r3, #32]
3612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2853              		.loc 1 3612 0
 2854 0010 0268     		ldr	r2, [r0]
 2855 0012 138B     		ldrh	r3, [r2, #24]
 2856 0014 43F00803 		orr	r3, r3, #8
 2857 0018 1383     		strh	r3, [r2, #24]	@ movhi
3615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2858              		.loc 1 3615 0
 2859 001a 2023     		movs	r3, #32
 2860 001c 80F87230 		strb	r3, [r0, #114]
3623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2861              		.loc 1 3623 0
 2862 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2863              	.LVL233:
3625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2864              		.loc 1 3625 0
 2865 0024 08BD     		pop	{r3, pc}
 2866              		.cfi_endproc
 2867              	.LFE177:
 2869              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 2870              		.align	1
 2871              		.global	HAL_MultiProcessor_EnterMuteMode
 2872              		.syntax unified
 2873              		.thumb
 2874              		.thumb_func
 2875              		.fpu fpv4-sp-d16
 2877              	HAL_MultiProcessor_EnterMuteMode:
 2878              	.LFB156:
2617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 2879              		.loc 1 2617 0
 2880              		.cfi_startproc
ARM GAS  /tmp/ccyzTMkC.s 			page 127


 2881              		@ args = 0, pretend = 0, frame = 0
 2882              		@ frame_needed = 0, uses_anonymous_args = 0
 2883              		@ link register save eliminated.
 2884              	.LVL234:
2618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2885              		.loc 1 2618 0
 2886 0000 0268     		ldr	r2, [r0]
 2887 0002 138B     		ldrh	r3, [r2, #24]
 2888 0004 43F00403 		orr	r3, r3, #4
 2889 0008 1383     		strh	r3, [r2, #24]	@ movhi
2619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2890              		.loc 1 2619 0
 2891 000a 7047     		bx	lr
 2892              		.cfi_endproc
 2893              	.LFE156:
 2895              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 2896              		.align	1
 2897              		.global	HAL_HalfDuplex_EnableTransmitter
 2898              		.syntax unified
 2899              		.thumb
 2900              		.thumb_func
 2901              		.fpu fpv4-sp-d16
 2903              	HAL_HalfDuplex_EnableTransmitter:
 2904              	.LFB157:
2627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2905              		.loc 1 2627 0
 2906              		.cfi_startproc
 2907              		@ args = 0, pretend = 0, frame = 0
 2908              		@ frame_needed = 0, uses_anonymous_args = 0
 2909              		@ link register save eliminated.
 2910              	.LVL235:
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2911              		.loc 1 2629 0
 2912 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2913 0004 012B     		cmp	r3, #1
 2914 0006 17D0     		beq	.L211
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2915              		.loc 1 2629 0 is_stmt 0 discriminator 2
 2916 0008 0123     		movs	r3, #1
 2917 000a 80F87030 		strb	r3, [r0, #112]
2630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2918              		.loc 1 2630 0 is_stmt 1 discriminator 2
 2919 000e 2423     		movs	r3, #36
 2920 0010 80F87130 		strb	r3, [r0, #113]
2633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2921              		.loc 1 2633 0 discriminator 2
 2922 0014 0268     		ldr	r2, [r0]
 2923 0016 1368     		ldr	r3, [r2]
 2924 0018 23F00C03 		bic	r3, r3, #12
 2925 001c 1360     		str	r3, [r2]
2636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2926              		.loc 1 2636 0 discriminator 2
 2927 001e 0268     		ldr	r2, [r0]
 2928 0020 1368     		ldr	r3, [r2]
 2929 0022 43F00803 		orr	r3, r3, #8
 2930 0026 1360     		str	r3, [r2]
2638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 128


 2931              		.loc 1 2638 0 discriminator 2
 2932 0028 2023     		movs	r3, #32
 2933 002a 80F87130 		strb	r3, [r0, #113]
2641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2934              		.loc 1 2641 0 discriminator 2
 2935 002e 0023     		movs	r3, #0
 2936 0030 80F87030 		strb	r3, [r0, #112]
2643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2937              		.loc 1 2643 0 discriminator 2
 2938 0034 1846     		mov	r0, r3
 2939              	.LVL236:
 2940 0036 7047     		bx	lr
 2941              	.LVL237:
 2942              	.L211:
2629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2943              		.loc 1 2629 0
 2944 0038 0220     		movs	r0, #2
 2945              	.LVL238:
2644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2946              		.loc 1 2644 0
 2947 003a 7047     		bx	lr
 2948              		.cfi_endproc
 2949              	.LFE157:
 2951              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 2952              		.align	1
 2953              		.global	HAL_HalfDuplex_EnableReceiver
 2954              		.syntax unified
 2955              		.thumb
 2956              		.thumb_func
 2957              		.fpu fpv4-sp-d16
 2959              	HAL_HalfDuplex_EnableReceiver:
 2960              	.LFB158:
2652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 2961              		.loc 1 2652 0
 2962              		.cfi_startproc
 2963              		@ args = 0, pretend = 0, frame = 0
 2964              		@ frame_needed = 0, uses_anonymous_args = 0
 2965              		@ link register save eliminated.
 2966              	.LVL239:
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2967              		.loc 1 2654 0
 2968 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2969 0004 012B     		cmp	r3, #1
 2970 0006 17D0     		beq	.L214
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2971              		.loc 1 2654 0 is_stmt 0 discriminator 2
 2972 0008 0123     		movs	r3, #1
 2973 000a 80F87030 		strb	r3, [r0, #112]
2655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2974              		.loc 1 2655 0 is_stmt 1 discriminator 2
 2975 000e 2423     		movs	r3, #36
 2976 0010 80F87130 		strb	r3, [r0, #113]
2658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2977              		.loc 1 2658 0 discriminator 2
 2978 0014 0268     		ldr	r2, [r0]
 2979 0016 1368     		ldr	r3, [r2]
 2980 0018 23F00C03 		bic	r3, r3, #12
ARM GAS  /tmp/ccyzTMkC.s 			page 129


 2981 001c 1360     		str	r3, [r2]
2661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2982              		.loc 1 2661 0 discriminator 2
 2983 001e 0268     		ldr	r2, [r0]
 2984 0020 1368     		ldr	r3, [r2]
 2985 0022 43F00403 		orr	r3, r3, #4
 2986 0026 1360     		str	r3, [r2]
2663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2987              		.loc 1 2663 0 discriminator 2
 2988 0028 2023     		movs	r3, #32
 2989 002a 80F87130 		strb	r3, [r0, #113]
2666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 2990              		.loc 1 2666 0 discriminator 2
 2991 002e 0023     		movs	r3, #0
 2992 0030 80F87030 		strb	r3, [r0, #112]
2668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2993              		.loc 1 2668 0 discriminator 2
 2994 0034 1846     		mov	r0, r3
 2995              	.LVL240:
 2996 0036 7047     		bx	lr
 2997              	.LVL241:
 2998              	.L214:
2654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 2999              		.loc 1 2654 0
 3000 0038 0220     		movs	r0, #2
 3001              	.LVL242:
2669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3002              		.loc 1 2669 0
 3003 003a 7047     		bx	lr
 3004              		.cfi_endproc
 3005              	.LFE158:
 3007              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3008              		.align	1
 3009              		.global	HAL_LIN_SendBreak
 3010              		.syntax unified
 3011              		.thumb
 3012              		.thumb_func
 3013              		.fpu fpv4-sp-d16
 3015              	HAL_LIN_SendBreak:
 3016              	.LFB159:
2678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 3017              		.loc 1 2678 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 0
 3020              		@ frame_needed = 0, uses_anonymous_args = 0
 3021              		@ link register save eliminated.
 3022              	.LVL243:
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3023              		.loc 1 2683 0
 3024 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3025 0004 012B     		cmp	r3, #1
 3026 0006 12D0     		beq	.L217
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3027              		.loc 1 2683 0 is_stmt 0 discriminator 2
 3028 0008 0123     		movs	r3, #1
 3029 000a 80F87030 		strb	r3, [r0, #112]
2685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 130


 3030              		.loc 1 2685 0 is_stmt 1 discriminator 2
 3031 000e 2423     		movs	r3, #36
 3032 0010 80F87130 		strb	r3, [r0, #113]
2688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3033              		.loc 1 2688 0 discriminator 2
 3034 0014 0268     		ldr	r2, [r0]
 3035 0016 138B     		ldrh	r3, [r2, #24]
 3036 0018 43F00203 		orr	r3, r3, #2
 3037 001c 1383     		strh	r3, [r2, #24]	@ movhi
2690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3038              		.loc 1 2690 0 discriminator 2
 3039 001e 2023     		movs	r3, #32
 3040 0020 80F87130 		strb	r3, [r0, #113]
2693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3041              		.loc 1 2693 0 discriminator 2
 3042 0024 0023     		movs	r3, #0
 3043 0026 80F87030 		strb	r3, [r0, #112]
2695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3044              		.loc 1 2695 0 discriminator 2
 3045 002a 1846     		mov	r0, r3
 3046              	.LVL244:
 3047 002c 7047     		bx	lr
 3048              	.LVL245:
 3049              	.L217:
2683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3050              		.loc 1 2683 0
 3051 002e 0220     		movs	r0, #2
 3052              	.LVL246:
2696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3053              		.loc 1 2696 0
 3054 0030 7047     		bx	lr
 3055              		.cfi_endproc
 3056              	.LFE159:
 3058              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3059              		.align	1
 3060              		.global	HAL_UART_GetState
 3061              		.syntax unified
 3062              		.thumb
 3063              		.thumb_func
 3064              		.fpu fpv4-sp-d16
 3066              	HAL_UART_GetState:
 3067              	.LFB160:
2725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 3068              		.loc 1 2725 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 0
 3071              		@ frame_needed = 0, uses_anonymous_args = 0
 3072              		@ link register save eliminated.
 3073              	.LVL247:
2727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 3074              		.loc 1 2727 0
 3075 0000 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 3076              	.LVL248:
2728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3077              		.loc 1 2728 0
 3078 0004 90F87200 		ldrb	r0, [r0, #114]	@ zero_extendqisi2
 3079              	.LVL249:
ARM GAS  /tmp/ccyzTMkC.s 			page 131


2731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3080              		.loc 1 2731 0
 3081 0008 1843     		orrs	r0, r0, r3
 3082              	.LVL250:
 3083 000a 7047     		bx	lr
 3084              		.cfi_endproc
 3085              	.LFE160:
 3087              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3088              		.align	1
 3089              		.global	HAL_UART_GetError
 3090              		.syntax unified
 3091              		.thumb
 3092              		.thumb_func
 3093              		.fpu fpv4-sp-d16
 3095              	HAL_UART_GetError:
 3096              	.LFB161:
2740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 3097              		.loc 1 2740 0
 3098              		.cfi_startproc
 3099              		@ args = 0, pretend = 0, frame = 0
 3100              		@ frame_needed = 0, uses_anonymous_args = 0
 3101              		@ link register save eliminated.
 3102              	.LVL251:
2741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3103              		.loc 1 2741 0
 3104 0000 406F     		ldr	r0, [r0, #116]
 3105              	.LVL252:
2742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 3106              		.loc 1 2742 0
 3107 0002 7047     		bx	lr
 3108              		.cfi_endproc
 3109              	.LFE161:
 3111              		.global	__aeabi_uldivmod
 3112              		.section	.text.UART_SetConfig,"ax",%progbits
 3113              		.align	1
 3114              		.global	UART_SetConfig
 3115              		.syntax unified
 3116              		.thumb
 3117              		.thumb_func
 3118              		.fpu fpv4-sp-d16
 3120              	UART_SetConfig:
 3121              	.LFB162:
2787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000U;
 3122              		.loc 1 2787 0
 3123              		.cfi_startproc
 3124              		@ args = 0, pretend = 0, frame = 0
 3125              		@ frame_needed = 0, uses_anonymous_args = 0
 3126              	.LVL253:
 3127 0000 2DE9F048 		push	{r4, r5, r6, r7, fp, lr}
 3128              	.LCFI25:
 3129              		.cfi_def_cfa_offset 24
 3130              		.cfi_offset 4, -24
 3131              		.cfi_offset 5, -20
 3132              		.cfi_offset 6, -16
 3133              		.cfi_offset 7, -12
 3134              		.cfi_offset 11, -8
 3135              		.cfi_offset 14, -4
ARM GAS  /tmp/ccyzTMkC.s 			page 132


 3136 0004 0446     		mov	r4, r0
 3137              	.LVL254:
2798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3138              		.loc 1 2798 0
 3139 0006 0168     		ldr	r1, [r0]
2823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 3140              		.loc 1 2823 0
 3141 0008 8368     		ldr	r3, [r0, #8]
 3142 000a 0269     		ldr	r2, [r0, #16]
 3143 000c 1343     		orrs	r3, r3, r2
 3144 000e 4269     		ldr	r2, [r0, #20]
 3145 0010 1343     		orrs	r3, r3, r2
 3146 0012 C269     		ldr	r2, [r0, #28]
 3147 0014 1343     		orrs	r3, r3, r2
 3148              	.LVL255:
2827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3149              		.loc 1 2827 0
 3150 0016 0868     		ldr	r0, [r1]
 3151              	.LVL256:
 3152 0018 A24A     		ldr	r2, .L318
 3153 001a 0240     		ands	r2, r2, r0
 3154 001c 1343     		orrs	r3, r3, r2
 3155              	.LVL257:
 3156 001e 0B60     		str	r3, [r1]
 3157              	.LVL258:
2832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3158              		.loc 1 2832 0
 3159 0020 2268     		ldr	r2, [r4]
 3160 0022 5368     		ldr	r3, [r2, #4]
 3161 0024 23F44053 		bic	r3, r3, #12288
 3162 0028 E168     		ldr	r1, [r4, #12]
 3163 002a 0B43     		orrs	r3, r3, r1
 3164 002c 5360     		str	r3, [r2, #4]
2840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3165              		.loc 1 2840 0
 3166 002e A169     		ldr	r1, [r4, #24]
 3167              	.LVL259:
2842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3168              		.loc 1 2842 0
 3169 0030 2268     		ldr	r2, [r4]
 3170 0032 9D4B     		ldr	r3, .L318+4
 3171 0034 9A42     		cmp	r2, r3
 3172 0036 01D0     		beq	.L221
2844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3173              		.loc 1 2844 0
 3174 0038 236A     		ldr	r3, [r4, #32]
 3175 003a 1943     		orrs	r1, r1, r3
 3176              	.LVL260:
 3177              	.L221:
2846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3178              		.loc 1 2846 0
 3179 003c 9368     		ldr	r3, [r2, #8]
 3180 003e 23F43063 		bic	r3, r3, #2816
 3181 0042 0B43     		orrs	r3, r3, r1
 3182 0044 9360     		str	r3, [r2, #8]
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3183              		.loc 1 2856 0
ARM GAS  /tmp/ccyzTMkC.s 			page 133


 3184 0046 2368     		ldr	r3, [r4]
 3185 0048 984A     		ldr	r2, .L318+8
 3186 004a 9342     		cmp	r3, r2
 3187 004c 27D0     		beq	.L306
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3188              		.loc 1 2856 0 is_stmt 0 discriminator 2
 3189 004e 984A     		ldr	r2, .L318+12
 3190 0050 9342     		cmp	r3, r2
 3191 0052 38D0     		beq	.L307
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3192              		.loc 1 2856 0 discriminator 14
 3193 0054 974A     		ldr	r2, .L318+16
 3194 0056 9342     		cmp	r3, r2
 3195 0058 4ED0     		beq	.L308
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3196              		.loc 1 2856 0 discriminator 26
 3197 005a 974A     		ldr	r2, .L318+20
 3198 005c 9342     		cmp	r3, r2
 3199 005e 61D0     		beq	.L309
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3200              		.loc 1 2856 0 discriminator 38
 3201 0060 964A     		ldr	r2, .L318+24
 3202 0062 9342     		cmp	r3, r2
 3203 0064 74D0     		beq	.L310
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3204              		.loc 1 2856 0 discriminator 50
 3205 0066 904A     		ldr	r2, .L318+4
 3206 0068 9342     		cmp	r3, r2
 3207 006a 00F08A80 		beq	.L311
2789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000U;
 3208              		.loc 1 2789 0 is_stmt 1
 3209 006e 1025     		movs	r5, #16
 3210              	.LVL261:
 3211              	.L227:
2859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3212              		.loc 1 2859 0
 3213 0070 8D4A     		ldr	r2, .L318+4
 3214 0072 9342     		cmp	r3, r2
 3215 0074 00F0AA80 		beq	.L312
2958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3216              		.loc 1 2958 0
 3217 0078 E369     		ldr	r3, [r4, #28]
 3218 007a B3F5004F 		cmp	r3, #32768
 3219 007e 00F03581 		beq	.L313
3017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3220              		.loc 1 3017 0
 3221 0082 082D     		cmp	r5, #8
 3222 0084 00F2BF81 		bhi	.L303
 3223 0088 DFE815F0 		tbh	[pc, r5, lsl #1]
 3224              	.L282:
 3225 008c 7F01     		.2byte	(.L281-.L282)/2
 3226 008e 9501     		.2byte	(.L283-.L282)/2
 3227 0090 9F01     		.2byte	(.L284-.L282)/2
 3228 0092 BD01     		.2byte	(.L303-.L282)/2
 3229 0094 AA01     		.2byte	(.L285-.L282)/2
 3230 0096 BD01     		.2byte	(.L303-.L282)/2
 3231 0098 BD01     		.2byte	(.L303-.L282)/2
ARM GAS  /tmp/ccyzTMkC.s 			page 134


 3232 009a BD01     		.2byte	(.L303-.L282)/2
 3233 009c B401     		.2byte	(.L286-.L282)/2
 3234              	.LVL262:
 3235              		.p2align 1
 3236              	.L306:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3237              		.loc 1 2856 0 discriminator 1
 3238 009e 02F55842 		add	r2, r2, #55296
 3239 00a2 D2F88820 		ldr	r2, [r2, #136]
 3240 00a6 02F00302 		and	r2, r2, #3
 3241 00aa 032A     		cmp	r2, #3
 3242 00ac 09D8     		bhi	.L223
 3243 00ae DFE802F0 		tbb	[pc, r2]
 3244              	.LVL263:
 3245              	.L225:
 3246 00b2 02       		.byte	(.L224-.L225)/2
 3247 00b3 04       		.byte	(.L226-.L225)/2
 3248 00b4 81       		.byte	(.L287-.L225)/2
 3249 00b5 06       		.byte	(.L228-.L225)/2
 3250              		.p2align 1
 3251              	.L224:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3252              		.loc 1 2856 0 is_stmt 0
 3253 00b6 0125     		movs	r5, #1
 3254 00b8 DAE7     		b	.L227
 3255              	.L226:
 3256              	.LVL264:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3257              		.loc 1 2856 0 discriminator 5
 3258 00ba 0425     		movs	r5, #4
 3259 00bc D8E7     		b	.L227
 3260              	.LVL265:
 3261              	.L228:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3262              		.loc 1 2856 0 discriminator 7
 3263 00be 0825     		movs	r5, #8
 3264 00c0 D6E7     		b	.L227
 3265              	.LVL266:
 3266              	.L223:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3267              		.loc 1 2856 0 discriminator 3
 3268 00c2 1025     		movs	r5, #16
 3269 00c4 D4E7     		b	.L227
 3270              	.LVL267:
 3271              	.L307:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3272              		.loc 1 2856 0 discriminator 13
 3273 00c6 02F5E632 		add	r2, r2, #117760
 3274 00ca D2F88820 		ldr	r2, [r2, #136]
 3275 00ce 02F00C02 		and	r2, r2, #12
 3276 00d2 0C2A     		cmp	r2, #12
 3277 00d4 0ED8     		bhi	.L230
 3278 00d6 DFE802F0 		tbb	[pc, r2]
 3279              	.LVL268:
 3280              	.L232:
 3281 00da 07       		.byte	(.L231-.L232)/2
 3282 00db 0D       		.byte	(.L230-.L232)/2
ARM GAS  /tmp/ccyzTMkC.s 			page 135


 3283 00dc 0D       		.byte	(.L230-.L232)/2
 3284 00dd 0D       		.byte	(.L230-.L232)/2
 3285 00de 09       		.byte	(.L233-.L232)/2
 3286 00df 0D       		.byte	(.L230-.L232)/2
 3287 00e0 0D       		.byte	(.L230-.L232)/2
 3288 00e1 0D       		.byte	(.L230-.L232)/2
 3289 00e2 6F       		.byte	(.L288-.L232)/2
 3290 00e3 0D       		.byte	(.L230-.L232)/2
 3291 00e4 0D       		.byte	(.L230-.L232)/2
 3292 00e5 0D       		.byte	(.L230-.L232)/2
 3293 00e6 0B       		.byte	(.L234-.L232)/2
 3294 00e7 00       		.p2align 1
 3295              	.L231:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3296              		.loc 1 2856 0
 3297 00e8 0025     		movs	r5, #0
 3298 00ea C1E7     		b	.L227
 3299              	.L233:
 3300              	.LVL269:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3301              		.loc 1 2856 0 discriminator 17
 3302 00ec 0425     		movs	r5, #4
 3303 00ee BFE7     		b	.L227
 3304              	.LVL270:
 3305              	.L234:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3306              		.loc 1 2856 0 discriminator 19
 3307 00f0 0825     		movs	r5, #8
 3308 00f2 BDE7     		b	.L227
 3309              	.LVL271:
 3310              	.L230:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3311              		.loc 1 2856 0 discriminator 15
 3312 00f4 1025     		movs	r5, #16
 3313 00f6 BBE7     		b	.L227
 3314              	.LVL272:
 3315              	.L308:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3316              		.loc 1 2856 0 discriminator 25
 3317 00f8 02F5E432 		add	r2, r2, #116736
 3318 00fc D2F88820 		ldr	r2, [r2, #136]
 3319 0100 02F03002 		and	r2, r2, #48
 3320 0104 102A     		cmp	r2, #16
 3321 0106 09D0     		beq	.L237
 3322 0108 05D9     		bls	.L314
 3323 010a 202A     		cmp	r2, #32
 3324 010c 56D0     		beq	.L289
 3325 010e 302A     		cmp	r2, #48
 3326 0110 06D1     		bne	.L236
 3327              	.LVL273:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3328              		.loc 1 2856 0 discriminator 31
 3329 0112 0825     		movs	r5, #8
 3330 0114 ACE7     		b	.L227
 3331              	.LVL274:
 3332              	.L314:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccyzTMkC.s 			page 136


 3333              		.loc 1 2856 0 discriminator 25
 3334 0116 1AB9     		cbnz	r2, .L236
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3335              		.loc 1 2856 0
 3336 0118 0025     		movs	r5, #0
 3337 011a A9E7     		b	.L227
 3338              	.L237:
 3339              	.LVL275:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3340              		.loc 1 2856 0 discriminator 29
 3341 011c 0425     		movs	r5, #4
 3342 011e A7E7     		b	.L227
 3343              	.LVL276:
 3344              	.L236:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3345              		.loc 1 2856 0 discriminator 27
 3346 0120 1025     		movs	r5, #16
 3347 0122 A5E7     		b	.L227
 3348              	.L309:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3349              		.loc 1 2856 0 discriminator 37
 3350 0124 02F5E232 		add	r2, r2, #115712
 3351 0128 D2F88820 		ldr	r2, [r2, #136]
 3352 012c 02F0C002 		and	r2, r2, #192
 3353 0130 402A     		cmp	r2, #64
 3354 0132 09D0     		beq	.L243
 3355 0134 05D9     		bls	.L315
 3356 0136 802A     		cmp	r2, #128
 3357 0138 42D0     		beq	.L290
 3358 013a C02A     		cmp	r2, #192
 3359 013c 06D1     		bne	.L242
 3360              	.LVL277:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3361              		.loc 1 2856 0 discriminator 43
 3362 013e 0825     		movs	r5, #8
 3363 0140 96E7     		b	.L227
 3364              	.LVL278:
 3365              	.L315:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3366              		.loc 1 2856 0 discriminator 37
 3367 0142 1AB9     		cbnz	r2, .L242
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3368              		.loc 1 2856 0
 3369 0144 0025     		movs	r5, #0
 3370 0146 93E7     		b	.L227
 3371              	.L243:
 3372              	.LVL279:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3373              		.loc 1 2856 0 discriminator 41
 3374 0148 0425     		movs	r5, #4
 3375 014a 91E7     		b	.L227
 3376              	.LVL280:
 3377              	.L242:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3378              		.loc 1 2856 0 discriminator 39
 3379 014c 1025     		movs	r5, #16
 3380 014e 8FE7     		b	.L227
ARM GAS  /tmp/ccyzTMkC.s 			page 137


 3381              	.L310:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3382              		.loc 1 2856 0 discriminator 49
 3383 0150 02F5E032 		add	r2, r2, #114688
 3384 0154 D2F88820 		ldr	r2, [r2, #136]
 3385 0158 02F44072 		and	r2, r2, #768
 3386 015c B2F5807F 		cmp	r2, #256
 3387 0160 0BD0     		beq	.L249
 3388 0162 07D9     		bls	.L316
 3389 0164 B2F5007F 		cmp	r2, #512
 3390 0168 2CD0     		beq	.L291
 3391 016a B2F5407F 		cmp	r2, #768
 3392 016e 06D1     		bne	.L248
 3393              	.LVL281:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3394              		.loc 1 2856 0 discriminator 55
 3395 0170 0825     		movs	r5, #8
 3396 0172 7DE7     		b	.L227
 3397              	.LVL282:
 3398              	.L316:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3399              		.loc 1 2856 0 discriminator 49
 3400 0174 1AB9     		cbnz	r2, .L248
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3401              		.loc 1 2856 0
 3402 0176 0025     		movs	r5, #0
 3403 0178 7AE7     		b	.L227
 3404              	.L249:
 3405              	.LVL283:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3406              		.loc 1 2856 0 discriminator 53
 3407 017a 0425     		movs	r5, #4
 3408 017c 78E7     		b	.L227
 3409              	.LVL284:
 3410              	.L248:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3411              		.loc 1 2856 0 discriminator 51
 3412 017e 1025     		movs	r5, #16
 3413 0180 76E7     		b	.L227
 3414              	.L311:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3415              		.loc 1 2856 0 discriminator 61
 3416 0182 02F5C832 		add	r2, r2, #102400
 3417 0186 D2F88820 		ldr	r2, [r2, #136]
 3418 018a 02F44062 		and	r2, r2, #3072
 3419 018e B2F5806F 		cmp	r2, #1024
 3420 0192 0BD0     		beq	.L254
 3421 0194 07D9     		bls	.L317
 3422 0196 B2F5006F 		cmp	r2, #2048
 3423 019a 15D0     		beq	.L293
 3424 019c B2F5406F 		cmp	r2, #3072
 3425 01a0 06D1     		bne	.L253
 3426              	.LVL285:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3427              		.loc 1 2856 0 discriminator 66
 3428 01a2 0825     		movs	r5, #8
 3429 01a4 64E7     		b	.L227
ARM GAS  /tmp/ccyzTMkC.s 			page 138


 3430              	.LVL286:
 3431              	.L317:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3432              		.loc 1 2856 0 discriminator 61
 3433 01a6 1AB9     		cbnz	r2, .L253
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3434              		.loc 1 2856 0
 3435 01a8 0025     		movs	r5, #0
 3436 01aa 61E7     		b	.L227
 3437              	.L254:
 3438              	.LVL287:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3439              		.loc 1 2856 0 discriminator 64
 3440 01ac 0425     		movs	r5, #4
 3441 01ae 5FE7     		b	.L227
 3442              	.LVL288:
 3443              	.L253:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3444              		.loc 1 2856 0 discriminator 62
 3445 01b0 1025     		movs	r5, #16
 3446 01b2 5DE7     		b	.L227
 3447              	.LVL289:
 3448              	.L287:
2856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3449              		.loc 1 2856 0
 3450 01b4 0225     		movs	r5, #2
 3451 01b6 5BE7     		b	.L227
 3452              	.L288:
 3453 01b8 0225     		movs	r5, #2
 3454 01ba 59E7     		b	.L227
 3455              	.LVL290:
 3456              	.L289:
 3457 01bc 0225     		movs	r5, #2
 3458 01be 57E7     		b	.L227
 3459              	.L290:
 3460 01c0 0225     		movs	r5, #2
 3461 01c2 55E7     		b	.L227
 3462              	.L291:
 3463 01c4 0225     		movs	r5, #2
 3464 01c6 53E7     		b	.L227
 3465              	.L293:
 3466 01c8 0225     		movs	r5, #2
 3467 01ca 51E7     		b	.L227
 3468              	.LVL291:
 3469              	.L312:
2862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3470              		.loc 1 2862 0 is_stmt 1
 3471 01cc 082D     		cmp	r5, #8
 3472 01ce 00F21D81 		bhi	.L294
 3473 01d2 DFE815F0 		tbh	[pc, r5, lsl #1]
 3474              	.L261:
 3475 01d6 0C00     		.2byte	(.L260-.L261)/2
 3476 01d8 1B01     		.2byte	(.L294-.L261)/2
 3477 01da 1400     		.2byte	(.L295-.L261)/2
 3478 01dc 1B01     		.2byte	(.L294-.L261)/2
 3479 01de 1100     		.2byte	(.L263-.L261)/2
 3480 01e0 1B01     		.2byte	(.L294-.L261)/2
ARM GAS  /tmp/ccyzTMkC.s 			page 139


 3481 01e2 1B01     		.2byte	(.L294-.L261)/2
 3482 01e4 1B01     		.2byte	(.L294-.L261)/2
 3483 01e6 0900     		.2byte	(.L264-.L261)/2
 3484              		.p2align 1
 3485              	.L264:
2889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3486              		.loc 1 2889 0
 3487 01e8 4FF40040 		mov	r0, #32768
 3488 01ec 08E0     		b	.L262
 3489              	.L260:
2868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3490              		.loc 1 2868 0
 3491 01ee FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3492              	.LVL292:
 3493              	.L265:
2899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3494              		.loc 1 2899 0
 3495 01f2 28B9     		cbnz	r0, .L262
 3496 01f4 0020     		movs	r0, #0
 3497              	.LVL293:
 3498 01f6 D9E0     		b	.L259
 3499              	.LVL294:
 3500              	.L263:
2882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3501              		.loc 1 2882 0
 3502 01f8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3503              	.LVL295:
2884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3504              		.loc 1 2884 0
 3505 01fc F9E7     		b	.L265
 3506              	.LVL296:
 3507              	.L295:
2875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3508              		.loc 1 2875 0
 3509 01fe 3048     		ldr	r0, .L318+28
 3510              	.LVL297:
 3511              	.L262:
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3512              		.loc 1 2902 0
 3513 0200 6268     		ldr	r2, [r4, #4]
 3514 0202 02EB4203 		add	r3, r2, r2, lsl #1
 3515 0206 8342     		cmp	r3, r0
 3516 0208 00F20281 		bhi	.L297
2902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate)))
 3517              		.loc 1 2902 0 is_stmt 0 discriminator 1
 3518 020c B0EB023F 		cmp	r0, r2, lsl #12
 3519 0210 00F20081 		bhi	.L298
2909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3520              		.loc 1 2909 0 is_stmt 1
 3521 0214 082D     		cmp	r5, #8
 3522 0216 66D8     		bhi	.L299
 3523 0218 DFE805F0 		tbb	[pc, r5]
 3524              	.L268:
 3525 021c 05       		.byte	(.L267-.L268)/2
 3526 021d 65       		.byte	(.L299-.L268)/2
 3527 021e 20       		.byte	(.L269-.L268)/2
 3528 021f 65       		.byte	(.L299-.L268)/2
ARM GAS  /tmp/ccyzTMkC.s 			page 140


 3529 0220 30       		.byte	(.L270-.L268)/2
 3530 0221 65       		.byte	(.L299-.L268)/2
 3531 0222 65       		.byte	(.L299-.L268)/2
 3532 0223 65       		.byte	(.L299-.L268)/2
 3533 0224 58       		.byte	(.L271-.L268)/2
 3534 0225 00       		.p2align 1
 3535              	.L267:
2915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3536              		.loc 1 2915 0
 3537 0226 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3538              	.LVL298:
 3539 022a 0025     		movs	r5, #0
 3540              	.LVL299:
 3541 022c 070E     		lsrs	r7, r0, #24
 3542 022e 0602     		lsls	r6, r0, #8
 3543 0230 6268     		ldr	r2, [r4, #4]
 3544 0232 5008     		lsrs	r0, r2, #1
 3545 0234 2B46     		mov	r3, r5
 3546 0236 16EB000B 		adds	fp, r6, r0
 3547 023a 47F1000C 		adc	ip, r7, #0
 3548 023e 5846     		mov	r0, fp
 3549 0240 6146     		mov	r1, ip
 3550 0242 FFF7FEFF 		bl	__aeabi_uldivmod
 3551              	.LVL300:
 3552 0246 0346     		mov	r3, r0
 3553              	.LVL301:
2917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
 3554              		.loc 1 2917 0
 3555 0248 2846     		mov	r0, r5
 3556              	.L266:
 3557              	.LVL302:
2946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3558              		.loc 1 2946 0
 3559 024a A3F54071 		sub	r1, r3, #768
 3560 024e 1D4A     		ldr	r2, .L318+32
 3561 0250 9142     		cmp	r1, r2
 3562 0252 00F2E180 		bhi	.L300
2948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3563              		.loc 1 2948 0
 3564 0256 2268     		ldr	r2, [r4]
 3565 0258 D360     		str	r3, [r2, #12]
 3566 025a A7E0     		b	.L259
 3567              	.LVL303:
 3568              	.L269:
2922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3569              		.loc 1 2922 0
 3570 025c 5608     		lsrs	r6, r2, #1
 3571 025e 0025     		movs	r5, #0
 3572              	.LVL304:
 3573 0260 2B46     		mov	r3, r5
 3574 0262 DFF864B0 		ldr	fp, .L318+36
 3575 0266 4FF0000C 		mov	ip, #0
 3576 026a 1BEB0600 		adds	r0, fp, r6
 3577 026e 4CF10001 		adc	r1, ip, #0
 3578 0272 FFF7FEFF 		bl	__aeabi_uldivmod
 3579              	.LVL305:
 3580 0276 0346     		mov	r3, r0
ARM GAS  /tmp/ccyzTMkC.s 			page 141


 3581              	.LVL306:
2924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
 3582              		.loc 1 2924 0
 3583 0278 2846     		mov	r0, r5
 3584 027a E6E7     		b	.L266
 3585              	.LVL307:
 3586              	.L270:
2929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3587              		.loc 1 2929 0
 3588 027c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3589              	.LVL308:
 3590 0280 0025     		movs	r5, #0
 3591              	.LVL309:
 3592 0282 070E     		lsrs	r7, r0, #24
 3593 0284 0602     		lsls	r6, r0, #8
 3594 0286 6268     		ldr	r2, [r4, #4]
 3595 0288 5008     		lsrs	r0, r2, #1
 3596 028a 2B46     		mov	r3, r5
 3597 028c 16EB000B 		adds	fp, r6, r0
 3598 0290 47F1000C 		adc	ip, r7, #0
 3599 0294 5846     		mov	r0, fp
 3600 0296 6146     		mov	r1, ip
 3601 0298 FFF7FEFF 		bl	__aeabi_uldivmod
 3602              	.LVL310:
 3603 029c 0346     		mov	r3, r0
 3604              	.LVL311:
2931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
 3605              		.loc 1 2931 0
 3606 029e 2846     		mov	r0, r5
 3607 02a0 D3E7     		b	.L266
 3608              	.L319:
 3609 02a2 00BF     		.align	2
 3610              	.L318:
 3611 02a4 F369FFEF 		.word	-268473869
 3612 02a8 00800040 		.word	1073774592
 3613 02ac 00380140 		.word	1073821696
 3614 02b0 00440040 		.word	1073759232
 3615 02b4 00480040 		.word	1073760256
 3616 02b8 004C0040 		.word	1073761280
 3617 02bc 00500040 		.word	1073762304
 3618 02c0 0024F400 		.word	16000000
 3619 02c4 FFFC0F00 		.word	1047807
 3620 02c8 000024F4 		.word	-198967296
 3621              	.LVL312:
 3622              	.L271:
2936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3623              		.loc 1 2936 0
 3624 02cc 5008     		lsrs	r0, r2, #1
 3625 02ce 0027     		movs	r7, #0
 3626 02d0 0025     		movs	r5, #0
 3627              	.LVL313:
 3628 02d2 2B46     		mov	r3, r5
 3629 02d4 10F50000 		adds	r0, r0, #8388608
 3630 02d8 47F10001 		adc	r1, r7, #0
 3631 02dc FFF7FEFF 		bl	__aeabi_uldivmod
 3632              	.LVL314:
 3633 02e0 0346     		mov	r3, r0
ARM GAS  /tmp/ccyzTMkC.s 			page 142


 3634              	.LVL315:
2938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
 3635              		.loc 1 2938 0
 3636 02e2 2846     		mov	r0, r5
 3637 02e4 B1E7     		b	.L266
 3638              	.LVL316:
 3639              	.L299:
2941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 3640              		.loc 1 2941 0
 3641 02e6 0120     		movs	r0, #1
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3642              		.loc 1 2791 0
 3643 02e8 0023     		movs	r3, #0
 3644 02ea AEE7     		b	.L266
 3645              	.LVL317:
 3646              	.L313:
2960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3647              		.loc 1 2960 0
 3648 02ec 082D     		cmp	r5, #8
 3649 02ee 49D8     		bhi	.L301
 3650 02f0 DFE805F0 		tbb	[pc, r5]
 3651              	.L275:
 3652 02f4 05       		.byte	(.L274-.L275)/2
 3653 02f5 1E       		.byte	(.L276-.L275)/2
 3654 02f6 29       		.byte	(.L277-.L275)/2
 3655 02f7 48       		.byte	(.L301-.L275)/2
 3656 02f8 34       		.byte	(.L278-.L275)/2
 3657 02f9 48       		.byte	(.L301-.L275)/2
 3658 02fa 48       		.byte	(.L301-.L275)/2
 3659 02fb 48       		.byte	(.L301-.L275)/2
 3660 02fc 3F       		.byte	(.L279-.L275)/2
 3661 02fd 00       		.p2align 1
 3662              	.L274:
2966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3663              		.loc 1 2966 0
 3664 02fe FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3665              	.LVL318:
 3666 0302 6268     		ldr	r2, [r4, #4]
 3667 0304 5308     		lsrs	r3, r2, #1
 3668 0306 03EB4003 		add	r3, r3, r0, lsl #1
 3669 030a B3FBF2F3 		udiv	r3, r3, r2
 3670 030e 9BB2     		uxth	r3, r3
 3671              	.LVL319:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3672              		.loc 1 2792 0
 3673 0310 0020     		movs	r0, #0
 3674              	.LVL320:
 3675              	.L273:
3004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3676              		.loc 1 3004 0
 3677 0312 A3F11001 		sub	r1, r3, #16
 3678 0316 4FF6EF72 		movw	r2, #65519
 3679 031a 9142     		cmp	r1, r2
 3680 031c 7ED8     		bhi	.L302
3006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3681              		.loc 1 3006 0
 3682 031e 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccyzTMkC.s 			page 143


 3683 0320 22F00F02 		bic	r2, r2, #15
 3684              	.LVL321:
3007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3685              		.loc 1 3007 0
 3686 0324 C3F34203 		ubfx	r3, r3, #1, #3
 3687              	.LVL322:
 3688 0328 1343     		orrs	r3, r3, r2
 3689              	.LVL323:
3008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3690              		.loc 1 3008 0
 3691 032a 2268     		ldr	r2, [r4]
 3692 032c D360     		str	r3, [r2, #12]
 3693 032e 3DE0     		b	.L259
 3694              	.LVL324:
 3695              	.L276:
2973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3696              		.loc 1 2973 0
 3697 0330 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3698              	.LVL325:
 3699 0334 6268     		ldr	r2, [r4, #4]
 3700 0336 5308     		lsrs	r3, r2, #1
 3701 0338 03EB4003 		add	r3, r3, r0, lsl #1
 3702 033c B3FBF2F3 		udiv	r3, r3, r2
 3703 0340 9BB2     		uxth	r3, r3
 3704              	.LVL326:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3705              		.loc 1 2792 0
 3706 0342 0020     		movs	r0, #0
2975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3707              		.loc 1 2975 0
 3708 0344 E5E7     		b	.L273
 3709              	.LVL327:
 3710              	.L277:
2980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3711              		.loc 1 2980 0
 3712 0346 6268     		ldr	r2, [r4, #4]
 3713 0348 5308     		lsrs	r3, r2, #1
 3714 034a 03F1F473 		add	r3, r3, #31981568
 3715 034e 03F59043 		add	r3, r3, #18432
 3716 0352 B3FBF2F3 		udiv	r3, r3, r2
 3717 0356 9BB2     		uxth	r3, r3
 3718              	.LVL328:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3719              		.loc 1 2792 0
 3720 0358 0020     		movs	r0, #0
2982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3721              		.loc 1 2982 0
 3722 035a DAE7     		b	.L273
 3723              	.LVL329:
 3724              	.L278:
2987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3725              		.loc 1 2987 0
 3726 035c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3727              	.LVL330:
 3728 0360 6268     		ldr	r2, [r4, #4]
 3729 0362 5308     		lsrs	r3, r2, #1
 3730 0364 03EB4003 		add	r3, r3, r0, lsl #1
ARM GAS  /tmp/ccyzTMkC.s 			page 144


 3731 0368 B3FBF2F3 		udiv	r3, r3, r2
 3732 036c 9BB2     		uxth	r3, r3
 3733              	.LVL331:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3734              		.loc 1 2792 0
 3735 036e 0020     		movs	r0, #0
2989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3736              		.loc 1 2989 0
 3737 0370 CFE7     		b	.L273
 3738              	.LVL332:
 3739              	.L279:
2994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3740              		.loc 1 2994 0
 3741 0372 6268     		ldr	r2, [r4, #4]
 3742 0374 5308     		lsrs	r3, r2, #1
 3743 0376 03F58033 		add	r3, r3, #65536
 3744 037a B3FBF2F3 		udiv	r3, r3, r2
 3745 037e 9BB2     		uxth	r3, r3
 3746              	.LVL333:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3747              		.loc 1 2792 0
 3748 0380 0020     		movs	r0, #0
2996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3749              		.loc 1 2996 0
 3750 0382 C6E7     		b	.L273
 3751              	.LVL334:
 3752              	.L301:
2999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3753              		.loc 1 2999 0
 3754 0384 0120     		movs	r0, #1
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3755              		.loc 1 2791 0
 3756 0386 0023     		movs	r3, #0
 3757 0388 C3E7     		b	.L273
 3758              	.L281:
3023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3759              		.loc 1 3023 0
 3760 038a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3761              	.LVL335:
 3762 038e 6368     		ldr	r3, [r4, #4]
 3763 0390 00EB5302 		add	r2, r0, r3, lsr #1
 3764 0394 B2FBF3F2 		udiv	r2, r2, r3
 3765 0398 92B2     		uxth	r2, r2
 3766              	.LVL336:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3767              		.loc 1 2792 0
 3768 039a 0020     		movs	r0, #0
 3769              	.LVL337:
 3770              	.L280:
3061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3771              		.loc 1 3061 0
 3772 039c A2F11001 		sub	r1, r2, #16
 3773 03a0 4FF6EF73 		movw	r3, #65519
 3774 03a4 9942     		cmp	r1, r3
 3775 03a6 3BD8     		bhi	.L304
3063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3776              		.loc 1 3063 0
ARM GAS  /tmp/ccyzTMkC.s 			page 145


 3777 03a8 2368     		ldr	r3, [r4]
 3778 03aa DA60     		str	r2, [r3, #12]
 3779              	.LVL338:
 3780              	.L259:
3078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 3781              		.loc 1 3078 0
 3782 03ac 0022     		movs	r2, #0
 3783 03ae 2266     		str	r2, [r4, #96]
3079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3784              		.loc 1 3079 0
 3785 03b0 6266     		str	r2, [r4, #100]
3082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3786              		.loc 1 3082 0
 3787 03b2 BDE8F088 		pop	{r4, r5, r6, r7, fp, pc}
 3788              	.LVL339:
 3789              	.L283:
3030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3790              		.loc 1 3030 0
 3791 03b6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3792              	.LVL340:
 3793 03ba 6368     		ldr	r3, [r4, #4]
 3794 03bc 00EB5302 		add	r2, r0, r3, lsr #1
 3795 03c0 B2FBF3F2 		udiv	r2, r2, r3
 3796 03c4 92B2     		uxth	r2, r2
 3797              	.LVL341:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3798              		.loc 1 2792 0
 3799 03c6 0020     		movs	r0, #0
3032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3800              		.loc 1 3032 0
 3801 03c8 E8E7     		b	.L280
 3802              	.LVL342:
 3803              	.L284:
3037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3804              		.loc 1 3037 0
 3805 03ca 6368     		ldr	r3, [r4, #4]
 3806 03cc 5A08     		lsrs	r2, r3, #1
 3807 03ce 02F57402 		add	r2, r2, #15990784
 3808 03d2 02F51052 		add	r2, r2, #9216
 3809 03d6 B2FBF3F2 		udiv	r2, r2, r3
 3810 03da 92B2     		uxth	r2, r2
 3811              	.LVL343:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3812              		.loc 1 2792 0
 3813 03dc 0020     		movs	r0, #0
3039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3814              		.loc 1 3039 0
 3815 03de DDE7     		b	.L280
 3816              	.LVL344:
 3817              	.L285:
3044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3818              		.loc 1 3044 0
 3819 03e0 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3820              	.LVL345:
 3821 03e4 6368     		ldr	r3, [r4, #4]
 3822 03e6 00EB5302 		add	r2, r0, r3, lsr #1
 3823 03ea B2FBF3F2 		udiv	r2, r2, r3
ARM GAS  /tmp/ccyzTMkC.s 			page 146


 3824 03ee 92B2     		uxth	r2, r2
 3825              	.LVL346:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3826              		.loc 1 2792 0
 3827 03f0 0020     		movs	r0, #0
3046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3828              		.loc 1 3046 0
 3829 03f2 D3E7     		b	.L280
 3830              	.LVL347:
 3831              	.L286:
3051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 3832              		.loc 1 3051 0
 3833 03f4 6368     		ldr	r3, [r4, #4]
 3834 03f6 5A08     		lsrs	r2, r3, #1
 3835 03f8 02F50042 		add	r2, r2, #32768
 3836 03fc B2FBF3F2 		udiv	r2, r2, r3
 3837 0400 92B2     		uxth	r2, r2
 3838              	.LVL348:
2792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 3839              		.loc 1 2792 0
 3840 0402 0020     		movs	r0, #0
3053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 3841              		.loc 1 3053 0
 3842 0404 CAE7     		b	.L280
 3843              	.LVL349:
 3844              	.L303:
3056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3845              		.loc 1 3056 0
 3846 0406 0120     		movs	r0, #1
2791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3847              		.loc 1 2791 0
 3848 0408 0022     		movs	r2, #0
 3849 040a C7E7     		b	.L280
 3850              	.L294:
2894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 3851              		.loc 1 2894 0
 3852 040c 0120     		movs	r0, #1
 3853 040e CDE7     		b	.L259
 3854              	.LVL350:
 3855              	.L297:
2905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 3856              		.loc 1 2905 0
 3857 0410 0120     		movs	r0, #1
 3858 0412 CBE7     		b	.L259
 3859              	.L298:
 3860 0414 0120     		movs	r0, #1
 3861 0416 C9E7     		b	.L259
 3862              	.LVL351:
 3863              	.L300:
2952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
 3864              		.loc 1 2952 0
 3865 0418 0120     		movs	r0, #1
 3866              	.LVL352:
 3867 041a C7E7     		b	.L259
 3868              	.LVL353:
 3869              	.L302:
3012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccyzTMkC.s 			page 147


 3870              		.loc 1 3012 0
 3871 041c 0120     		movs	r0, #1
 3872              	.LVL354:
 3873 041e C5E7     		b	.L259
 3874              	.LVL355:
 3875              	.L304:
3067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3876              		.loc 1 3067 0
 3877 0420 0120     		movs	r0, #1
 3878              	.LVL356:
 3879 0422 C3E7     		b	.L259
 3880              		.cfi_endproc
 3881              	.LFE162:
 3883              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3884              		.align	1
 3885              		.global	UART_AdvFeatureConfig
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv4-sp-d16
 3891              	UART_AdvFeatureConfig:
 3892              	.LFB163:
3090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3893              		.loc 1 3090 0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
 3897              		@ link register save eliminated.
 3898              	.LVL357:
3095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3899              		.loc 1 3095 0
 3900 0000 436A     		ldr	r3, [r0, #36]
 3901 0002 13F0010F 		tst	r3, #1
 3902 0006 06D0     		beq	.L321
3098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3903              		.loc 1 3098 0
 3904 0008 0268     		ldr	r2, [r0]
 3905 000a 5368     		ldr	r3, [r2, #4]
 3906 000c 23F40033 		bic	r3, r3, #131072
 3907 0010 816A     		ldr	r1, [r0, #40]
 3908 0012 0B43     		orrs	r3, r3, r1
 3909 0014 5360     		str	r3, [r2, #4]
 3910              	.L321:
3102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3911              		.loc 1 3102 0
 3912 0016 436A     		ldr	r3, [r0, #36]
 3913 0018 13F0020F 		tst	r3, #2
 3914 001c 06D0     		beq	.L322
3105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3915              		.loc 1 3105 0
 3916 001e 0268     		ldr	r2, [r0]
 3917 0020 5368     		ldr	r3, [r2, #4]
 3918 0022 23F48033 		bic	r3, r3, #65536
 3919 0026 C16A     		ldr	r1, [r0, #44]
 3920 0028 0B43     		orrs	r3, r3, r1
 3921 002a 5360     		str	r3, [r2, #4]
 3922              	.L322:
ARM GAS  /tmp/ccyzTMkC.s 			page 148


3109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3923              		.loc 1 3109 0
 3924 002c 436A     		ldr	r3, [r0, #36]
 3925 002e 13F0040F 		tst	r3, #4
 3926 0032 06D0     		beq	.L323
3112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3927              		.loc 1 3112 0
 3928 0034 0268     		ldr	r2, [r0]
 3929 0036 5368     		ldr	r3, [r2, #4]
 3930 0038 23F48023 		bic	r3, r3, #262144
 3931 003c 016B     		ldr	r1, [r0, #48]
 3932 003e 0B43     		orrs	r3, r3, r1
 3933 0040 5360     		str	r3, [r2, #4]
 3934              	.L323:
3116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3935              		.loc 1 3116 0
 3936 0042 436A     		ldr	r3, [r0, #36]
 3937 0044 13F0080F 		tst	r3, #8
 3938 0048 06D0     		beq	.L324
3119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3939              		.loc 1 3119 0
 3940 004a 0268     		ldr	r2, [r0]
 3941 004c 5368     		ldr	r3, [r2, #4]
 3942 004e 23F40043 		bic	r3, r3, #32768
 3943 0052 416B     		ldr	r1, [r0, #52]
 3944 0054 0B43     		orrs	r3, r3, r1
 3945 0056 5360     		str	r3, [r2, #4]
 3946              	.L324:
3123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3947              		.loc 1 3123 0
 3948 0058 436A     		ldr	r3, [r0, #36]
 3949 005a 13F0100F 		tst	r3, #16
 3950 005e 06D0     		beq	.L325
3126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3951              		.loc 1 3126 0
 3952 0060 0268     		ldr	r2, [r0]
 3953 0062 9368     		ldr	r3, [r2, #8]
 3954 0064 23F48053 		bic	r3, r3, #4096
 3955 0068 816B     		ldr	r1, [r0, #56]
 3956 006a 0B43     		orrs	r3, r3, r1
 3957 006c 9360     		str	r3, [r2, #8]
 3958              	.L325:
3130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3959              		.loc 1 3130 0
 3960 006e 436A     		ldr	r3, [r0, #36]
 3961 0070 13F0200F 		tst	r3, #32
 3962 0074 06D0     		beq	.L326
3133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3963              		.loc 1 3133 0
 3964 0076 0268     		ldr	r2, [r0]
 3965 0078 9368     		ldr	r3, [r2, #8]
 3966 007a 23F40053 		bic	r3, r3, #8192
 3967 007e C16B     		ldr	r1, [r0, #60]
 3968 0080 0B43     		orrs	r3, r3, r1
 3969 0082 9360     		str	r3, [r2, #8]
 3970              	.L326:
3137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccyzTMkC.s 			page 149


 3971              		.loc 1 3137 0
 3972 0084 436A     		ldr	r3, [r0, #36]
 3973 0086 13F0400F 		tst	r3, #64
 3974 008a 0AD0     		beq	.L327
3141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3975              		.loc 1 3141 0
 3976 008c 0268     		ldr	r2, [r0]
 3977 008e 5368     		ldr	r3, [r2, #4]
 3978 0090 23F48013 		bic	r3, r3, #1048576
 3979 0094 016C     		ldr	r1, [r0, #64]
 3980 0096 0B43     		orrs	r3, r3, r1
 3981 0098 5360     		str	r3, [r2, #4]
3143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 3982              		.loc 1 3143 0
 3983 009a 036C     		ldr	r3, [r0, #64]
 3984 009c B3F5801F 		cmp	r3, #1048576
 3985 00a0 0BD0     		beq	.L329
 3986              	.L327:
3151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 3987              		.loc 1 3151 0
 3988 00a2 436A     		ldr	r3, [r0, #36]
 3989 00a4 13F0800F 		tst	r3, #128
 3990 00a8 06D0     		beq	.L320
3154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3991              		.loc 1 3154 0
 3992 00aa 0268     		ldr	r2, [r0]
 3993 00ac 5368     		ldr	r3, [r2, #4]
 3994 00ae 23F40023 		bic	r3, r3, #524288
 3995 00b2 816C     		ldr	r1, [r0, #72]
 3996 00b4 0B43     		orrs	r3, r3, r1
 3997 00b6 5360     		str	r3, [r2, #4]
 3998              	.L320:
3156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3999              		.loc 1 3156 0
 4000 00b8 7047     		bx	lr
 4001              	.L329:
3146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4002              		.loc 1 3146 0
 4003 00ba 0268     		ldr	r2, [r0]
 4004 00bc 5368     		ldr	r3, [r2, #4]
 4005 00be 23F4C003 		bic	r3, r3, #6291456
 4006 00c2 416C     		ldr	r1, [r0, #68]
 4007 00c4 0B43     		orrs	r3, r3, r1
 4008 00c6 5360     		str	r3, [r2, #4]
 4009 00c8 EBE7     		b	.L327
 4010              		.cfi_endproc
 4011              	.LFE163:
 4013              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4014              		.align	1
 4015              		.global	UART_WaitOnFlagUntilTimeout
 4016              		.syntax unified
 4017              		.thumb
 4018              		.thumb_func
 4019              		.fpu fpv4-sp-d16
 4021              	UART_WaitOnFlagUntilTimeout:
 4022              	.LFB165:
3214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
ARM GAS  /tmp/ccyzTMkC.s 			page 150


 4023              		.loc 1 3214 0
 4024              		.cfi_startproc
 4025              		@ args = 4, pretend = 0, frame = 0
 4026              		@ frame_needed = 0, uses_anonymous_args = 0
 4027              	.LVL358:
 4028 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4029              	.LCFI26:
 4030              		.cfi_def_cfa_offset 24
 4031              		.cfi_offset 4, -24
 4032              		.cfi_offset 5, -20
 4033              		.cfi_offset 6, -16
 4034              		.cfi_offset 7, -12
 4035              		.cfi_offset 8, -8
 4036              		.cfi_offset 14, -4
 4037 0004 0546     		mov	r5, r0
 4038 0006 0F46     		mov	r7, r1
 4039 0008 1646     		mov	r6, r2
 4040 000a 9846     		mov	r8, r3
 4041 000c 069C     		ldr	r4, [sp, #24]
 4042              	.LVL359:
 4043              	.L332:
3216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4044              		.loc 1 3216 0
 4045 000e 2B68     		ldr	r3, [r5]
 4046 0010 DB69     		ldr	r3, [r3, #28]
 4047 0012 37EA0303 		bics	r3, r7, r3
 4048 0016 0CBF     		ite	eq
 4049 0018 0123     		moveq	r3, #1
 4050 001a 0023     		movne	r3, #0
 4051 001c B342     		cmp	r3, r6
 4052 001e 1DD1     		bne	.L337
3219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4053              		.loc 1 3219 0
 4054 0020 B4F1FF3F 		cmp	r4, #-1
 4055 0024 F3D0     		beq	.L332
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4056              		.loc 1 3221 0
 4057 0026 2CB1     		cbz	r4, .L333
3221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4058              		.loc 1 3221 0 is_stmt 0 discriminator 1
 4059 0028 FFF7FEFF 		bl	HAL_GetTick
 4060              	.LVL360:
 4061 002c A0EB0800 		sub	r0, r0, r8
 4062 0030 A042     		cmp	r0, r4
 4063 0032 ECD9     		bls	.L332
 4064              	.L333:
3227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif
 4065              		.loc 1 3227 0 is_stmt 1
 4066 0034 2A68     		ldr	r2, [r5]
 4067 0036 1368     		ldr	r3, [r2]
 4068 0038 23F4D073 		bic	r3, r3, #416
 4069 003c 1360     		str	r3, [r2]
3229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4070              		.loc 1 3229 0
 4071 003e 2A68     		ldr	r2, [r5]
 4072 0040 9368     		ldr	r3, [r2, #8]
 4073 0042 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccyzTMkC.s 			page 151


 4074 0046 9360     		str	r3, [r2, #8]
3231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4075              		.loc 1 3231 0
 4076 0048 2023     		movs	r3, #32
 4077 004a 85F87130 		strb	r3, [r5, #113]
3232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4078              		.loc 1 3232 0
 4079 004e 85F87230 		strb	r3, [r5, #114]
3235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4080              		.loc 1 3235 0
 4081 0052 0023     		movs	r3, #0
 4082 0054 85F87030 		strb	r3, [r5, #112]
3237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4083              		.loc 1 3237 0
 4084 0058 0320     		movs	r0, #3
 4085 005a 00E0     		b	.L334
 4086              	.L337:
3241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4087              		.loc 1 3241 0
 4088 005c 0020     		movs	r0, #0
 4089              	.L334:
3242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4090              		.loc 1 3242 0
 4091 005e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4092              		.cfi_endproc
 4093              	.LFE165:
 4095              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4096              		.align	1
 4097              		.global	HAL_UART_Transmit
 4098              		.syntax unified
 4099              		.thumb
 4100              		.thumb_func
 4101              		.fpu fpv4-sp-d16
 4103              	HAL_UART_Transmit:
 4104              	.LFB130:
1090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4105              		.loc 1 1090 0
 4106              		.cfi_startproc
 4107              		@ args = 0, pretend = 0, frame = 0
 4108              		@ frame_needed = 0, uses_anonymous_args = 0
 4109              	.LVL361:
 4110 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4111              	.LCFI27:
 4112              		.cfi_def_cfa_offset 24
 4113              		.cfi_offset 4, -24
 4114              		.cfi_offset 5, -20
 4115              		.cfi_offset 6, -16
 4116              		.cfi_offset 7, -12
 4117              		.cfi_offset 8, -8
 4118              		.cfi_offset 14, -4
 4119 0004 82B0     		sub	sp, sp, #8
 4120              	.LCFI28:
 4121              		.cfi_def_cfa_offset 32
 4122 0006 1E46     		mov	r6, r3
 4123              	.LVL362:
1095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4124              		.loc 1 1095 0
ARM GAS  /tmp/ccyzTMkC.s 			page 152


 4125 0008 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4126              	.LVL363:
 4127 000c DBB2     		uxtb	r3, r3
 4128 000e 202B     		cmp	r3, #32
 4129 0010 4ED1     		bne	.L344
 4130 0012 0446     		mov	r4, r0
 4131 0014 0D46     		mov	r5, r1
 4132 0016 9046     		mov	r8, r2
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4133              		.loc 1 1097 0
 4134 0018 0029     		cmp	r1, #0
 4135 001a 4ED0     		beq	.L345
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4136              		.loc 1 1097 0 is_stmt 0 discriminator 1
 4137 001c 002A     		cmp	r2, #0
 4138 001e 4ED0     		beq	.L346
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4139              		.loc 1 1103 0 is_stmt 1
 4140 0020 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4141 0024 012B     		cmp	r3, #1
 4142 0026 4CD0     		beq	.L347
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4143              		.loc 1 1103 0 is_stmt 0 discriminator 2
 4144 0028 0123     		movs	r3, #1
 4145 002a 80F87030 		strb	r3, [r0, #112]
1105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4146              		.loc 1 1105 0 is_stmt 1 discriminator 2
 4147 002e 0023     		movs	r3, #0
 4148 0030 4367     		str	r3, [r0, #116]
1106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4149              		.loc 1 1106 0 discriminator 2
 4150 0032 2123     		movs	r3, #33
 4151 0034 80F87130 		strb	r3, [r0, #113]
1109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4152              		.loc 1 1109 0 discriminator 2
 4153 0038 FFF7FEFF 		bl	HAL_GetTick
 4154              	.LVL364:
 4155 003c 0746     		mov	r7, r0
 4156              	.LVL365:
1111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 4157              		.loc 1 1111 0 discriminator 2
 4158 003e A4F85080 		strh	r8, [r4, #80]	@ movhi
1112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4159              		.loc 1 1112 0 discriminator 2
 4160 0042 A4F85280 		strh	r8, [r4, #82]	@ movhi
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4161              		.loc 1 1114 0 discriminator 2
 4162 0046 09E0     		b	.L340
 4163              	.LVL366:
 4164              	.L341:
1128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4165              		.loc 1 1128 0
 4166 0048 2368     		ldr	r3, [r4]
 4167 004a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4168 004c 1A85     		strh	r2, [r3, #40]	@ movhi
 4169 004e 0135     		adds	r5, r5, #1
 4170              	.LVL367:
ARM GAS  /tmp/ccyzTMkC.s 			page 153


 4171              	.L342:
1130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4172              		.loc 1 1130 0
 4173 0050 B4F85230 		ldrh	r3, [r4, #82]
 4174 0054 013B     		subs	r3, r3, #1
 4175 0056 9BB2     		uxth	r3, r3
 4176 0058 A4F85230 		strh	r3, [r4, #82]	@ movhi
 4177              	.L340:
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4178              		.loc 1 1114 0
 4179 005c B4F85230 		ldrh	r3, [r4, #82]
 4180 0060 9BB2     		uxth	r3, r3
 4181 0062 ABB1     		cbz	r3, .L351
1116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4182              		.loc 1 1116 0
 4183 0064 0096     		str	r6, [sp]
 4184 0066 3B46     		mov	r3, r7
 4185 0068 0022     		movs	r2, #0
 4186 006a 8021     		movs	r1, #128
 4187 006c 2046     		mov	r0, r4
 4188 006e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4189              	.LVL368:
 4190 0072 40BB     		cbnz	r0, .L348
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4191              		.loc 1 1120 0
 4192 0074 A368     		ldr	r3, [r4, #8]
 4193 0076 B3F5805F 		cmp	r3, #4096
 4194 007a E5D1     		bne	.L341
1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4195              		.loc 1 1120 0 is_stmt 0 discriminator 1
 4196 007c 2369     		ldr	r3, [r4, #16]
 4197 007e 002B     		cmp	r3, #0
 4198 0080 E2D1     		bne	.L341
 4199              	.LVL369:
1123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4200              		.loc 1 1123 0 is_stmt 1
 4201 0082 2268     		ldr	r2, [r4]
 4202 0084 35F8023B 		ldrh	r3, [r5], #2
 4203              	.LVL370:
 4204 0088 C3F30803 		ubfx	r3, r3, #0, #9
 4205 008c 1385     		strh	r3, [r2, #40]	@ movhi
 4206              	.LVL371:
1124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4207              		.loc 1 1124 0
 4208 008e DFE7     		b	.L342
 4209              	.LVL372:
 4210              	.L351:
1133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4211              		.loc 1 1133 0
 4212 0090 0096     		str	r6, [sp]
 4213 0092 3B46     		mov	r3, r7
 4214 0094 0022     		movs	r2, #0
 4215 0096 4021     		movs	r1, #64
 4216 0098 2046     		mov	r0, r4
 4217 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4218              	.LVL373:
 4219 009e 0346     		mov	r3, r0
ARM GAS  /tmp/ccyzTMkC.s 			page 154


 4220 00a0 98B9     		cbnz	r0, .L349
1139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4221              		.loc 1 1139 0
 4222 00a2 2022     		movs	r2, #32
 4223 00a4 84F87120 		strb	r2, [r4, #113]
1142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4224              		.loc 1 1142 0
 4225 00a8 0022     		movs	r2, #0
 4226 00aa 84F87020 		strb	r2, [r4, #112]
1144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4227              		.loc 1 1144 0
 4228 00ae 00E0     		b	.L339
 4229              	.LVL374:
 4230              	.L344:
1148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4231              		.loc 1 1148 0
 4232 00b0 0223     		movs	r3, #2
 4233              	.LVL375:
 4234              	.L339:
1150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4235              		.loc 1 1150 0
 4236 00b2 1846     		mov	r0, r3
 4237 00b4 02B0     		add	sp, sp, #8
 4238              	.LCFI29:
 4239              		.cfi_remember_state
 4240              		.cfi_def_cfa_offset 24
 4241              		@ sp needed
 4242 00b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4243              	.LVL376:
 4244              	.L345:
 4245              	.LCFI30:
 4246              		.cfi_restore_state
1099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4247              		.loc 1 1099 0
 4248 00ba 0123     		movs	r3, #1
 4249 00bc F9E7     		b	.L339
 4250              	.L346:
 4251 00be 0123     		movs	r3, #1
 4252 00c0 F7E7     		b	.L339
 4253              	.L347:
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4254              		.loc 1 1103 0
 4255 00c2 0223     		movs	r3, #2
 4256 00c4 F5E7     		b	.L339
 4257              	.LVL377:
 4258              	.L348:
1118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4259              		.loc 1 1118 0
 4260 00c6 0323     		movs	r3, #3
 4261 00c8 F3E7     		b	.L339
 4262              	.L349:
1135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4263              		.loc 1 1135 0
 4264 00ca 0323     		movs	r3, #3
 4265 00cc F1E7     		b	.L339
 4266              		.cfi_endproc
 4267              	.LFE130:
ARM GAS  /tmp/ccyzTMkC.s 			page 155


 4269              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4270              		.align	1
 4271              		.global	HAL_UART_Receive
 4272              		.syntax unified
 4273              		.thumb
 4274              		.thumb_func
 4275              		.fpu fpv4-sp-d16
 4277              	HAL_UART_Receive:
 4278              	.LFB131:
1165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
 4279              		.loc 1 1165 0
 4280              		.cfi_startproc
 4281              		@ args = 0, pretend = 0, frame = 0
 4282              		@ frame_needed = 0, uses_anonymous_args = 0
 4283              	.LVL378:
 4284 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4285              	.LCFI31:
 4286              		.cfi_def_cfa_offset 24
 4287              		.cfi_offset 4, -24
 4288              		.cfi_offset 5, -20
 4289              		.cfi_offset 6, -16
 4290              		.cfi_offset 7, -12
 4291              		.cfi_offset 8, -8
 4292              		.cfi_offset 14, -4
 4293 0004 82B0     		sub	sp, sp, #8
 4294              	.LCFI32:
 4295              		.cfi_def_cfa_offset 32
 4296 0006 1E46     		mov	r6, r3
 4297              	.LVL379:
1171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4298              		.loc 1 1171 0
 4299 0008 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 4300              	.LVL380:
 4301 000c DBB2     		uxtb	r3, r3
 4302 000e 202B     		cmp	r3, #32
 4303 0010 71D1     		bne	.L364
 4304 0012 0446     		mov	r4, r0
 4305 0014 0D46     		mov	r5, r1
 4306 0016 9046     		mov	r8, r2
1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4307              		.loc 1 1173 0
 4308 0018 0029     		cmp	r1, #0
 4309 001a 70D0     		beq	.L365
1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4310              		.loc 1 1173 0 is_stmt 0 discriminator 1
 4311 001c 002A     		cmp	r2, #0
 4312 001e 70D0     		beq	.L366
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4313              		.loc 1 1179 0 is_stmt 1
 4314 0020 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4315 0024 012B     		cmp	r3, #1
 4316 0026 6ED0     		beq	.L367
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4317              		.loc 1 1179 0 is_stmt 0 discriminator 2
 4318 0028 0123     		movs	r3, #1
 4319 002a 80F87030 		strb	r3, [r0, #112]
1181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  /tmp/ccyzTMkC.s 			page 156


 4320              		.loc 1 1181 0 is_stmt 1 discriminator 2
 4321 002e 0023     		movs	r3, #0
 4322 0030 4367     		str	r3, [r0, #116]
1182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4323              		.loc 1 1182 0 discriminator 2
 4324 0032 2223     		movs	r3, #34
 4325 0034 80F87230 		strb	r3, [r0, #114]
1185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4326              		.loc 1 1185 0 discriminator 2
 4327 0038 FFF7FEFF 		bl	HAL_GetTick
 4328              	.LVL381:
 4329 003c 0746     		mov	r7, r0
 4330              	.LVL382:
1187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 4331              		.loc 1 1187 0 discriminator 2
 4332 003e A4F85880 		strh	r8, [r4, #88]	@ movhi
1188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4333              		.loc 1 1188 0 discriminator 2
 4334 0042 A4F85A80 		strh	r8, [r4, #90]	@ movhi
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4335              		.loc 1 1191 0 discriminator 2
 4336 0046 A368     		ldr	r3, [r4, #8]
 4337 0048 B3F5805F 		cmp	r3, #4096
 4338 004c 06D0     		beq	.L370
 4339 004e A3B9     		cbnz	r3, .L357
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4340              		.loc 1 1191 0 is_stmt 0 discriminator 5
 4341 0050 2369     		ldr	r3, [r4, #16]
 4342 0052 73B9     		cbnz	r3, .L358
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4343              		.loc 1 1191 0 discriminator 7
 4344 0054 FF23     		movs	r3, #255
 4345 0056 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4346 005a 11E0     		b	.L356
 4347              	.L370:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4348              		.loc 1 1191 0 discriminator 1
 4349 005c 2369     		ldr	r3, [r4, #16]
 4350 005e 23B9     		cbnz	r3, .L355
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4351              		.loc 1 1191 0 discriminator 3
 4352 0060 40F2FF13 		movw	r3, #511
 4353 0064 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4354 0068 0AE0     		b	.L356
 4355              	.L355:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4356              		.loc 1 1191 0 discriminator 4
 4357 006a FF23     		movs	r3, #255
 4358 006c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4359 0070 06E0     		b	.L356
 4360              	.L358:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4361              		.loc 1 1191 0 discriminator 8
 4362 0072 7F23     		movs	r3, #127
 4363 0074 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4364 0078 02E0     		b	.L356
 4365              	.L357:
ARM GAS  /tmp/ccyzTMkC.s 			page 157


1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4366              		.loc 1 1191 0 discriminator 6
 4367 007a B3F1805F 		cmp	r3, #268435456
 4368 007e 02D0     		beq	.L371
 4369              	.L356:
1192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4370              		.loc 1 1192 0 is_stmt 1
 4371 0080 B4F85C80 		ldrh	r8, [r4, #92]
 4372              	.LVL383:
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4373              		.loc 1 1195 0
 4374 0084 16E0     		b	.L360
 4375              	.LVL384:
 4376              	.L371:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4377              		.loc 1 1191 0 discriminator 9
 4378 0086 2369     		ldr	r3, [r4, #16]
 4379 0088 1BB9     		cbnz	r3, .L359
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4380              		.loc 1 1191 0 is_stmt 0 discriminator 10
 4381 008a 7F23     		movs	r3, #127
 4382 008c A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4383 0090 F6E7     		b	.L356
 4384              	.L359:
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 4385              		.loc 1 1191 0 discriminator 11
 4386 0092 3F23     		movs	r3, #63
 4387 0094 A4F85C30 		strh	r3, [r4, #92]	@ movhi
 4388 0098 F2E7     		b	.L356
 4389              	.LVL385:
 4390              	.L361:
1209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4391              		.loc 1 1209 0 is_stmt 1
 4392 009a 2368     		ldr	r3, [r4]
 4393 009c 9A8C     		ldrh	r2, [r3, #36]
 4394 009e 5FFA88F3 		uxtb	r3, r8
 4395              	.LVL386:
 4396 00a2 1340     		ands	r3, r3, r2
 4397 00a4 2B70     		strb	r3, [r5]
 4398 00a6 0135     		adds	r5, r5, #1
 4399              	.LVL387:
 4400              	.L362:
1211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4401              		.loc 1 1211 0
 4402 00a8 B4F85A30 		ldrh	r3, [r4, #90]
 4403 00ac 013B     		subs	r3, r3, #1
 4404 00ae 9BB2     		uxth	r3, r3
 4405 00b0 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4406              	.L360:
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4407              		.loc 1 1195 0
 4408 00b4 B4F85A30 		ldrh	r3, [r4, #90]
 4409 00b8 9BB2     		uxth	r3, r3
 4410 00ba ABB1     		cbz	r3, .L372
1197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4411              		.loc 1 1197 0
 4412 00bc 0096     		str	r6, [sp]
ARM GAS  /tmp/ccyzTMkC.s 			page 158


 4413 00be 3B46     		mov	r3, r7
 4414 00c0 0022     		movs	r2, #0
 4415 00c2 2021     		movs	r1, #32
 4416 00c4 2046     		mov	r0, r4
 4417 00c6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4418              	.LVL388:
 4419 00ca F0B9     		cbnz	r0, .L368
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4420              		.loc 1 1201 0
 4421 00cc A368     		ldr	r3, [r4, #8]
 4422 00ce B3F5805F 		cmp	r3, #4096
 4423 00d2 E2D1     		bne	.L361
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 4424              		.loc 1 1201 0 is_stmt 0 discriminator 1
 4425 00d4 2369     		ldr	r3, [r4, #16]
 4426 00d6 002B     		cmp	r3, #0
 4427 00d8 DFD1     		bne	.L361
 4428              	.LVL389:
1204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2U;
 4429              		.loc 1 1204 0 is_stmt 1
 4430 00da 2368     		ldr	r3, [r4]
 4431 00dc 9B8C     		ldrh	r3, [r3, #36]
 4432 00de 08EA0303 		and	r3, r8, r3
 4433 00e2 25F8023B 		strh	r3, [r5], #2	@ movhi
 4434              	.LVL390:
1205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4435              		.loc 1 1205 0
 4436 00e6 DFE7     		b	.L362
 4437              	.LVL391:
 4438              	.L372:
1215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4439              		.loc 1 1215 0
 4440 00e8 2023     		movs	r3, #32
 4441 00ea 84F87230 		strb	r3, [r4, #114]
1218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4442              		.loc 1 1218 0
 4443 00ee 0020     		movs	r0, #0
 4444 00f0 84F87000 		strb	r0, [r4, #112]
1220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4445              		.loc 1 1220 0
 4446 00f4 00E0     		b	.L353
 4447              	.LVL392:
 4448              	.L364:
1224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4449              		.loc 1 1224 0
 4450 00f6 0220     		movs	r0, #2
 4451              	.LVL393:
 4452              	.L353:
1226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4453              		.loc 1 1226 0
 4454 00f8 02B0     		add	sp, sp, #8
 4455              	.LCFI33:
 4456              		.cfi_remember_state
 4457              		.cfi_def_cfa_offset 24
 4458              		@ sp needed
 4459 00fa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4460              	.LVL394:
ARM GAS  /tmp/ccyzTMkC.s 			page 159


 4461              	.L365:
 4462              	.LCFI34:
 4463              		.cfi_restore_state
1175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4464              		.loc 1 1175 0
 4465 00fe 0120     		movs	r0, #1
 4466              	.LVL395:
 4467 0100 FAE7     		b	.L353
 4468              	.LVL396:
 4469              	.L366:
 4470 0102 0120     		movs	r0, #1
 4471              	.LVL397:
 4472 0104 F8E7     		b	.L353
 4473              	.LVL398:
 4474              	.L367:
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4475              		.loc 1 1179 0
 4476 0106 0220     		movs	r0, #2
 4477              	.LVL399:
 4478 0108 F6E7     		b	.L353
 4479              	.LVL400:
 4480              	.L368:
1199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 4481              		.loc 1 1199 0
 4482 010a 0320     		movs	r0, #3
 4483 010c F4E7     		b	.L353
 4484              		.cfi_endproc
 4485              	.LFE131:
 4487              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4488              		.align	1
 4489              		.global	UART_CheckIdleState
 4490              		.syntax unified
 4491              		.thumb
 4492              		.thumb_func
 4493              		.fpu fpv4-sp-d16
 4495              	UART_CheckIdleState:
 4496              	.LFB164:
3164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 4497              		.loc 1 3164 0
 4498              		.cfi_startproc
 4499              		@ args = 0, pretend = 0, frame = 0
 4500              		@ frame_needed = 0, uses_anonymous_args = 0
 4501              	.LVL401:
 4502 0000 30B5     		push	{r4, r5, lr}
 4503              	.LCFI35:
 4504              		.cfi_def_cfa_offset 12
 4505              		.cfi_offset 4, -12
 4506              		.cfi_offset 5, -8
 4507              		.cfi_offset 14, -4
 4508 0002 83B0     		sub	sp, sp, #12
 4509              	.LCFI36:
 4510              		.cfi_def_cfa_offset 24
 4511 0004 0446     		mov	r4, r0
 4512              	.LVL402:
3168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4513              		.loc 1 3168 0
 4514 0006 0023     		movs	r3, #0
ARM GAS  /tmp/ccyzTMkC.s 			page 160


 4515 0008 4367     		str	r3, [r0, #116]
3171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4516              		.loc 1 3171 0
 4517 000a FFF7FEFF 		bl	HAL_GetTick
 4518              	.LVL403:
 4519 000e 0546     		mov	r5, r0
 4520              	.LVL404:
3174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4521              		.loc 1 3174 0
 4522 0010 2368     		ldr	r3, [r4]
 4523 0012 1B68     		ldr	r3, [r3]
 4524 0014 13F0080F 		tst	r3, #8
 4525 0018 0ED1     		bne	.L380
 4526              	.LVL405:
 4527              	.L374:
3184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4528              		.loc 1 3184 0
 4529 001a 2368     		ldr	r3, [r4]
 4530 001c 1B68     		ldr	r3, [r3]
 4531 001e 13F0040F 		tst	r3, #4
 4532 0022 17D1     		bne	.L381
 4533              	.L376:
3195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4534              		.loc 1 3195 0
 4535 0024 2023     		movs	r3, #32
 4536 0026 84F87130 		strb	r3, [r4, #113]
3196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4537              		.loc 1 3196 0
 4538 002a 84F87230 		strb	r3, [r4, #114]
3199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4539              		.loc 1 3199 0
 4540 002e 0020     		movs	r0, #0
 4541 0030 84F87000 		strb	r0, [r4, #112]
 4542              	.L375:
3202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4543              		.loc 1 3202 0
 4544 0034 03B0     		add	sp, sp, #12
 4545              	.LCFI37:
 4546              		.cfi_remember_state
 4547              		.cfi_def_cfa_offset 12
 4548              		@ sp needed
 4549 0036 30BD     		pop	{r4, r5, pc}
 4550              	.LVL406:
 4551              	.L380:
 4552              	.LCFI38:
 4553              		.cfi_restore_state
3177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4554              		.loc 1 3177 0
 4555 0038 6FF07E43 		mvn	r3, #-33554432
 4556 003c 0093     		str	r3, [sp]
 4557 003e 0346     		mov	r3, r0
 4558 0040 0022     		movs	r2, #0
 4559 0042 4FF40011 		mov	r1, #2097152
 4560 0046 2046     		mov	r0, r4
 4561              	.LVL407:
 4562 0048 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4563              	.LVL408:
ARM GAS  /tmp/ccyzTMkC.s 			page 161


 4564 004c 0028     		cmp	r0, #0
 4565 004e E4D0     		beq	.L374
3180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4566              		.loc 1 3180 0
 4567 0050 0320     		movs	r0, #3
 4568 0052 EFE7     		b	.L375
 4569              	.L381:
3187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 4570              		.loc 1 3187 0
 4571 0054 6FF07E43 		mvn	r3, #-33554432
 4572 0058 0093     		str	r3, [sp]
 4573 005a 2B46     		mov	r3, r5
 4574 005c 0022     		movs	r2, #0
 4575 005e 4FF48001 		mov	r1, #4194304
 4576 0062 2046     		mov	r0, r4
 4577 0064 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4578              	.LVL409:
 4579 0068 0028     		cmp	r0, #0
 4580 006a DBD0     		beq	.L376
3190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 4581              		.loc 1 3190 0
 4582 006c 0320     		movs	r0, #3
 4583 006e E1E7     		b	.L375
 4584              		.cfi_endproc
 4585              	.LFE164:
 4587              		.section	.text.HAL_UART_Init,"ax",%progbits
 4588              		.align	1
 4589              		.global	HAL_UART_Init
 4590              		.syntax unified
 4591              		.thumb
 4592              		.thumb_func
 4593              		.fpu fpv4-sp-d16
 4595              	HAL_UART_Init:
 4596              	.LFB123:
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4597              		.loc 1 328 0
 4598              		.cfi_startproc
 4599              		@ args = 0, pretend = 0, frame = 0
 4600              		@ frame_needed = 0, uses_anonymous_args = 0
 4601              	.LVL410:
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4602              		.loc 1 330 0
 4603 0000 78B3     		cbz	r0, .L386
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4604              		.loc 1 328 0
 4605 0002 10B5     		push	{r4, lr}
 4606              	.LCFI39:
 4607              		.cfi_def_cfa_offset 8
 4608              		.cfi_offset 4, -8
 4609              		.cfi_offset 14, -4
 4610 0004 0446     		mov	r4, r0
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4611              		.loc 1 346 0
 4612 0006 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4613 000a 0BB3     		cbz	r3, .L391
 4614              	.LVL411:
 4615              	.L384:
ARM GAS  /tmp/ccyzTMkC.s 			page 162


 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4616              		.loc 1 367 0
 4617 000c 2423     		movs	r3, #36
 4618 000e 84F87130 		strb	r3, [r4, #113]
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4619              		.loc 1 370 0
 4620 0012 2268     		ldr	r2, [r4]
 4621 0014 1368     		ldr	r3, [r2]
 4622 0016 23F00103 		bic	r3, r3, #1
 4623 001a 1360     		str	r3, [r2]
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4624              		.loc 1 373 0
 4625 001c 2046     		mov	r0, r4
 4626 001e FFF7FEFF 		bl	UART_SetConfig
 4627              	.LVL412:
 4628 0022 0128     		cmp	r0, #1
 4629 0024 13D0     		beq	.L383
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4630              		.loc 1 378 0
 4631 0026 636A     		ldr	r3, [r4, #36]
 4632 0028 BBB9     		cbnz	r3, .L392
 4633              	.L385:
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4634              		.loc 1 386 0
 4635 002a 2268     		ldr	r2, [r4]
 4636 002c 5368     		ldr	r3, [r2, #4]
 4637 002e 23F49043 		bic	r3, r3, #18432
 4638 0032 5360     		str	r3, [r2, #4]
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4639              		.loc 1 387 0
 4640 0034 2268     		ldr	r2, [r4]
 4641 0036 9368     		ldr	r3, [r2, #8]
 4642 0038 23F02A03 		bic	r3, r3, #42
 4643 003c 9360     		str	r3, [r2, #8]
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4644              		.loc 1 390 0
 4645 003e 2268     		ldr	r2, [r4]
 4646 0040 1368     		ldr	r3, [r2]
 4647 0042 43F00103 		orr	r3, r3, #1
 4648 0046 1360     		str	r3, [r2]
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4649              		.loc 1 393 0
 4650 0048 2046     		mov	r0, r4
 4651 004a FFF7FEFF 		bl	UART_CheckIdleState
 4652              	.LVL413:
 4653              	.L383:
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4654              		.loc 1 394 0
 4655 004e 10BD     		pop	{r4, pc}
 4656              	.LVL414:
 4657              	.L391:
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4658              		.loc 1 349 0
 4659 0050 80F87030 		strb	r3, [r0, #112]
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4660              		.loc 1 363 0
 4661 0054 FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  /tmp/ccyzTMkC.s 			page 163


 4662              	.LVL415:
 4663 0058 D8E7     		b	.L384
 4664              	.L392:
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4665              		.loc 1 380 0
 4666 005a 2046     		mov	r0, r4
 4667 005c FFF7FEFF 		bl	UART_AdvFeatureConfig
 4668              	.LVL416:
 4669 0060 E3E7     		b	.L385
 4670              	.LVL417:
 4671              	.L386:
 4672              	.LCFI40:
 4673              		.cfi_def_cfa_offset 0
 4674              		.cfi_restore 4
 4675              		.cfi_restore 14
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4676              		.loc 1 332 0
 4677 0062 0120     		movs	r0, #1
 4678              	.LVL418:
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4679              		.loc 1 394 0
 4680 0064 7047     		bx	lr
 4681              		.cfi_endproc
 4682              	.LFE123:
 4684              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4685              		.align	1
 4686              		.global	HAL_HalfDuplex_Init
 4687              		.syntax unified
 4688              		.thumb
 4689              		.thumb_func
 4690              		.fpu fpv4-sp-d16
 4692              	HAL_HalfDuplex_Init:
 4693              	.LFB124:
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4694              		.loc 1 403 0
 4695              		.cfi_startproc
 4696              		@ args = 0, pretend = 0, frame = 0
 4697              		@ frame_needed = 0, uses_anonymous_args = 0
 4698              	.LVL419:
 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4699              		.loc 1 405 0
 4700 0000 0028     		cmp	r0, #0
 4701 0002 34D0     		beq	.L397
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4702              		.loc 1 403 0
 4703 0004 10B5     		push	{r4, lr}
 4704              	.LCFI41:
 4705              		.cfi_def_cfa_offset 8
 4706              		.cfi_offset 4, -8
 4707              		.cfi_offset 14, -4
 4708 0006 0446     		mov	r4, r0
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4709              		.loc 1 413 0
 4710 0008 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4711 000c 33B3     		cbz	r3, .L402
 4712              	.LVL420:
 4713              	.L395:
ARM GAS  /tmp/ccyzTMkC.s 			page 164


 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4714              		.loc 1 434 0
 4715 000e 2423     		movs	r3, #36
 4716 0010 84F87130 		strb	r3, [r4, #113]
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4717              		.loc 1 437 0
 4718 0014 2268     		ldr	r2, [r4]
 4719 0016 1368     		ldr	r3, [r2]
 4720 0018 23F00103 		bic	r3, r3, #1
 4721 001c 1360     		str	r3, [r2]
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4722              		.loc 1 440 0
 4723 001e 2046     		mov	r0, r4
 4724 0020 FFF7FEFF 		bl	UART_SetConfig
 4725              	.LVL421:
 4726 0024 0128     		cmp	r0, #1
 4727 0026 18D0     		beq	.L394
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4728              		.loc 1 445 0
 4729 0028 636A     		ldr	r3, [r4, #36]
 4730 002a E3B9     		cbnz	r3, .L403
 4731              	.L396:
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4732              		.loc 1 453 0
 4733 002c 2268     		ldr	r2, [r4]
 4734 002e 5368     		ldr	r3, [r2, #4]
 4735 0030 23F49043 		bic	r3, r3, #18432
 4736 0034 5360     		str	r3, [r2, #4]
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4737              		.loc 1 454 0
 4738 0036 2268     		ldr	r2, [r4]
 4739 0038 9368     		ldr	r3, [r2, #8]
 4740 003a 23F02203 		bic	r3, r3, #34
 4741 003e 9360     		str	r3, [r2, #8]
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4742              		.loc 1 457 0
 4743 0040 2268     		ldr	r2, [r4]
 4744 0042 9368     		ldr	r3, [r2, #8]
 4745 0044 43F00803 		orr	r3, r3, #8
 4746 0048 9360     		str	r3, [r2, #8]
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4747              		.loc 1 460 0
 4748 004a 2268     		ldr	r2, [r4]
 4749 004c 1368     		ldr	r3, [r2]
 4750 004e 43F00103 		orr	r3, r3, #1
 4751 0052 1360     		str	r3, [r2]
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4752              		.loc 1 463 0
 4753 0054 2046     		mov	r0, r4
 4754 0056 FFF7FEFF 		bl	UART_CheckIdleState
 4755              	.LVL422:
 4756              	.L394:
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4757              		.loc 1 464 0
 4758 005a 10BD     		pop	{r4, pc}
 4759              	.LVL423:
 4760              	.L402:
ARM GAS  /tmp/ccyzTMkC.s 			page 165


 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4761              		.loc 1 416 0
 4762 005c 80F87030 		strb	r3, [r0, #112]
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4763              		.loc 1 430 0
 4764 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 4765              	.LVL424:
 4766 0064 D3E7     		b	.L395
 4767              	.L403:
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4768              		.loc 1 447 0
 4769 0066 2046     		mov	r0, r4
 4770 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4771              	.LVL425:
 4772 006c DEE7     		b	.L396
 4773              	.LVL426:
 4774              	.L397:
 4775              	.LCFI42:
 4776              		.cfi_def_cfa_offset 0
 4777              		.cfi_restore 4
 4778              		.cfi_restore 14
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4779              		.loc 1 407 0
 4780 006e 0120     		movs	r0, #1
 4781              	.LVL427:
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4782              		.loc 1 464 0
 4783 0070 7047     		bx	lr
 4784              		.cfi_endproc
 4785              	.LFE124:
 4787              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4788              		.align	1
 4789              		.global	HAL_LIN_Init
 4790              		.syntax unified
 4791              		.thumb
 4792              		.thumb_func
 4793              		.fpu fpv4-sp-d16
 4795              	HAL_LIN_Init:
 4796              	.LFB125:
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4797              		.loc 1 478 0
 4798              		.cfi_startproc
 4799              		@ args = 0, pretend = 0, frame = 0
 4800              		@ frame_needed = 0, uses_anonymous_args = 0
 4801              	.LVL428:
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4802              		.loc 1 480 0
 4803 0000 0028     		cmp	r0, #0
 4804 0002 42D0     		beq	.L408
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4805              		.loc 1 478 0
 4806 0004 38B5     		push	{r3, r4, r5, lr}
 4807              	.LCFI43:
 4808              		.cfi_def_cfa_offset 16
 4809              		.cfi_offset 3, -16
 4810              		.cfi_offset 4, -12
 4811              		.cfi_offset 5, -8
ARM GAS  /tmp/ccyzTMkC.s 			page 166


 4812              		.cfi_offset 14, -4
 4813 0006 0446     		mov	r4, r0
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4814              		.loc 1 491 0
 4815 0008 C369     		ldr	r3, [r0, #28]
 4816 000a B3F5004F 		cmp	r3, #32768
 4817 000e 3ED0     		beq	.L409
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4818              		.loc 1 496 0
 4819 0010 8368     		ldr	r3, [r0, #8]
 4820 0012 002B     		cmp	r3, #0
 4821 0014 3DD1     		bne	.L410
 4822 0016 0D46     		mov	r5, r1
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4823              		.loc 1 501 0
 4824 0018 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4825 001c 63B3     		cbz	r3, .L415
 4826              	.LVL429:
 4827              	.L406:
 522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4828              		.loc 1 522 0
 4829 001e 2423     		movs	r3, #36
 4830 0020 84F87130 		strb	r3, [r4, #113]
 525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4831              		.loc 1 525 0
 4832 0024 2268     		ldr	r2, [r4]
 4833 0026 1368     		ldr	r3, [r2]
 4834 0028 23F00103 		bic	r3, r3, #1
 4835 002c 1360     		str	r3, [r2]
 528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4836              		.loc 1 528 0
 4837 002e 2046     		mov	r0, r4
 4838 0030 FFF7FEFF 		bl	UART_SetConfig
 4839              	.LVL430:
 4840 0034 0128     		cmp	r0, #1
 4841 0036 2DD0     		beq	.L405
 533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4842              		.loc 1 533 0
 4843 0038 636A     		ldr	r3, [r4, #36]
 4844 003a 13BB     		cbnz	r3, .L416
 4845              	.L407:
 541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4846              		.loc 1 541 0
 4847 003c 2268     		ldr	r2, [r4]
 4848 003e 5368     		ldr	r3, [r2, #4]
 4849 0040 23F40063 		bic	r3, r3, #2048
 4850 0044 5360     		str	r3, [r2, #4]
 542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4851              		.loc 1 542 0
 4852 0046 2268     		ldr	r2, [r4]
 4853 0048 9368     		ldr	r3, [r2, #8]
 4854 004a 23F02A03 		bic	r3, r3, #42
 4855 004e 9360     		str	r3, [r2, #8]
 545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4856              		.loc 1 545 0
 4857 0050 2268     		ldr	r2, [r4]
 4858 0052 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccyzTMkC.s 			page 167


 4859 0054 43F48043 		orr	r3, r3, #16384
 4860 0058 5360     		str	r3, [r2, #4]
 548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4861              		.loc 1 548 0
 4862 005a 2368     		ldr	r3, [r4]
 4863 005c 5968     		ldr	r1, [r3, #4]
 4864 005e 21F02001 		bic	r1, r1, #32
 4865 0062 2943     		orrs	r1, r1, r5
 4866 0064 5960     		str	r1, [r3, #4]
 551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4867              		.loc 1 551 0
 4868 0066 2268     		ldr	r2, [r4]
 4869 0068 1368     		ldr	r3, [r2]
 4870 006a 43F00103 		orr	r3, r3, #1
 4871 006e 1360     		str	r3, [r2]
 554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4872              		.loc 1 554 0
 4873 0070 2046     		mov	r0, r4
 4874 0072 FFF7FEFF 		bl	UART_CheckIdleState
 4875              	.LVL431:
 4876 0076 0DE0     		b	.L405
 4877              	.LVL432:
 4878              	.L415:
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4879              		.loc 1 504 0
 4880 0078 80F87030 		strb	r3, [r0, #112]
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4881              		.loc 1 518 0
 4882 007c FFF7FEFF 		bl	HAL_UART_MspInit
 4883              	.LVL433:
 4884 0080 CDE7     		b	.L406
 4885              	.L416:
 535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4886              		.loc 1 535 0
 4887 0082 2046     		mov	r0, r4
 4888 0084 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4889              	.LVL434:
 4890 0088 D8E7     		b	.L407
 4891              	.LVL435:
 4892              	.L408:
 4893              	.LCFI44:
 4894              		.cfi_def_cfa_offset 0
 4895              		.cfi_restore 3
 4896              		.cfi_restore 4
 4897              		.cfi_restore 5
 4898              		.cfi_restore 14
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4899              		.loc 1 482 0
 4900 008a 0120     		movs	r0, #1
 4901              	.LVL436:
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4902              		.loc 1 555 0
 4903 008c 7047     		bx	lr
 4904              	.LVL437:
 4905              	.L409:
 4906              	.LCFI45:
 4907              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccyzTMkC.s 			page 168


 4908              		.cfi_offset 3, -16
 4909              		.cfi_offset 4, -12
 4910              		.cfi_offset 5, -8
 4911              		.cfi_offset 14, -4
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4912              		.loc 1 493 0
 4913 008e 0120     		movs	r0, #1
 4914              	.LVL438:
 4915 0090 00E0     		b	.L405
 4916              	.LVL439:
 4917              	.L410:
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 4918              		.loc 1 498 0
 4919 0092 0120     		movs	r0, #1
 4920              	.LVL440:
 4921              	.L405:
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4922              		.loc 1 555 0
 4923 0094 38BD     		pop	{r3, r4, r5, pc}
 4924              		.cfi_endproc
 4925              	.LFE125:
 4927              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4928              		.align	1
 4929              		.global	HAL_MultiProcessor_Init
 4930              		.syntax unified
 4931              		.thumb
 4932              		.thumb_func
 4933              		.fpu fpv4-sp-d16
 4935              	HAL_MultiProcessor_Init:
 4936              	.LFB126:
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4937              		.loc 1 577 0
 4938              		.cfi_startproc
 4939              		@ args = 0, pretend = 0, frame = 0
 4940              		@ frame_needed = 0, uses_anonymous_args = 0
 4941              	.LVL441:
 579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4942              		.loc 1 579 0
 4943 0000 0028     		cmp	r0, #0
 4944 0002 42D0     		beq	.L422
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 4945              		.loc 1 577 0
 4946 0004 70B5     		push	{r4, r5, r6, lr}
 4947              	.LCFI46:
 4948              		.cfi_def_cfa_offset 16
 4949              		.cfi_offset 4, -16
 4950              		.cfi_offset 5, -12
 4951              		.cfi_offset 6, -8
 4952              		.cfi_offset 14, -4
 4953 0006 0446     		mov	r4, r0
 4954 0008 1546     		mov	r5, r2
 4955 000a 0E46     		mov	r6, r1
 587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4956              		.loc 1 587 0
 4957 000c 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 4958 0010 53B3     		cbz	r3, .L427
 4959              	.LVL442:
ARM GAS  /tmp/ccyzTMkC.s 			page 169


 4960              	.L419:
 608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4961              		.loc 1 608 0
 4962 0012 2423     		movs	r3, #36
 4963 0014 84F87130 		strb	r3, [r4, #113]
 611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4964              		.loc 1 611 0
 4965 0018 2268     		ldr	r2, [r4]
 4966 001a 1368     		ldr	r3, [r2]
 4967 001c 23F00103 		bic	r3, r3, #1
 4968 0020 1360     		str	r3, [r2]
 614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4969              		.loc 1 614 0
 4970 0022 2046     		mov	r0, r4
 4971 0024 FFF7FEFF 		bl	UART_SetConfig
 4972              	.LVL443:
 4973 0028 0128     		cmp	r0, #1
 4974 002a 1CD0     		beq	.L418
 619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4975              		.loc 1 619 0
 4976 002c 636A     		ldr	r3, [r4, #36]
 4977 002e 03BB     		cbnz	r3, .L428
 4978              	.L420:
 627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4979              		.loc 1 627 0
 4980 0030 2268     		ldr	r2, [r4]
 4981 0032 5368     		ldr	r3, [r2, #4]
 4982 0034 23F49043 		bic	r3, r3, #18432
 4983 0038 5360     		str	r3, [r2, #4]
 628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4984              		.loc 1 628 0
 4985 003a 2268     		ldr	r2, [r4]
 4986 003c 9368     		ldr	r3, [r2, #8]
 4987 003e 23F02A03 		bic	r3, r3, #42
 4988 0042 9360     		str	r3, [r2, #8]
 630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 4989              		.loc 1 630 0
 4990 0044 B5F5006F 		cmp	r5, #2048
 4991 0048 17D0     		beq	.L429
 4992              	.L421:
 637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 4993              		.loc 1 637 0
 4994 004a 2368     		ldr	r3, [r4]
 4995 004c 1A68     		ldr	r2, [r3]
 4996 004e 22F40062 		bic	r2, r2, #2048
 4997 0052 1543     		orrs	r5, r5, r2
 4998              	.LVL444:
 4999 0054 1D60     		str	r5, [r3]
 640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5000              		.loc 1 640 0
 5001 0056 2268     		ldr	r2, [r4]
 5002 0058 1368     		ldr	r3, [r2]
 5003 005a 43F00103 		orr	r3, r3, #1
 5004 005e 1360     		str	r3, [r2]
 643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5005              		.loc 1 643 0
 5006 0060 2046     		mov	r0, r4
ARM GAS  /tmp/ccyzTMkC.s 			page 170


 5007 0062 FFF7FEFF 		bl	UART_CheckIdleState
 5008              	.LVL445:
 5009              	.L418:
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5010              		.loc 1 644 0
 5011 0066 70BD     		pop	{r4, r5, r6, pc}
 5012              	.LVL446:
 5013              	.L427:
 590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5014              		.loc 1 590 0
 5015 0068 80F87030 		strb	r3, [r0, #112]
 604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5016              		.loc 1 604 0
 5017 006c FFF7FEFF 		bl	HAL_UART_MspInit
 5018              	.LVL447:
 5019 0070 CFE7     		b	.L419
 5020              	.L428:
 621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5021              		.loc 1 621 0
 5022 0072 2046     		mov	r0, r4
 5023 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5024              	.LVL448:
 5025 0078 DAE7     		b	.L420
 5026              	.L429:
 633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5027              		.loc 1 633 0
 5028 007a 2368     		ldr	r3, [r4]
 5029 007c 5968     		ldr	r1, [r3, #4]
 5030 007e 21F07F41 		bic	r1, r1, #-16777216
 5031 0082 41EA0666 		orr	r6, r1, r6, lsl #24
 5032 0086 5E60     		str	r6, [r3, #4]
 5033 0088 DFE7     		b	.L421
 5034              	.LVL449:
 5035              	.L422:
 5036              	.LCFI47:
 5037              		.cfi_def_cfa_offset 0
 5038              		.cfi_restore 4
 5039              		.cfi_restore 5
 5040              		.cfi_restore 6
 5041              		.cfi_restore 14
 581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 5042              		.loc 1 581 0
 5043 008a 0120     		movs	r0, #1
 5044              	.LVL450:
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5045              		.loc 1 644 0
 5046 008c 7047     		bx	lr
 5047              		.cfi_endproc
 5048              	.LFE126:
 5050              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5051              		.align	1
 5052              		.global	HAL_MultiProcessor_EnableMuteMode
 5053              		.syntax unified
 5054              		.thumb
 5055              		.thumb_func
 5056              		.fpu fpv4-sp-d16
 5058              	HAL_MultiProcessor_EnableMuteMode:
ARM GAS  /tmp/ccyzTMkC.s 			page 171


 5059              	.LFB154:
2575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5060              		.loc 1 2575 0
 5061              		.cfi_startproc
 5062              		@ args = 0, pretend = 0, frame = 0
 5063              		@ frame_needed = 0, uses_anonymous_args = 0
 5064              	.LVL451:
 5065 0000 08B5     		push	{r3, lr}
 5066              	.LCFI48:
 5067              		.cfi_def_cfa_offset 8
 5068              		.cfi_offset 3, -8
 5069              		.cfi_offset 14, -4
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5070              		.loc 1 2577 0
 5071 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5072 0006 012B     		cmp	r3, #1
 5073 0008 10D0     		beq	.L432
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5074              		.loc 1 2577 0 is_stmt 0 discriminator 2
 5075 000a 0123     		movs	r3, #1
 5076 000c 80F87030 		strb	r3, [r0, #112]
2579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5077              		.loc 1 2579 0 is_stmt 1 discriminator 2
 5078 0010 2423     		movs	r3, #36
 5079 0012 80F87130 		strb	r3, [r0, #113]
2582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5080              		.loc 1 2582 0 discriminator 2
 5081 0016 0268     		ldr	r2, [r0]
 5082 0018 1368     		ldr	r3, [r2]
 5083 001a 43F40053 		orr	r3, r3, #8192
 5084 001e 1360     		str	r3, [r2]
2584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5085              		.loc 1 2584 0 discriminator 2
 5086 0020 2023     		movs	r3, #32
 5087 0022 80F87130 		strb	r3, [r0, #113]
2586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5088              		.loc 1 2586 0 discriminator 2
 5089 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5090              	.LVL452:
 5091              	.L431:
2587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5092              		.loc 1 2587 0
 5093 002a 08BD     		pop	{r3, pc}
 5094              	.LVL453:
 5095              	.L432:
2577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5096              		.loc 1 2577 0
 5097 002c 0220     		movs	r0, #2
 5098              	.LVL454:
 5099 002e FCE7     		b	.L431
 5100              		.cfi_endproc
 5101              	.LFE154:
 5103              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5104              		.align	1
 5105              		.global	HAL_MultiProcessor_DisableMuteMode
 5106              		.syntax unified
 5107              		.thumb
ARM GAS  /tmp/ccyzTMkC.s 			page 172


 5108              		.thumb_func
 5109              		.fpu fpv4-sp-d16
 5111              	HAL_MultiProcessor_DisableMuteMode:
 5112              	.LFB155:
2596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
 5113              		.loc 1 2596 0
 5114              		.cfi_startproc
 5115              		@ args = 0, pretend = 0, frame = 0
 5116              		@ frame_needed = 0, uses_anonymous_args = 0
 5117              	.LVL455:
 5118 0000 08B5     		push	{r3, lr}
 5119              	.LCFI49:
 5120              		.cfi_def_cfa_offset 8
 5121              		.cfi_offset 3, -8
 5122              		.cfi_offset 14, -4
2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5123              		.loc 1 2598 0
 5124 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5125 0006 012B     		cmp	r3, #1
 5126 0008 10D0     		beq	.L436
2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5127              		.loc 1 2598 0 is_stmt 0 discriminator 2
 5128 000a 0123     		movs	r3, #1
 5129 000c 80F87030 		strb	r3, [r0, #112]
2600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5130              		.loc 1 2600 0 is_stmt 1 discriminator 2
 5131 0010 2423     		movs	r3, #36
 5132 0012 80F87130 		strb	r3, [r0, #113]
2603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5133              		.loc 1 2603 0 discriminator 2
 5134 0016 0268     		ldr	r2, [r0]
 5135 0018 1368     		ldr	r3, [r2]
 5136 001a 23F40053 		bic	r3, r3, #8192
 5137 001e 1360     		str	r3, [r2]
2605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5138              		.loc 1 2605 0 discriminator 2
 5139 0020 2023     		movs	r3, #32
 5140 0022 80F87130 		strb	r3, [r0, #113]
2607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5141              		.loc 1 2607 0 discriminator 2
 5142 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5143              	.LVL456:
 5144              	.L435:
2608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5145              		.loc 1 2608 0
 5146 002a 08BD     		pop	{r3, pc}
 5147              	.LVL457:
 5148              	.L436:
2598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 5149              		.loc 1 2598 0
 5150 002c 0220     		movs	r0, #2
 5151              	.LVL458:
 5152 002e FCE7     		b	.L435
 5153              		.cfi_endproc
 5154              	.LFE155:
 5156              		.text
 5157              	.Letext0:
ARM GAS  /tmp/ccyzTMkC.s 			page 173


 5158              		.file 2 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 5159              		.file 3 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 5160              		.file 4 "../../core/ST/CMSIS/Include/core_cm4.h"
 5161              		.file 5 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 5162              		.file 6 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 5163              		.file 7 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 5164              		.file 8 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 5165              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 5166              		.file 10 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 5167              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 5168              		.file 12 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 5169              		.file 13 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
ARM GAS  /tmp/ccyzTMkC.s 			page 174


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccyzTMkC.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccyzTMkC.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccyzTMkC.s:47     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccyzTMkC.s:53     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccyzTMkC.s:83     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccyzTMkC.s:89     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccyzTMkC.s:140    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccyzTMkC.s:146    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccyzTMkC.s:204    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccyzTMkC.s:211    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccyzTMkC.s:225    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccyzTMkC.s:232    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccyzTMkC.s:246    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccyzTMkC.s:253    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccyzTMkC.s:321    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:328    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccyzTMkC.s:426    .text.HAL_UART_Transmit_IT:0000000000000070 $d
     /tmp/ccyzTMkC.s:432    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:439    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccyzTMkC.s:595    .text.HAL_UART_Receive_IT:00000000000000cc $d
     /tmp/ccyzTMkC.s:1537   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccyzTMkC.s:1623   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccyzTMkC.s:601    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccyzTMkC.s:608    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccyzTMkC.s:722    .text.HAL_UART_Transmit_DMA:0000000000000084 $d
     /tmp/ccyzTMkC.s:1370   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccyzTMkC.s:1486   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccyzTMkC.s:1840   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccyzTMkC.s:729    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccyzTMkC.s:736    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccyzTMkC.s:854    .text.HAL_UART_Receive_DMA:0000000000000090 $d
     /tmp/ccyzTMkC.s:1709   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccyzTMkC.s:1789   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccyzTMkC.s:861    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccyzTMkC.s:868    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccyzTMkC.s:947    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccyzTMkC.s:954    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccyzTMkC.s:1027   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccyzTMkC.s:1034   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccyzTMkC.s:1115   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccyzTMkC.s:1122   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccyzTMkC.s:1213   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccyzTMkC.s:1220   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccyzTMkC.s:1271   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccyzTMkC.s:1278   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccyzTMkC.s:1343   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:1350   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccyzTMkC.s:1364   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccyzTMkC.s:1421   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:1427   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccyzTMkC.s:1459   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:1466   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccyzTMkC.s:1480   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccyzTMkC.s:1510   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:1517   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/ccyzTMkC.s 			page 175


     /tmp/ccyzTMkC.s:1531   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccyzTMkC.s:1617   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccyzTMkC.s:1703   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccyzTMkC.s:1762   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:1769   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccyzTMkC.s:1783   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccyzTMkC.s:1813   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:1820   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccyzTMkC.s:1834   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccyzTMkC.s:1912   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccyzTMkC.s:1919   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccyzTMkC.s:2182   .text.HAL_UART_IRQHandler:0000000000000158 $d
     /tmp/ccyzTMkC.s:2193   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccyzTMkC.s:2187   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccyzTMkC.s:2222   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2229   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccyzTMkC.s:2243   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:2250   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccyzTMkC.s:2415   .text.HAL_UART_Abort_IT:00000000000000d8 $d
     /tmp/ccyzTMkC.s:2493   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccyzTMkC.s:2427   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccyzTMkC.s:2421   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2487   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2548   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2555   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccyzTMkC.s:2569   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:2576   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccyzTMkC.s:2655   .text.HAL_UART_AbortTransmit_IT:0000000000000064 $d
     /tmp/ccyzTMkC.s:2666   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccyzTMkC.s:2660   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2696   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2703   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccyzTMkC.s:2717   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccyzTMkC.s:2724   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccyzTMkC.s:2820   .text.HAL_UART_AbortReceive_IT:0000000000000080 $d
     /tmp/ccyzTMkC.s:2831   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccyzTMkC.s:2825   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccyzTMkC.s:2870   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccyzTMkC.s:2877   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccyzTMkC.s:2896   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccyzTMkC.s:2903   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccyzTMkC.s:2952   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccyzTMkC.s:2959   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccyzTMkC.s:3008   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccyzTMkC.s:3015   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccyzTMkC.s:3059   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccyzTMkC.s:3066   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccyzTMkC.s:3088   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccyzTMkC.s:3095   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccyzTMkC.s:3113   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccyzTMkC.s:3120   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccyzTMkC.s:3225   .text.UART_SetConfig:000000000000008c $d
     /tmp/ccyzTMkC.s:3235   .text.UART_SetConfig:000000000000009e $t
     /tmp/ccyzTMkC.s:3246   .text.UART_SetConfig:00000000000000b2 $d
     /tmp/ccyzTMkC.s:3250   .text.UART_SetConfig:00000000000000b6 $t
     /tmp/ccyzTMkC.s:3281   .text.UART_SetConfig:00000000000000da $d
     /tmp/ccyzTMkC.s:3475   .text.UART_SetConfig:00000000000001d6 $d
ARM GAS  /tmp/ccyzTMkC.s 			page 176


     /tmp/ccyzTMkC.s:3484   .text.UART_SetConfig:00000000000001e8 $t
     /tmp/ccyzTMkC.s:3525   .text.UART_SetConfig:000000000000021c $d
     /tmp/ccyzTMkC.s:3611   .text.UART_SetConfig:00000000000002a4 $d
     /tmp/ccyzTMkC.s:3624   .text.UART_SetConfig:00000000000002cc $t
     /tmp/ccyzTMkC.s:3652   .text.UART_SetConfig:00000000000002f4 $d
     /tmp/ccyzTMkC.s:3884   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccyzTMkC.s:3891   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccyzTMkC.s:4014   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccyzTMkC.s:4021   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccyzTMkC.s:4096   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccyzTMkC.s:4103   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccyzTMkC.s:4270   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccyzTMkC.s:4277   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccyzTMkC.s:4488   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccyzTMkC.s:4495   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccyzTMkC.s:4588   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccyzTMkC.s:4595   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccyzTMkC.s:4685   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccyzTMkC.s:4692   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccyzTMkC.s:4788   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccyzTMkC.s:4795   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccyzTMkC.s:4928   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccyzTMkC.s:4935   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccyzTMkC.s:5051   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccyzTMkC.s:5058   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccyzTMkC.s:5104   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccyzTMkC.s:5111   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccyzTMkC.s:3294   .text.UART_SetConfig:00000000000000e7 $d
     /tmp/ccyzTMkC.s:3294   .text.UART_SetConfig:00000000000000e8 $t
     /tmp/ccyzTMkC.s:3534   .text.UART_SetConfig:0000000000000225 $d
     /tmp/ccyzTMkC.s:3534   .text.UART_SetConfig:0000000000000226 $t
     /tmp/ccyzTMkC.s:3661   .text.UART_SetConfig:00000000000002fd $d
     /tmp/ccyzTMkC.s:3661   .text.UART_SetConfig:00000000000002fe $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
