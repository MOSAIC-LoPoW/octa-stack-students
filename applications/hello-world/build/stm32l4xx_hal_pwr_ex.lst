ARM GAS  /tmp/ccSWp2BP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWREx_GetVoltageRange:
  26              	.LFB123:
  27              		.file 1 "../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c"
   1:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
   2:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @file    stm32l4xx_hal_pwr_ex.c
   4:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   6:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   7:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
   9:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  10:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  11:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  12:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @attention
  13:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  14:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  15:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  16:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  17:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * are permitted provided that the following conditions are met:
  18:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  19:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer.
  20:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  21:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  22:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      and/or other materials provided with the distribution.
  23:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  24:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      may be used to endorse or promote products derived from this software
  25:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      without specific prior written permission.
  26:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  27:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  28:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  29:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  30:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  31:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccSWp2BP.s 			page 2


  32:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  33:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  34:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  35:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  36:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  37:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  38:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  39:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  40:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  41:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  42:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #include "stm32l4xx_hal.h"
  43:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  44:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  45:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  46:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  47:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  48:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  49:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  50:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  51:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  52:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  53:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  54:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  55:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  56:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  57:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  58:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L412xx) || defined (STM32L422xx) || defined (STM32L431xx) || defined (STM32L432xx
  59:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  60:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L451xx) || defined (STM32L452xx) || defined (STM32L462xx)
  61:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000000B) /* PH0/PH1/PH3 */
  62:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485
  63:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x00000003) /* PH0/PH1 */
  64:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4R5xx) || defined (STM32L4R7
  65:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   ((uint32_t)0x0000FFFF) /* PH0..PH15 */
  66:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
  67:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  68:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx) || defined (STM32L4R5xx) || defined (STM32L4R7xx
  69:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTI_AVAILABLE_PINS   ((uint32_t)0x00000FFF) /* PI0..PI11 */
  70:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
  71:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  72:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  73:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  74:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  75:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  76:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  77:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  78:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  79:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVM
  80:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVM thresh
  81:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVM trig
  82:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVM tri
  83:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  84:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  85:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  86:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  87:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  88:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
ARM GAS  /tmp/ccSWp2BP.s 			page 3


  89:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  90:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50UL   /*!< Time out value for REGLPF and VO
  91:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  92:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  93:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  94:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  95:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  96:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  97:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  98:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  99:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
 104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
 105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
 106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
 107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
 109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
 113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
 114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
 115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @verbatim
 116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
 118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     [..]
 120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @endverbatim
 122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_RANGE1 or PWR_REGULATOR_VOLTAGE_RANGE2
 129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
 130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  28              		.loc 1 132 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE2;
 137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else if (READ_BIT(PWR->CR5, PWR_CR5_R1MODE) == PWR_CR5_R1MODE)
 139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* PWR_CR5_R1MODE bit set means that Range 1 Boost is disabled */
ARM GAS  /tmp/ccSWp2BP.s 			page 4


 141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1;
 142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
 146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
  33              		.loc 1 148 0
  34 0000 024B     		ldr	r3, .L2
  35 0002 1868     		ldr	r0, [r3]
 149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
  36              		.loc 1 150 0
  37 0004 00F4C060 		and	r0, r0, #1536
  38 0008 7047     		bx	lr
  39              	.L3:
  40 000a 00BF     		.align	2
  41              	.L2:
  42 000c 00700040 		.word	1073770496
  43              		.cfi_endproc
  44              	.LFE123:
  46              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  47              		.align	1
  48              		.global	HAL_PWREx_ControlVoltageScaling
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	HAL_PWREx_ControlVoltageScaling:
  55              	.LFB124:
 151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   @if STM32L4S9xx
 160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when available, Regulator voltage outpu
 161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 120 MHz.
 163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   @endif
 164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,
 166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 80 MHz.
 167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,
 169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value up to 80 MHz after calling HAL_PWREx_ControlVoltageScaling() API. For
 174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        some devices, the system frequency can be increased up to 120 MHz.
 175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
ARM GAS  /tmp/ccSWp2BP.s 			page 5


 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.
 178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  56              		.loc 1 181 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL0:
 182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
 183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR5_R1MODE)
 187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)
 188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is enabled */
 193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 1 normal or boost mode */
 210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Enable Range 1 Boost (no issue if bit already reset) */
 213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->CR5, PWR_CR5_R1MODE);
 214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* If current range is range 2 */
 219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) == PWR_REGULATOR_VOLTAGE_SCALE2)
 220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Make sure Range 1 Boost is disabled */
 222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
ARM GAS  /tmp/ccSWp2BP.s 			page 6


 228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1;
 229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      /* If current range is range 1 normal or boost mode */
 239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     else
 240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Disable Range 1 Boost (no issue if bit already set) */
 242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       SET_BIT(PWR->CR5, PWR_CR5_R1MODE);
 243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Set Range 2 */
 248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* No need to wait for VOSF to be cleared for this transition */
 250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR_CR5_R1MODE bit setting has no effect in Range 2        */
 251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* If Set Range 1 */
 256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  62              		.loc 1 256 0
  63 0000 B0F5007F 		cmp	r0, #512
  64 0004 0FD0     		beq	.L13
 257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */
 264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
  65              		.loc 1 277 0
  66 0006 1F4B     		ldr	r3, .L15
  67 0008 1B68     		ldr	r3, [r3]
  68 000a 03F4C063 		and	r3, r3, #1536
ARM GAS  /tmp/ccSWp2BP.s 			page 7


  69 000e B3F5806F 		cmp	r3, #1024
  70 0012 34D0     		beq	.L12
 278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 2 */
 280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
  71              		.loc 1 280 0
  72 0014 1B4A     		ldr	r2, .L15
  73 0016 1368     		ldr	r3, [r2]
  74 0018 23F4C063 		bic	r3, r3, #1536
  75 001c 43F48063 		orr	r3, r3, #1024
  76 0020 1360     		str	r3, [r2]
 281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
  77              		.loc 1 286 0
  78 0022 0020     		movs	r0, #0
  79              	.LVL1:
  80 0024 7047     		bx	lr
  81              	.LVL2:
  82              	.L13:
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
  83              		.loc 1 258 0
  84 0026 174B     		ldr	r3, .L15
  85 0028 1B68     		ldr	r3, [r3]
  86 002a 03F4C063 		and	r3, r3, #1536
  87 002e B3F5007F 		cmp	r3, #512
  88 0032 22D0     		beq	.L10
 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  89              		.loc 1 261 0
  90 0034 134A     		ldr	r2, .L15
  91 0036 1368     		ldr	r3, [r2]
  92 0038 23F4C063 		bic	r3, r3, #1536
  93 003c 43F40073 		orr	r3, r3, #512
  94 0040 1360     		str	r3, [r2]
 264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
  95              		.loc 1 264 0
  96 0042 114B     		ldr	r3, .L15+4
  97 0044 1A68     		ldr	r2, [r3]
  98 0046 3223     		movs	r3, #50
  99 0048 03FB02F3 		mul	r3, r3, r2
 100 004c 0F4A     		ldr	r2, .L15+8
 101 004e A2FB0323 		umull	r2, r3, r2, r3
 102 0052 9B0C     		lsrs	r3, r3, #18
 103 0054 0133     		adds	r3, r3, #1
 104              	.LVL3:
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 105              		.loc 1 265 0
 106 0056 00E0     		b	.L7
 107              	.L9:
 267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 108              		.loc 1 267 0
 109 0058 013B     		subs	r3, r3, #1
 110              	.LVL4:
 111              	.L7:
ARM GAS  /tmp/ccSWp2BP.s 			page 8


 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 112              		.loc 1 265 0
 113 005a 0A4A     		ldr	r2, .L15
 114 005c 5269     		ldr	r2, [r2, #20]
 115 005e 12F4806F 		tst	r2, #1024
 116 0062 01D0     		beq	.L8
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 117              		.loc 1 265 0 is_stmt 0 discriminator 1
 118 0064 002B     		cmp	r3, #0
 119 0066 F7D1     		bne	.L9
 120              	.L8:
 269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 121              		.loc 1 269 0 is_stmt 1
 122 0068 064B     		ldr	r3, .L15
 123              	.LVL5:
 124 006a 5B69     		ldr	r3, [r3, #20]
 125 006c 13F4806F 		tst	r3, #1024
 126 0070 01D1     		bne	.L14
 127              		.loc 1 286 0
 128 0072 0020     		movs	r0, #0
 129              	.LVL6:
 130 0074 7047     		bx	lr
 131              	.LVL7:
 132              	.L14:
 271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 133              		.loc 1 271 0
 134 0076 0320     		movs	r0, #3
 135              	.LVL8:
 136 0078 7047     		bx	lr
 137              	.LVL9:
 138              	.L10:
 139              		.loc 1 286 0
 140 007a 0020     		movs	r0, #0
 141              	.LVL10:
 142 007c 7047     		bx	lr
 143              	.LVL11:
 144              	.L12:
 145 007e 0020     		movs	r0, #0
 146              	.LVL12:
 287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 147              		.loc 1 287 0
 148 0080 7047     		bx	lr
 149              	.L16:
 150 0082 00BF     		.align	2
 151              	.L15:
 152 0084 00700040 		.word	1073770496
 153 0088 00000000 		.word	SystemCoreClock
 154 008c 83DE1B43 		.word	1125899907
 155              		.cfi_endproc
 156              	.LFE124:
 158              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 159              		.align	1
 160              		.global	HAL_PWREx_EnableBatteryCharging
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccSWp2BP.s 			page 9


 166              	HAL_PWREx_EnableBatteryCharging:
 167              	.LFB125:
 288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.
 293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor
 297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 168              		.loc 1 300 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL13:
 301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 174              		.loc 1 304 0
 175 0000 054A     		ldr	r2, .L18
 176 0002 D368     		ldr	r3, [r2, #12]
 177 0004 23F40073 		bic	r3, r3, #512
 178 0008 1843     		orrs	r0, r0, r3
 179              	.LVL14:
 180 000a D060     		str	r0, [r2, #12]
 305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 181              		.loc 1 307 0
 182 000c D368     		ldr	r3, [r2, #12]
 183 000e 43F48073 		orr	r3, r3, #256
 184 0012 D360     		str	r3, [r2, #12]
 308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 185              		.loc 1 308 0
 186 0014 7047     		bx	lr
 187              	.L19:
 188 0016 00BF     		.align	2
 189              	.L18:
 190 0018 00700040 		.word	1073770496
 191              		.cfi_endproc
 192              	.LFE125:
 194              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_PWREx_DisableBatteryCharging
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	HAL_PWREx_DisableBatteryCharging:
 203              	.LFB126:
ARM GAS  /tmp/ccSWp2BP.s 			page 10


 309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.
 313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 204              		.loc 1 316 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE);
 209              		.loc 1 317 0
 210 0000 024A     		ldr	r2, .L21
 211 0002 D368     		ldr	r3, [r2, #12]
 212 0004 23F48073 		bic	r3, r3, #256
 213 0008 D360     		str	r3, [r2, #12]
 318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 214              		.loc 1 318 0
 215 000a 7047     		bx	lr
 216              	.L22:
 217              		.align	2
 218              	.L21:
 219 000c 00700040 		.word	1073770496
 220              		.cfi_endproc
 221              	.LFE126:
 223              		.section	.text.HAL_PWREx_EnableVddUSB,"ax",%progbits
 224              		.align	1
 225              		.global	HAL_PWREx_EnableVddUSB
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	HAL_PWREx_EnableVddUSB:
 232              	.LFB127:
 319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_USV)
 322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDUSB supply.
 324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.
 325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 233              		.loc 1 328 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 238              		.loc 1 329 0
 239 0000 024A     		ldr	r2, .L24
 240 0002 5368     		ldr	r3, [r2, #4]
 241 0004 43F48063 		orr	r3, r3, #1024
ARM GAS  /tmp/ccSWp2BP.s 			page 11


 242 0008 5360     		str	r3, [r2, #4]
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 243              		.loc 1 330 0
 244 000a 7047     		bx	lr
 245              	.L25:
 246              		.align	2
 247              	.L24:
 248 000c 00700040 		.word	1073770496
 249              		.cfi_endproc
 250              	.LFE127:
 252              		.section	.text.HAL_PWREx_DisableVddUSB,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_PWREx_DisableVddUSB
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	HAL_PWREx_DisableVddUSB:
 261              	.LFB128:
 331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDUSB supply.
 335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 262              		.loc 1 338 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 267              		.loc 1 339 0
 268 0000 024A     		ldr	r2, .L27
 269 0002 5368     		ldr	r3, [r2, #4]
 270 0004 23F48063 		bic	r3, r3, #1024
 271 0008 5360     		str	r3, [r2, #4]
 340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 272              		.loc 1 340 0
 273 000a 7047     		bx	lr
 274              	.L28:
 275              		.align	2
 276              	.L27:
 277 000c 00700040 		.word	1073770496
 278              		.cfi_endproc
 279              	.LFE128:
 281              		.section	.text.HAL_PWREx_EnableVddIO2,"ax",%progbits
 282              		.align	1
 283              		.global	HAL_PWREx_EnableVddIO2
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu fpv4-sp-d16
 289              	HAL_PWREx_EnableVddIO2:
 290              	.LFB129:
 341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_USV */
ARM GAS  /tmp/ccSWp2BP.s 			page 12


 342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_IOSV)
 344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDIO2 supply.
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present.
 347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddIO2(void)
 350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 291              		.loc 1 350 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 296              		.loc 1 351 0
 297 0000 024A     		ldr	r2, .L30
 298 0002 5368     		ldr	r3, [r2, #4]
 299 0004 43F40073 		orr	r3, r3, #512
 300 0008 5360     		str	r3, [r2, #4]
 352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 301              		.loc 1 352 0
 302 000a 7047     		bx	lr
 303              	.L31:
 304              		.align	2
 305              	.L30:
 306 000c 00700040 		.word	1073770496
 307              		.cfi_endproc
 308              	.LFE129:
 310              		.section	.text.HAL_PWREx_DisableVddIO2,"ax",%progbits
 311              		.align	1
 312              		.global	HAL_PWREx_DisableVddIO2
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	HAL_PWREx_DisableVddIO2:
 319              	.LFB130:
 353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDIO2 supply.
 357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddIO2(void)
 360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 320              		.loc 1 360 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 325              		.loc 1 361 0
 326 0000 024A     		ldr	r2, .L33
 327 0002 5368     		ldr	r3, [r2, #4]
 328 0004 23F40073 		bic	r3, r3, #512
 329 0008 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/ccSWp2BP.s 			page 13


 362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 330              		.loc 1 362 0
 331 000a 7047     		bx	lr
 332              	.L34:
 333              		.align	2
 334              	.L33:
 335 000c 00700040 		.word	1073770496
 336              		.cfi_endproc
 337              	.LFE130:
 339              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_PWREx_EnableInternalWakeUpLine
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	HAL_PWREx_EnableInternalWakeUpLine:
 348              	.LFB131:
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_IOSV */
 364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line.
 368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 349              		.loc 1 371 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 354              		.loc 1 372 0
 355 0000 024A     		ldr	r2, .L36
 356 0002 9368     		ldr	r3, [r2, #8]
 357 0004 43F40043 		orr	r3, r3, #32768
 358 0008 9360     		str	r3, [r2, #8]
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 359              		.loc 1 373 0
 360 000a 7047     		bx	lr
 361              	.L37:
 362              		.align	2
 363              	.L36:
 364 000c 00700040 		.word	1073770496
 365              		.cfi_endproc
 366              	.LFE131:
 368              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 369              		.align	1
 370              		.global	HAL_PWREx_DisableInternalWakeUpLine
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	HAL_PWREx_DisableInternalWakeUpLine:
 377              	.LFB132:
 374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 14


 375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line.
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 378              		.loc 1 381 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 383              		.loc 1 382 0
 384 0000 024A     		ldr	r2, .L39
 385 0002 9368     		ldr	r3, [r2, #8]
 386 0004 23F40043 		bic	r3, r3, #32768
 387 0008 9360     		str	r3, [r2, #8]
 383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 388              		.loc 1 383 0
 389 000a 7047     		bx	lr
 390              	.L40:
 391              		.align	2
 392              	.L39:
 393 000c 00700040 		.word	1073770496
 394              		.cfi_endproc
 395              	.LFE132:
 397              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_PWREx_EnableGPIOPullUp
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 403              		.fpu fpv4-sp-d16
 405              	HAL_PWREx_EnableGPIOPullUp:
 406              	.LFB133:
 384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes.
 391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved.
 397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input
 398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
ARM GAS  /tmp/ccSWp2BP.s 			page 15


 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 407              		.loc 1 409 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
 412              	.LVL15:
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 413              		.loc 1 415 0
 414 0000 0828     		cmp	r0, #8
 415 0002 6DD8     		bhi	.L53
 416 0004 DFE800F0 		tbb	[pc, r0]
 417              	.L44:
 418 0008 05       		.byte	(.L43-.L44)/2
 419 0009 13       		.byte	(.L45-.L44)/2
 420 000a 1F       		.byte	(.L46-.L44)/2
 421 000b 29       		.byte	(.L47-.L44)/2
 422 000c 33       		.byte	(.L48-.L44)/2
 423 000d 3D       		.byte	(.L49-.L44)/2
 424 000e 47       		.byte	(.L50-.L44)/2
 425 000f 51       		.byte	(.L51-.L44)/2
 426 0010 60       		.byte	(.L52-.L44)/2
 427 0011 00       		.p2align 1
 428              	.L43:
 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 429              		.loc 1 418 0
 430 0012 344B     		ldr	r3, .L54
 431 0014 1A6A     		ldr	r2, [r3, #32]
 432 0016 21F48040 		bic	r0, r1, #16384
 433              	.LVL16:
 434 001a 0243     		orrs	r2, r2, r0
 435 001c 1A62     		str	r2, [r3, #32]
 419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 436              		.loc 1 419 0
 437 001e 5A6A     		ldr	r2, [r3, #36]
 438 0020 21F42041 		bic	r1, r1, #40960
 439              	.LVL17:
 440 0024 22EA0101 		bic	r1, r2, r1
 441 0028 5962     		str	r1, [r3, #36]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 442              		.loc 1 410 0
 443 002a 0020     		movs	r0, #0
 420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 444              		.loc 1 420 0
 445 002c 7047     		bx	lr
 446              	.LVL18:
ARM GAS  /tmp/ccSWp2BP.s 			page 16


 447              	.L45:
 421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 448              		.loc 1 422 0
 449 002e 2D4B     		ldr	r3, .L54
 450 0030 9A6A     		ldr	r2, [r3, #40]
 451 0032 0A43     		orrs	r2, r2, r1
 452 0034 9A62     		str	r2, [r3, #40]
 423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 453              		.loc 1 423 0
 454 0036 DA6A     		ldr	r2, [r3, #44]
 455 0038 21F01001 		bic	r1, r1, #16
 456              	.LVL19:
 457 003c 22EA0101 		bic	r1, r2, r1
 458 0040 D962     		str	r1, [r3, #44]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 459              		.loc 1 410 0
 460 0042 0020     		movs	r0, #0
 461              	.LVL20:
 424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 462              		.loc 1 424 0
 463 0044 7047     		bx	lr
 464              	.LVL21:
 465              	.L46:
 425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 466              		.loc 1 426 0
 467 0046 274B     		ldr	r3, .L54
 468 0048 1A6B     		ldr	r2, [r3, #48]
 469 004a 0A43     		orrs	r2, r2, r1
 470 004c 1A63     		str	r2, [r3, #48]
 427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 471              		.loc 1 427 0
 472 004e 5A6B     		ldr	r2, [r3, #52]
 473 0050 22EA0101 		bic	r1, r2, r1
 474              	.LVL22:
 475 0054 5963     		str	r1, [r3, #52]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 476              		.loc 1 410 0
 477 0056 0020     		movs	r0, #0
 478              	.LVL23:
 428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 479              		.loc 1 428 0
 480 0058 7047     		bx	lr
 481              	.LVL24:
 482              	.L47:
 429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 483              		.loc 1 431 0
 484 005a 224B     		ldr	r3, .L54
 485 005c 9A6B     		ldr	r2, [r3, #56]
 486 005e 0A43     		orrs	r2, r2, r1
 487 0060 9A63     		str	r2, [r3, #56]
 432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 488              		.loc 1 432 0
 489 0062 DA6B     		ldr	r2, [r3, #60]
ARM GAS  /tmp/ccSWp2BP.s 			page 17


 490 0064 22EA0101 		bic	r1, r2, r1
 491              	.LVL25:
 492 0068 D963     		str	r1, [r3, #60]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 493              		.loc 1 410 0
 494 006a 0020     		movs	r0, #0
 495              	.LVL26:
 433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 496              		.loc 1 433 0
 497 006c 7047     		bx	lr
 498              	.LVL27:
 499              	.L48:
 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 500              		.loc 1 437 0
 501 006e 1D4B     		ldr	r3, .L54
 502 0070 1A6C     		ldr	r2, [r3, #64]
 503 0072 0A43     		orrs	r2, r2, r1
 504 0074 1A64     		str	r2, [r3, #64]
 438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 505              		.loc 1 438 0
 506 0076 5A6C     		ldr	r2, [r3, #68]
 507 0078 22EA0101 		bic	r1, r2, r1
 508              	.LVL28:
 509 007c 5964     		str	r1, [r3, #68]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 510              		.loc 1 410 0
 511 007e 0020     		movs	r0, #0
 512              	.LVL29:
 439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 513              		.loc 1 439 0
 514 0080 7047     		bx	lr
 515              	.LVL30:
 516              	.L49:
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, GPIONumber);
 517              		.loc 1 443 0
 518 0082 184B     		ldr	r3, .L54
 519 0084 9A6C     		ldr	r2, [r3, #72]
 520 0086 0A43     		orrs	r2, r2, r1
 521 0088 9A64     		str	r2, [r3, #72]
 444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 522              		.loc 1 444 0
 523 008a DA6C     		ldr	r2, [r3, #76]
 524 008c 22EA0101 		bic	r1, r2, r1
 525              	.LVL31:
 526 0090 D964     		str	r1, [r3, #76]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 527              		.loc 1 410 0
 528 0092 0020     		movs	r0, #0
 529              	.LVL32:
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 530              		.loc 1 445 0
ARM GAS  /tmp/ccSWp2BP.s 			page 18


 531 0094 7047     		bx	lr
 532              	.LVL33:
 533              	.L50:
 446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, GPIONumber);
 534              		.loc 1 449 0
 535 0096 134B     		ldr	r3, .L54
 536 0098 1A6D     		ldr	r2, [r3, #80]
 537 009a 0A43     		orrs	r2, r2, r1
 538 009c 1A65     		str	r2, [r3, #80]
 450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 539              		.loc 1 450 0
 540 009e 5A6D     		ldr	r2, [r3, #84]
 541 00a0 22EA0101 		bic	r1, r2, r1
 542              	.LVL34:
 543 00a4 5965     		str	r1, [r3, #84]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 544              		.loc 1 410 0
 545 00a6 0020     		movs	r0, #0
 546              	.LVL35:
 451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 547              		.loc 1 451 0
 548 00a8 7047     		bx	lr
 549              	.LVL36:
 550              	.L51:
 452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 551              		.loc 1 454 0
 552 00aa 0E4B     		ldr	r3, .L54
 553 00ac 9A6D     		ldr	r2, [r3, #88]
 554 00ae 88B2     		uxth	r0, r1
 555              	.LVL37:
 556 00b0 0243     		orrs	r2, r2, r0
 557 00b2 9A65     		str	r2, [r3, #88]
 455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 558              		.loc 1 456 0
 559 00b4 DA6D     		ldr	r2, [r3, #92]
 560 00b6 21F00801 		bic	r1, r1, #8
 561              	.LVL38:
 562 00ba 0904     		lsls	r1, r1, #16
 563 00bc 090C     		lsrs	r1, r1, #16
 564 00be 22EA0101 		bic	r1, r2, r1
 565 00c2 D965     		str	r1, [r3, #92]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 566              		.loc 1 410 0
 567 00c4 0020     		movs	r0, #0
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 568              		.loc 1 460 0
 569 00c6 7047     		bx	lr
 570              	.LVL39:
ARM GAS  /tmp/ccSWp2BP.s 			page 19


 571              	.L52:
 461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 572              		.loc 1 463 0
 573 00c8 064B     		ldr	r3, .L54
 574 00ca 1A6E     		ldr	r2, [r3, #96]
 575 00cc C1F30B01 		ubfx	r1, r1, #0, #12
 576              	.LVL40:
 577 00d0 0A43     		orrs	r2, r2, r1
 578 00d2 1A66     		str	r2, [r3, #96]
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 579              		.loc 1 464 0
 580 00d4 5A6E     		ldr	r2, [r3, #100]
 581 00d6 22EA0101 		bic	r1, r2, r1
 582 00da 5966     		str	r1, [r3, #100]
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 583              		.loc 1 410 0
 584 00dc 0020     		movs	r0, #0
 585              	.LVL41:
 465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 586              		.loc 1 465 0
 587 00de 7047     		bx	lr
 588              	.LVL42:
 589              	.L53:
 466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 590              		.loc 1 468 0
 591 00e0 0120     		movs	r0, #1
 592              	.LVL43:
 469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return status;
 473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 593              		.loc 1 473 0
 594 00e2 7047     		bx	lr
 595              	.L55:
 596              		.align	2
 597              	.L54:
 598 00e4 00700040 		.word	1073770496
 599              		.cfi_endproc
 600              	.LFE133:
 602              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 603              		.align	1
 604              		.global	HAL_PWREx_DisableGPIOPullUp
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 608              		.fpu fpv4-sp-d16
 610              	HAL_PWREx_DisableGPIOPullUp:
 611              	.LFB134:
 474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
ARM GAS  /tmp/ccSWp2BP.s 			page 20


 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input
 481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H
 483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 612              		.loc 1 492 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              	.LVL44:
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 618              		.loc 1 498 0
 619 0000 0828     		cmp	r0, #8
 620 0002 4AD8     		bhi	.L68
 621 0004 DFE800F0 		tbb	[pc, r0]
 622              	.L59:
 623 0008 05       		.byte	(.L58-.L59)/2
 624 0009 0E       		.byte	(.L60-.L59)/2
 625 000a 15       		.byte	(.L61-.L59)/2
 626 000b 1C       		.byte	(.L62-.L59)/2
 627 000c 23       		.byte	(.L63-.L59)/2
 628 000d 2A       		.byte	(.L64-.L59)/2
 629 000e 31       		.byte	(.L65-.L59)/2
 630 000f 38       		.byte	(.L66-.L59)/2
 631 0010 40       		.byte	(.L67-.L59)/2
 632 0011 00       		.p2align 1
 633              	.L58:
 499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 634              		.loc 1 501 0
 635 0012 234A     		ldr	r2, .L69
 636 0014 136A     		ldr	r3, [r2, #32]
 637 0016 21F48041 		bic	r1, r1, #16384
 638              	.LVL45:
 639 001a 23EA0101 		bic	r1, r3, r1
 640 001e 1162     		str	r1, [r2, #32]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 641              		.loc 1 493 0
 642 0020 0020     		movs	r0, #0
 643              	.LVL46:
ARM GAS  /tmp/ccSWp2BP.s 			page 21


 502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 644              		.loc 1 502 0
 645 0022 7047     		bx	lr
 646              	.LVL47:
 647              	.L60:
 503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 648              		.loc 1 504 0
 649 0024 1E4A     		ldr	r2, .L69
 650 0026 936A     		ldr	r3, [r2, #40]
 651 0028 23EA0101 		bic	r1, r3, r1
 652              	.LVL48:
 653 002c 9162     		str	r1, [r2, #40]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 654              		.loc 1 493 0
 655 002e 0020     		movs	r0, #0
 656              	.LVL49:
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 657              		.loc 1 505 0
 658 0030 7047     		bx	lr
 659              	.LVL50:
 660              	.L61:
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 661              		.loc 1 507 0
 662 0032 1B4A     		ldr	r2, .L69
 663 0034 136B     		ldr	r3, [r2, #48]
 664 0036 23EA0101 		bic	r1, r3, r1
 665              	.LVL51:
 666 003a 1163     		str	r1, [r2, #48]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 667              		.loc 1 493 0
 668 003c 0020     		movs	r0, #0
 669              	.LVL52:
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 670              		.loc 1 508 0
 671 003e 7047     		bx	lr
 672              	.LVL53:
 673              	.L62:
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 674              		.loc 1 511 0
 675 0040 174A     		ldr	r2, .L69
 676 0042 936B     		ldr	r3, [r2, #56]
 677 0044 23EA0101 		bic	r1, r3, r1
 678              	.LVL54:
 679 0048 9163     		str	r1, [r2, #56]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 680              		.loc 1 493 0
 681 004a 0020     		movs	r0, #0
 682              	.LVL55:
 512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 683              		.loc 1 512 0
 684 004c 7047     		bx	lr
 685              	.LVL56:
 686              	.L63:
ARM GAS  /tmp/ccSWp2BP.s 			page 22


 513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 687              		.loc 1 516 0
 688 004e 144A     		ldr	r2, .L69
 689 0050 136C     		ldr	r3, [r2, #64]
 690 0052 23EA0101 		bic	r1, r3, r1
 691              	.LVL57:
 692 0056 1164     		str	r1, [r2, #64]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 693              		.loc 1 493 0
 694 0058 0020     		movs	r0, #0
 695              	.LVL58:
 517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 696              		.loc 1 517 0
 697 005a 7047     		bx	lr
 698              	.LVL59:
 699              	.L64:
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 520:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 521:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 700              		.loc 1 521 0
 701 005c 104A     		ldr	r2, .L69
 702 005e 936C     		ldr	r3, [r2, #72]
 703 0060 23EA0101 		bic	r1, r3, r1
 704              	.LVL60:
 705 0064 9164     		str	r1, [r2, #72]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 706              		.loc 1 493 0
 707 0066 0020     		movs	r0, #0
 708              	.LVL61:
 522:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 709              		.loc 1 522 0
 710 0068 7047     		bx	lr
 711              	.LVL62:
 712              	.L65:
 523:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 524:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 525:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 526:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 713              		.loc 1 526 0
 714 006a 0D4A     		ldr	r2, .L69
 715 006c 136D     		ldr	r3, [r2, #80]
 716 006e 23EA0101 		bic	r1, r3, r1
 717              	.LVL63:
 718 0072 1165     		str	r1, [r2, #80]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 719              		.loc 1 493 0
 720 0074 0020     		movs	r0, #0
 721              	.LVL64:
 527:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 722              		.loc 1 527 0
 723 0076 7047     		bx	lr
 724              	.LVL65:
 725              	.L66:
ARM GAS  /tmp/ccSWp2BP.s 			page 23


 528:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 529:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 530:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 726              		.loc 1 530 0
 727 0078 094A     		ldr	r2, .L69
 728 007a 936D     		ldr	r3, [r2, #88]
 729 007c 89B2     		uxth	r1, r1
 730              	.LVL66:
 731 007e 23EA0101 		bic	r1, r3, r1
 732 0082 9165     		str	r1, [r2, #88]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 733              		.loc 1 493 0
 734 0084 0020     		movs	r0, #0
 735              	.LVL67:
 531:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 736              		.loc 1 531 0
 737 0086 7047     		bx	lr
 738              	.LVL68:
 739              	.L67:
 532:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 533:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 534:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 740              		.loc 1 534 0
 741 0088 054A     		ldr	r2, .L69
 742 008a 136E     		ldr	r3, [r2, #96]
 743 008c C1F30B01 		ubfx	r1, r1, #0, #12
 744              	.LVL69:
 745 0090 23EA0101 		bic	r1, r3, r1
 746 0094 1166     		str	r1, [r2, #96]
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 747              		.loc 1 493 0
 748 0096 0020     		movs	r0, #0
 749              	.LVL70:
 535:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 750              		.loc 1 535 0
 751 0098 7047     		bx	lr
 752              	.LVL71:
 753              	.L68:
 536:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 537:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 538:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        status = HAL_ERROR;
 754              		.loc 1 538 0
 755 009a 0120     		movs	r0, #1
 756              	.LVL72:
 539:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 540:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 541:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 542:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return status;
 543:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 757              		.loc 1 543 0
 758 009c 7047     		bx	lr
 759              	.L70:
 760 009e 00BF     		.align	2
 761              	.L69:
 762 00a0 00700040 		.word	1073770496
 763              		.cfi_endproc
 764              	.LFE134:
ARM GAS  /tmp/ccSWp2BP.s 			page 24


 766              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 767              		.align	1
 768              		.global	HAL_PWREx_EnableGPIOPullDown
 769              		.syntax unified
 770              		.thumb
 771              		.thumb_func
 772              		.fpu fpv4-sp-d16
 774              	HAL_PWREx_EnableGPIOPullDown:
 775              	.LFB135:
 544:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 545:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 546:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 547:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 548:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 549:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in
 550:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes.
 551:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 552:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 553:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the
 554:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode.
 555:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 556:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved.
 557:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input
 558:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.
 559:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 560:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 561:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 562:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 563:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 564:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set
 565:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 566:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 567:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 568:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 569:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 776              		.loc 1 569 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL73:
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 571:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 572:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 573:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 574:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 575:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 782              		.loc 1 575 0
 783 0000 0828     		cmp	r0, #8
 784 0002 6CD8     		bhi	.L83
 785 0004 DFE800F0 		tbb	[pc, r0]
 786              	.L74:
 787 0008 05       		.byte	(.L73-.L74)/2
 788 0009 13       		.byte	(.L75-.L74)/2
 789 000a 1F       		.byte	(.L76-.L74)/2
 790 000b 29       		.byte	(.L77-.L74)/2
 791 000c 33       		.byte	(.L78-.L74)/2
ARM GAS  /tmp/ccSWp2BP.s 			page 25


 792 000d 3D       		.byte	(.L79-.L74)/2
 793 000e 47       		.byte	(.L80-.L74)/2
 794 000f 51       		.byte	(.L81-.L74)/2
 795 0010 5F       		.byte	(.L82-.L74)/2
 796 0011 00       		.p2align 1
 797              	.L73:
 576:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 577:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 578:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 798              		.loc 1 578 0
 799 0012 344B     		ldr	r3, .L84
 800 0014 5A6A     		ldr	r2, [r3, #36]
 801 0016 21F42040 		bic	r0, r1, #40960
 802              	.LVL74:
 803 001a 0243     		orrs	r2, r2, r0
 804 001c 5A62     		str	r2, [r3, #36]
 579:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 805              		.loc 1 579 0
 806 001e 1A6A     		ldr	r2, [r3, #32]
 807 0020 21F48041 		bic	r1, r1, #16384
 808              	.LVL75:
 809 0024 22EA0101 		bic	r1, r2, r1
 810 0028 1962     		str	r1, [r3, #32]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 811              		.loc 1 570 0
 812 002a 0020     		movs	r0, #0
 580:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 813              		.loc 1 580 0
 814 002c 7047     		bx	lr
 815              	.LVL76:
 816              	.L75:
 581:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 582:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 817              		.loc 1 582 0
 818 002e 2D4B     		ldr	r3, .L84
 819 0030 DA6A     		ldr	r2, [r3, #44]
 820 0032 21F01000 		bic	r0, r1, #16
 821              	.LVL77:
 822 0036 0243     		orrs	r2, r2, r0
 823 0038 DA62     		str	r2, [r3, #44]
 583:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 824              		.loc 1 583 0
 825 003a 9A6A     		ldr	r2, [r3, #40]
 826 003c 22EA0101 		bic	r1, r2, r1
 827              	.LVL78:
 828 0040 9962     		str	r1, [r3, #40]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 829              		.loc 1 570 0
 830 0042 0020     		movs	r0, #0
 584:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 831              		.loc 1 584 0
 832 0044 7047     		bx	lr
 833              	.LVL79:
 834              	.L76:
 585:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 586:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 835              		.loc 1 586 0
ARM GAS  /tmp/ccSWp2BP.s 			page 26


 836 0046 274B     		ldr	r3, .L84
 837 0048 5A6B     		ldr	r2, [r3, #52]
 838 004a 0A43     		orrs	r2, r2, r1
 839 004c 5A63     		str	r2, [r3, #52]
 587:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 840              		.loc 1 587 0
 841 004e 1A6B     		ldr	r2, [r3, #48]
 842 0050 22EA0101 		bic	r1, r2, r1
 843              	.LVL80:
 844 0054 1963     		str	r1, [r3, #48]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 845              		.loc 1 570 0
 846 0056 0020     		movs	r0, #0
 847              	.LVL81:
 588:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 848              		.loc 1 588 0
 849 0058 7047     		bx	lr
 850              	.LVL82:
 851              	.L77:
 589:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 590:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 591:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 852              		.loc 1 591 0
 853 005a 224B     		ldr	r3, .L84
 854 005c DA6B     		ldr	r2, [r3, #60]
 855 005e 0A43     		orrs	r2, r2, r1
 856 0060 DA63     		str	r2, [r3, #60]
 592:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 857              		.loc 1 592 0
 858 0062 9A6B     		ldr	r2, [r3, #56]
 859 0064 22EA0101 		bic	r1, r2, r1
 860              	.LVL83:
 861 0068 9963     		str	r1, [r3, #56]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 862              		.loc 1 570 0
 863 006a 0020     		movs	r0, #0
 864              	.LVL84:
 593:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 865              		.loc 1 593 0
 866 006c 7047     		bx	lr
 867              	.LVL85:
 868              	.L78:
 594:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 595:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 596:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 597:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 869              		.loc 1 597 0
 870 006e 1D4B     		ldr	r3, .L84
 871 0070 5A6C     		ldr	r2, [r3, #68]
 872 0072 0A43     		orrs	r2, r2, r1
 873 0074 5A64     		str	r2, [r3, #68]
 598:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 874              		.loc 1 598 0
 875 0076 1A6C     		ldr	r2, [r3, #64]
 876 0078 22EA0101 		bic	r1, r2, r1
 877              	.LVL86:
 878 007c 1964     		str	r1, [r3, #64]
ARM GAS  /tmp/ccSWp2BP.s 			page 27


 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 879              		.loc 1 570 0
 880 007e 0020     		movs	r0, #0
 881              	.LVL87:
 599:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 882              		.loc 1 599 0
 883 0080 7047     		bx	lr
 884              	.LVL88:
 885              	.L79:
 600:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 601:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 602:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 603:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, GPIONumber);
 886              		.loc 1 603 0
 887 0082 184B     		ldr	r3, .L84
 888 0084 DA6C     		ldr	r2, [r3, #76]
 889 0086 0A43     		orrs	r2, r2, r1
 890 0088 DA64     		str	r2, [r3, #76]
 604:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 891              		.loc 1 604 0
 892 008a 9A6C     		ldr	r2, [r3, #72]
 893 008c 22EA0101 		bic	r1, r2, r1
 894              	.LVL89:
 895 0090 9964     		str	r1, [r3, #72]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 896              		.loc 1 570 0
 897 0092 0020     		movs	r0, #0
 898              	.LVL90:
 605:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 899              		.loc 1 605 0
 900 0094 7047     		bx	lr
 901              	.LVL91:
 902              	.L80:
 606:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 607:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 608:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 609:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, GPIONumber);
 903              		.loc 1 609 0
 904 0096 134B     		ldr	r3, .L84
 905 0098 5A6D     		ldr	r2, [r3, #84]
 906 009a 0A43     		orrs	r2, r2, r1
 907 009c 5A65     		str	r2, [r3, #84]
 610:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 908              		.loc 1 610 0
 909 009e 1A6D     		ldr	r2, [r3, #80]
 910 00a0 22EA0101 		bic	r1, r2, r1
 911              	.LVL92:
 912 00a4 1965     		str	r1, [r3, #80]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 913              		.loc 1 570 0
 914 00a6 0020     		movs	r0, #0
 915              	.LVL93:
 611:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 916              		.loc 1 611 0
 917 00a8 7047     		bx	lr
 918              	.LVL94:
 919              	.L81:
ARM GAS  /tmp/ccSWp2BP.s 			page 28


 612:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 613:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 614:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 615:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 920              		.loc 1 615 0
 921 00aa 0E4B     		ldr	r3, .L84
 922 00ac DA6D     		ldr	r2, [r3, #92]
 923 00ae 4FF6F770 		movw	r0, #65527
 924              	.LVL95:
 925 00b2 0840     		ands	r0, r0, r1
 926 00b4 0243     		orrs	r2, r2, r0
 927 00b6 DA65     		str	r2, [r3, #92]
 616:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 617:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 618:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 619:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 928              		.loc 1 619 0
 929 00b8 9A6D     		ldr	r2, [r3, #88]
 930 00ba 89B2     		uxth	r1, r1
 931              	.LVL96:
 932 00bc 22EA0101 		bic	r1, r2, r1
 933 00c0 9965     		str	r1, [r3, #88]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 934              		.loc 1 570 0
 935 00c2 0020     		movs	r0, #0
 620:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 936              		.loc 1 620 0
 937 00c4 7047     		bx	lr
 938              	.LVL97:
 939              	.L82:
 621:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 622:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
 623:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 940              		.loc 1 623 0
 941 00c6 074B     		ldr	r3, .L84
 942 00c8 5A6E     		ldr	r2, [r3, #100]
 943 00ca C1F30B01 		ubfx	r1, r1, #0, #12
 944              	.LVL98:
 945 00ce 0A43     		orrs	r2, r2, r1
 946 00d0 5A66     		str	r2, [r3, #100]
 624:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 947              		.loc 1 624 0
 948 00d2 1A6E     		ldr	r2, [r3, #96]
 949 00d4 22EA0101 		bic	r1, r2, r1
 950 00d8 1966     		str	r1, [r3, #96]
 570:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 951              		.loc 1 570 0
 952 00da 0020     		movs	r0, #0
 953              	.LVL99:
 625:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 954              		.loc 1 625 0
 955 00dc 7047     		bx	lr
 956              	.LVL100:
 957              	.L83:
 626:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 627:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 628:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
ARM GAS  /tmp/ccSWp2BP.s 			page 29


 958              		.loc 1 628 0
 959 00de 0120     		movs	r0, #1
 960              	.LVL101:
 629:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 630:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 631:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 632:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return status;
 633:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 961              		.loc 1 633 0
 962 00e0 7047     		bx	lr
 963              	.L85:
 964 00e2 00BF     		.align	2
 965              	.L84:
 966 00e4 00700040 		.word	1073770496
 967              		.cfi_endproc
 968              	.LFE135:
 970              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 971              		.align	1
 972              		.global	HAL_PWREx_DisableGPIOPullDown
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu fpv4-sp-d16
 978              	HAL_PWREx_DisableGPIOPullDown:
 979              	.LFB136:
 634:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 635:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 636:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 637:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 638:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 639:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes.
 640:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input
 641:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.
 642:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H
 643:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         (or PWR_GPIO_I depending on the devices) to select the GPIO peripheral.
 644:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 645:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 646:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for the port where less
 647:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset
 648:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.
 649:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 650:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 651:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 652:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 980              		.loc 1 652 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985              	.LVL102:
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 654:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 655:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 656:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 657:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 658:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 986              		.loc 1 658 0
ARM GAS  /tmp/ccSWp2BP.s 			page 30


 987 0000 0828     		cmp	r0, #8
 988 0002 4FD8     		bhi	.L98
 989 0004 DFE800F0 		tbb	[pc, r0]
 990              	.L89:
 991 0008 05       		.byte	(.L88-.L89)/2
 992 0009 0E       		.byte	(.L90-.L89)/2
 993 000a 17       		.byte	(.L91-.L89)/2
 994 000b 1E       		.byte	(.L92-.L89)/2
 995 000c 25       		.byte	(.L93-.L89)/2
 996 000d 2C       		.byte	(.L94-.L89)/2
 997 000e 33       		.byte	(.L95-.L89)/2
 998 000f 3A       		.byte	(.L96-.L89)/2
 999 0010 45       		.byte	(.L97-.L89)/2
 1000 0011 00       		.p2align 1
 1001              	.L88:
 659:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 660:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 661:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));
 1002              		.loc 1 661 0
 1003 0012 254A     		ldr	r2, .L99
 1004 0014 536A     		ldr	r3, [r2, #36]
 1005 0016 21F42041 		bic	r1, r1, #40960
 1006              	.LVL103:
 1007 001a 23EA0101 		bic	r1, r3, r1
 1008 001e 5162     		str	r1, [r2, #36]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1009              		.loc 1 653 0
 1010 0020 0020     		movs	r0, #0
 1011              	.LVL104:
 662:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1012              		.loc 1 662 0
 1013 0022 7047     		bx	lr
 1014              	.LVL105:
 1015              	.L90:
 663:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 664:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 1016              		.loc 1 664 0
 1017 0024 204A     		ldr	r2, .L99
 1018 0026 D36A     		ldr	r3, [r2, #44]
 1019 0028 21F01001 		bic	r1, r1, #16
 1020              	.LVL106:
 1021 002c 23EA0101 		bic	r1, r3, r1
 1022 0030 D162     		str	r1, [r2, #44]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1023              		.loc 1 653 0
 1024 0032 0020     		movs	r0, #0
 1025              	.LVL107:
 665:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1026              		.loc 1 665 0
 1027 0034 7047     		bx	lr
 1028              	.LVL108:
 1029              	.L91:
 666:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 667:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 1030              		.loc 1 667 0
 1031 0036 1C4A     		ldr	r2, .L99
 1032 0038 536B     		ldr	r3, [r2, #52]
ARM GAS  /tmp/ccSWp2BP.s 			page 31


 1033 003a 23EA0101 		bic	r1, r3, r1
 1034              	.LVL109:
 1035 003e 5163     		str	r1, [r2, #52]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1036              		.loc 1 653 0
 1037 0040 0020     		movs	r0, #0
 1038              	.LVL110:
 668:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1039              		.loc 1 668 0
 1040 0042 7047     		bx	lr
 1041              	.LVL111:
 1042              	.L92:
 669:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOD)
 670:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 671:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 1043              		.loc 1 671 0
 1044 0044 184A     		ldr	r2, .L99
 1045 0046 D36B     		ldr	r3, [r2, #60]
 1046 0048 23EA0101 		bic	r1, r3, r1
 1047              	.LVL112:
 1048 004c D163     		str	r1, [r2, #60]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1049              		.loc 1 653 0
 1050 004e 0020     		movs	r0, #0
 1051              	.LVL113:
 672:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1052              		.loc 1 672 0
 1053 0050 7047     		bx	lr
 1054              	.LVL114:
 1055              	.L93:
 673:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 674:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOE)
 675:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 676:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 1056              		.loc 1 676 0
 1057 0052 154A     		ldr	r2, .L99
 1058 0054 536C     		ldr	r3, [r2, #68]
 1059 0056 23EA0101 		bic	r1, r3, r1
 1060              	.LVL115:
 1061 005a 5164     		str	r1, [r2, #68]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1062              		.loc 1 653 0
 1063 005c 0020     		movs	r0, #0
 1064              	.LVL116:
 677:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1065              		.loc 1 677 0
 1066 005e 7047     		bx	lr
 1067              	.LVL117:
 1068              	.L94:
 678:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 679:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOF)
 680:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 681:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 1069              		.loc 1 681 0
 1070 0060 114A     		ldr	r2, .L99
 1071 0062 D36C     		ldr	r3, [r2, #76]
 1072 0064 23EA0101 		bic	r1, r3, r1
ARM GAS  /tmp/ccSWp2BP.s 			page 32


 1073              	.LVL118:
 1074 0068 D164     		str	r1, [r2, #76]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1075              		.loc 1 653 0
 1076 006a 0020     		movs	r0, #0
 1077              	.LVL119:
 682:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1078              		.loc 1 682 0
 1079 006c 7047     		bx	lr
 1080              	.LVL120:
 1081              	.L95:
 683:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 684:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOG)
 685:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 686:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 1082              		.loc 1 686 0
 1083 006e 0E4A     		ldr	r2, .L99
 1084 0070 536D     		ldr	r3, [r2, #84]
 1085 0072 23EA0101 		bic	r1, r3, r1
 1086              	.LVL121:
 1087 0076 5165     		str	r1, [r2, #84]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1088              		.loc 1 653 0
 1089 0078 0020     		movs	r0, #0
 1090              	.LVL122:
 687:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1091              		.loc 1 687 0
 1092 007a 7047     		bx	lr
 1093              	.LVL123:
 1094              	.L96:
 688:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 689:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 690:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L496xx) || defined (STM32L4A6xx)
 691:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, ((GPIONumber & PWR_PORTH_AVAILABLE_PINS) & (~(PWR_GPIO_BIT_3))));
 1095              		.loc 1 691 0
 1096 007c 0A4A     		ldr	r2, .L99
 1097 007e D36D     		ldr	r3, [r2, #92]
 1098 0080 21F00801 		bic	r1, r1, #8
 1099              	.LVL124:
 1100 0084 0904     		lsls	r1, r1, #16
 1101 0086 090C     		lsrs	r1, r1, #16
 1102 0088 23EA0101 		bic	r1, r3, r1
 1103 008c D165     		str	r1, [r2, #92]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1104              		.loc 1 653 0
 1105 008e 0020     		movs	r0, #0
 1106              	.LVL125:
 692:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #else
 693:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 694:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 695:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1107              		.loc 1 695 0
 1108 0090 7047     		bx	lr
 1109              	.LVL126:
 1110              	.L97:
 696:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(GPIOI)
 697:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_I:
ARM GAS  /tmp/ccSWp2BP.s 			page 33


 698:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRI, (GPIONumber & PWR_PORTI_AVAILABLE_PINS));
 1111              		.loc 1 698 0
 1112 0092 054A     		ldr	r2, .L99
 1113 0094 536E     		ldr	r3, [r2, #100]
 1114 0096 C1F30B01 		ubfx	r1, r1, #0, #12
 1115              	.LVL127:
 1116 009a 23EA0101 		bic	r1, r3, r1
 1117 009e 5166     		str	r1, [r2, #100]
 653:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1118              		.loc 1 653 0
 1119 00a0 0020     		movs	r0, #0
 1120              	.LVL128:
 699:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1121              		.loc 1 699 0
 1122 00a2 7047     		bx	lr
 1123              	.LVL129:
 1124              	.L98:
 700:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 701:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 702:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1125              		.loc 1 702 0
 1126 00a4 0120     		movs	r0, #1
 1127              	.LVL130:
 703:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 704:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 705:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 706:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return status;
 707:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1128              		.loc 1 707 0
 1129 00a6 7047     		bx	lr
 1130              	.L100:
 1131              		.align	2
 1132              	.L99:
 1133 00a8 00700040 		.word	1073770496
 1134              		.cfi_endproc
 1135              	.LFE136:
 1137              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1138              		.align	1
 1139              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv4-sp-d16
 1145              	HAL_PWREx_EnablePullUpPullDownConfig:
 1146              	.LFB137:
 708:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 709:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 710:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 711:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 712:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 713:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in
 714:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.
 715:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 716:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher).
 717:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there
 718:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.
 719:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
ARM GAS  /tmp/ccSWp2BP.s 			page 34


 720:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 721:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 722:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1147              		.loc 1 722 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              		@ link register save eliminated.
 723:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1152              		.loc 1 723 0
 1153 0000 024A     		ldr	r2, .L102
 1154 0002 9368     		ldr	r3, [r2, #8]
 1155 0004 43F48063 		orr	r3, r3, #1024
 1156 0008 9360     		str	r3, [r2, #8]
 724:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1157              		.loc 1 724 0
 1158 000a 7047     		bx	lr
 1159              	.L103:
 1160              		.align	2
 1161              	.L102:
 1162 000c 00700040 		.word	1073770496
 1163              		.cfi_endproc
 1164              	.LFE137:
 1166              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1167              		.align	1
 1168              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu fpv4-sp-d16
 1174              	HAL_PWREx_DisablePullUpPullDownConfig:
 1175              	.LFB138:
 725:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 726:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 727:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 728:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 729:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in
 730:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.
 731:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 732:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 733:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 734:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1176              		.loc 1 734 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 0
 1179              		@ frame_needed = 0, uses_anonymous_args = 0
 1180              		@ link register save eliminated.
 735:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1181              		.loc 1 735 0
 1182 0000 024A     		ldr	r2, .L105
 1183 0002 9368     		ldr	r3, [r2, #8]
 1184 0004 23F48063 		bic	r3, r3, #1024
 1185 0008 9360     		str	r3, [r2, #8]
 736:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1186              		.loc 1 736 0
 1187 000a 7047     		bx	lr
 1188              	.L106:
ARM GAS  /tmp/ccSWp2BP.s 			page 35


 1189              		.align	2
 1190              	.L105:
 1191 000c 00700040 		.word	1073770496
 1192              		.cfi_endproc
 1193              	.LFE138:
 1195              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1196              		.align	1
 1197              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1198              		.syntax unified
 1199              		.thumb
 1200              		.thumb_func
 1201              		.fpu fpv4-sp-d16
 1203              	HAL_PWREx_EnableSRAM2ContentRetention:
 1204              	.LFB139:
 737:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 738:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 739:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 740:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 741:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 742:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in
 743:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.
 744:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 745:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 746:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 747:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1205              		.loc 1 747 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              		@ link register save eliminated.
 748:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1210              		.loc 1 748 0
 1211 0000 024A     		ldr	r2, .L108
 1212 0002 9368     		ldr	r3, [r2, #8]
 1213 0004 43F48073 		orr	r3, r3, #256
 1214 0008 9360     		str	r3, [r2, #8]
 749:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1215              		.loc 1 749 0
 1216 000a 7047     		bx	lr
 1217              	.L109:
 1218              		.align	2
 1219              	.L108:
 1220 000c 00700040 		.word	1073770496
 1221              		.cfi_endproc
 1222              	.LFE139:
 1224              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1225              		.align	1
 1226              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv4-sp-d16
 1232              	HAL_PWREx_DisableSRAM2ContentRetention:
 1233              	.LFB140:
 750:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 751:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 752:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/ccSWp2BP.s 			page 36


 753:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 754:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode
 755:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.
 756:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 757:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 758:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 759:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1234              		.loc 1 759 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 760:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1239              		.loc 1 760 0
 1240 0000 024A     		ldr	r2, .L111
 1241 0002 9368     		ldr	r3, [r2, #8]
 1242 0004 23F48073 		bic	r3, r3, #256
 1243 0008 9360     		str	r3, [r2, #8]
 761:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1244              		.loc 1 761 0
 1245 000a 7047     		bx	lr
 1246              	.L112:
 1247              		.align	2
 1248              	.L111:
 1249 000c 00700040 		.word	1073770496
 1250              		.cfi_endproc
 1251              	.LFE140:
 1253              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1254              		.align	1
 1255              		.global	HAL_PWREx_EnablePVM1
 1256              		.syntax unified
 1257              		.thumb
 1258              		.thumb_func
 1259              		.fpu fpv4-sp-d16
 1261              	HAL_PWREx_EnablePVM1:
 1262              	.LFB141:
 762:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 763:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 764:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_EN_ULP)
 765:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 766:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Ultra Low Power BORL, BORH and PVD for STOP2 and Standby modes.
 767:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All the other modes are not affected by this bit.
 768:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 769:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 770:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBORPVD_ULP(void)
 771:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 772:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EN_ULP);
 773:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 774:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 775:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 776:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 777:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Ultra Low Power BORL, BORH and PVD for STOP2 and Standby modes.
 778:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All the other modes are not affected by this bit
 779:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 780:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 781:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBORPVD_ULP(void)
 782:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/ccSWp2BP.s 			page 37


 783:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EN_ULP);
 784:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 785:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_EN_ULP */
 786:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 787:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 788:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR4_EXT_SMPS_ON)
 789:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 790:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the CFLDO working @ 0.95V.
 791:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When external SMPS is used & CFLDO operating in Range 2, the regulated voltage of the
 792:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        internal CFLDO can be reduced to 0.95V.
 793:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 794:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 795:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableExtSMPS_0V95(void)
 796:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 797:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_EXT_SMPS_ON);
 798:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 799:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 800:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 801:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the CFLDO working @ 0.95V
 802:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Before SMPS is switched off, the regulated voltage of the
 803:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        internal CFLDO shall be set to 1.00V.
 804:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        1.00V. is also default operating Range 2 voltage.
 805:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 806:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 807:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableExtSMPS_0V95(void)
 808:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 809:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_EXT_SMPS_ON);
 810:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 811:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR4_EXT_SMPS_ON */
 812:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 813:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 814:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR1_RRSTP)
 815:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 816:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM3 content retention in Stop 2 mode.
 817:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is set, SRAM3 is powered by the low-power regulator in
 818:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Stop 2 mode and its content is kept.
 819:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 820:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 821:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM3ContentRetention(void)
 822:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 823:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_RRSTP);
 824:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 825:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 826:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 827:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 828:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM3 content retention in Stop 2 mode.
 829:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRSTP bit is reset, SRAM3 is powered off in Stop 2 mode
 830:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.
 831:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 832:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 833:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM3ContentRetention(void)
 834:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 835:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_RRSTP);
 836:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 837:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR1_RRSTP */
 838:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 839:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR3_DSIPDEN)
ARM GAS  /tmp/ccSWp2BP.s 			page 38


 840:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 841:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-down activation on DSI pins.
 842:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 843:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 844:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableDSIPinsPDActivation(void)
 845:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 846:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 847:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 848:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 849:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 850:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 851:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-down activation on DSI pins.
 852:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 853:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 854:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableDSIPinsPDActivation(void)
 855:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 856:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_DSIPDEN);
 857:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 858:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR3_DSIPDEN */
 859:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 860:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 861:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 862:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 863:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 864:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 865:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 866:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1263              		.loc 1 866 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 0
 1266              		@ frame_needed = 0, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 867:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);
 1268              		.loc 1 867 0
 1269 0000 024A     		ldr	r2, .L114
 1270 0002 5368     		ldr	r3, [r2, #4]
 1271 0004 43F01003 		orr	r3, r3, #16
 1272 0008 5360     		str	r3, [r2, #4]
 868:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1273              		.loc 1 868 0
 1274 000a 7047     		bx	lr
 1275              	.L115:
 1276              		.align	2
 1277              	.L114:
 1278 000c 00700040 		.word	1073770496
 1279              		.cfi_endproc
 1280              	.LFE141:
 1282              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1283              		.align	1
 1284              		.global	HAL_PWREx_DisablePVM1
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	HAL_PWREx_DisablePVM1:
 1291              	.LFB142:
 869:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 39


 870:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 871:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 872:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 873:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 874:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 875:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1292              		.loc 1 875 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 876:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);
 1297              		.loc 1 876 0
 1298 0000 024A     		ldr	r2, .L117
 1299 0002 5368     		ldr	r3, [r2, #4]
 1300 0004 23F01003 		bic	r3, r3, #16
 1301 0008 5360     		str	r3, [r2, #4]
 877:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1302              		.loc 1 877 0
 1303 000a 7047     		bx	lr
 1304              	.L118:
 1305              		.align	2
 1306              	.L117:
 1307 000c 00700040 		.word	1073770496
 1308              		.cfi_endproc
 1309              	.LFE142:
 1311              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1312              		.align	1
 1313              		.global	HAL_PWREx_EnablePVM2
 1314              		.syntax unified
 1315              		.thumb
 1316              		.thumb_func
 1317              		.fpu fpv4-sp-d16
 1319              	HAL_PWREx_EnablePVM2:
 1320              	.LFB143:
 878:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
 879:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 880:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 881:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
 882:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 883:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 884:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 885:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 886:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 887:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1321              		.loc 1 887 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 0
 1324              		@ frame_needed = 0, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 888:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);
 1326              		.loc 1 888 0
 1327 0000 024A     		ldr	r2, .L120
 1328 0002 5368     		ldr	r3, [r2, #4]
 1329 0004 43F02003 		orr	r3, r3, #32
 1330 0008 5360     		str	r3, [r2, #4]
 889:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/ccSWp2BP.s 			page 40


 1331              		.loc 1 889 0
 1332 000a 7047     		bx	lr
 1333              	.L121:
 1334              		.align	2
 1335              	.L120:
 1336 000c 00700040 		.word	1073770496
 1337              		.cfi_endproc
 1338              	.LFE143:
 1340              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_PWREx_DisablePVM2
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	HAL_PWREx_DisablePVM2:
 1349              	.LFB144:
 890:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 891:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 892:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 893:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 894:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 895:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 896:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1350              		.loc 1 896 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 0, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 897:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);
 1355              		.loc 1 897 0
 1356 0000 024A     		ldr	r2, .L123
 1357 0002 5368     		ldr	r3, [r2, #4]
 1358 0004 23F02003 		bic	r3, r3, #32
 1359 0008 5360     		str	r3, [r2, #4]
 898:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1360              		.loc 1 898 0
 1361 000a 7047     		bx	lr
 1362              	.L124:
 1363              		.align	2
 1364              	.L123:
 1365 000c 00700040 		.word	1073770496
 1366              		.cfi_endproc
 1367              	.LFE144:
 1369              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1370              		.align	1
 1371              		.global	HAL_PWREx_EnablePVM3
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu fpv4-sp-d16
 1377              	HAL_PWREx_EnablePVM3:
 1378              	.LFB145:
 899:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
 900:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 901:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 902:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/ccSWp2BP.s 			page 41


 903:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 904:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 905:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 906:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 907:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1379              		.loc 1 907 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
 908:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);
 1384              		.loc 1 908 0
 1385 0000 024A     		ldr	r2, .L126
 1386 0002 5368     		ldr	r3, [r2, #4]
 1387 0004 43F04003 		orr	r3, r3, #64
 1388 0008 5360     		str	r3, [r2, #4]
 909:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1389              		.loc 1 909 0
 1390 000a 7047     		bx	lr
 1391              	.L127:
 1392              		.align	2
 1393              	.L126:
 1394 000c 00700040 		.word	1073770496
 1395              		.cfi_endproc
 1396              	.LFE145:
 1398              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1399              		.align	1
 1400              		.global	HAL_PWREx_DisablePVM3
 1401              		.syntax unified
 1402              		.thumb
 1403              		.thumb_func
 1404              		.fpu fpv4-sp-d16
 1406              	HAL_PWREx_DisablePVM3:
 1407              	.LFB146:
 910:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 911:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 912:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 913:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 914:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 915:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 916:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1408              		.loc 1 916 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 917:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);
 1413              		.loc 1 917 0
 1414 0000 024A     		ldr	r2, .L129
 1415 0002 5368     		ldr	r3, [r2, #4]
 1416 0004 23F04003 		bic	r3, r3, #64
 1417 0008 5360     		str	r3, [r2, #4]
 918:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1418              		.loc 1 918 0
 1419 000a 7047     		bx	lr
 1420              	.L130:
 1421              		.align	2
ARM GAS  /tmp/ccSWp2BP.s 			page 42


 1422              	.L129:
 1423 000c 00700040 		.word	1073770496
 1424              		.cfi_endproc
 1425              	.LFE146:
 1427              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1428              		.align	1
 1429              		.global	HAL_PWREx_EnablePVM4
 1430              		.syntax unified
 1431              		.thumb
 1432              		.thumb_func
 1433              		.fpu fpv4-sp-d16
 1435              	HAL_PWREx_EnablePVM4:
 1436              	.LFB147:
 919:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 920:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 921:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 922:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 923:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 924:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 925:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 926:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1437              		.loc 1 926 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 0
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
 927:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);
 1442              		.loc 1 927 0
 1443 0000 024A     		ldr	r2, .L132
 1444 0002 5368     		ldr	r3, [r2, #4]
 1445 0004 43F08003 		orr	r3, r3, #128
 1446 0008 5360     		str	r3, [r2, #4]
 928:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1447              		.loc 1 928 0
 1448 000a 7047     		bx	lr
 1449              	.L133:
 1450              		.align	2
 1451              	.L132:
 1452 000c 00700040 		.word	1073770496
 1453              		.cfi_endproc
 1454              	.LFE147:
 1456              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1457              		.align	1
 1458              		.global	HAL_PWREx_DisablePVM4
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu fpv4-sp-d16
 1464              	HAL_PWREx_DisablePVM4:
 1465              	.LFB148:
 929:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 930:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 931:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 932:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 933:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 934:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 935:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/ccSWp2BP.s 			page 43


 1466              		.loc 1 935 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 936:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);
 1471              		.loc 1 936 0
 1472 0000 024A     		ldr	r2, .L135
 1473 0002 5368     		ldr	r3, [r2, #4]
 1474 0004 23F08003 		bic	r3, r3, #128
 1475 0008 5360     		str	r3, [r2, #4]
 937:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1476              		.loc 1 937 0
 1477 000a 7047     		bx	lr
 1478              	.L136:
 1479              		.align	2
 1480              	.L135:
 1481 000c 00700040 		.word	1073770496
 1482              		.cfi_endproc
 1483              	.LFE148:
 1485              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1486              		.align	1
 1487              		.global	HAL_PWREx_ConfigPVM
 1488              		.syntax unified
 1489              		.thumb
 1490              		.thumb_func
 1491              		.fpu fpv4-sp-d16
 1493              	HAL_PWREx_ConfigPVM:
 1494              	.LFB149:
 938:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 939:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 940:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 941:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 942:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 943:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 944:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 945:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 946:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained
 947:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly
 948:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 949:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 950:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 951:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 952:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL status
 953:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 954:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 955:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1495              		.loc 1 955 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              		@ link register save eliminated.
 1500              	.LVL131:
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 957:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 958:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 959:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
ARM GAS  /tmp/ccSWp2BP.s 			page 44


 960:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 961:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 962:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 963:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 964:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 965:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1501              		.loc 1 966 0
 1502 0000 0368     		ldr	r3, [r0]
 1503 0002 202B     		cmp	r3, #32
 1504 0004 78D0     		beq	.L139
 1505 0006 3DD9     		bls	.L161
 1506 0008 402B     		cmp	r3, #64
 1507 000a 00F0AC80 		beq	.L142
 1508 000e 802B     		cmp	r3, #128
 1509 0010 40F0E080 		bne	.L156
 967:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 968:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
 969:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 970:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 975:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 976:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 978:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 980:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 981:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 982:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 984:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 986:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 987:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 988:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 990:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 992:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 993:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 995:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 997:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 998:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 999:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1000:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1001:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1002:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
1003:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
1005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
1006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
1007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
ARM GAS  /tmp/ccSWp2BP.s 			page 45


1008:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1009:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1011:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
1013:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1014:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1015:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1017:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
1019:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1020:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1021:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1023:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
1025:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1026:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1028:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
1030:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1031:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
1032:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1033:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1034:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
1035:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
1037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
1038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
1039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
1040:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1041:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
1043:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
1045:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1046:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1047:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
1049:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
1051:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1052:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1053:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
1054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
1055:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
1057:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1058:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
1060:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
1062:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1063:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
1064:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 46


1065:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
1066:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
1067:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 1510              		.loc 1 1067 0
 1511 0014 744B     		ldr	r3, .L162
 1512 0016 5A6A     		ldr	r2, [r3, #36]
 1513 0018 22F04002 		bic	r2, r2, #64
 1514 001c 5A62     		str	r2, [r3, #36]
1068:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 1515              		.loc 1 1068 0
 1516 001e 1A6A     		ldr	r2, [r3, #32]
 1517 0020 22F04002 		bic	r2, r2, #64
 1518 0024 1A62     		str	r2, [r3, #32]
1069:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();
 1519              		.loc 1 1069 0
 1520 0026 DA6A     		ldr	r2, [r3, #44]
 1521 0028 22F04002 		bic	r2, r2, #64
 1522 002c DA62     		str	r2, [r3, #44]
1070:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 1523              		.loc 1 1070 0
 1524 002e 9A6A     		ldr	r2, [r3, #40]
 1525 0030 22F04002 		bic	r2, r2, #64
 1526 0034 9A62     		str	r2, [r3, #40]
1071:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1072:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
1073:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1527              		.loc 1 1073 0
 1528 0036 4368     		ldr	r3, [r0, #4]
 1529 0038 13F4803F 		tst	r3, #65536
 1530 003c 04D0     		beq	.L153
1074:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1075:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 1531              		.loc 1 1075 0
 1532 003e 6A4A     		ldr	r2, .L162
 1533 0040 136A     		ldr	r3, [r2, #32]
 1534 0042 43F04003 		orr	r3, r3, #64
 1535 0046 1362     		str	r3, [r2, #32]
 1536              	.L153:
1076:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1077:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1078:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
1079:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1537              		.loc 1 1079 0
 1538 0048 4368     		ldr	r3, [r0, #4]
 1539 004a 13F4003F 		tst	r3, #131072
 1540 004e 04D0     		beq	.L154
1080:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1081:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 1541              		.loc 1 1081 0
 1542 0050 654A     		ldr	r2, .L162
 1543 0052 536A     		ldr	r3, [r2, #36]
 1544 0054 43F04003 		orr	r3, r3, #64
 1545 0058 5362     		str	r3, [r2, #36]
 1546              	.L154:
1082:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1083:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1084:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
ARM GAS  /tmp/ccSWp2BP.s 			page 47


1085:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1547              		.loc 1 1085 0
 1548 005a 4368     		ldr	r3, [r0, #4]
 1549 005c 13F0010F 		tst	r3, #1
 1550 0060 04D0     		beq	.L155
1086:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1087:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 1551              		.loc 1 1087 0
 1552 0062 614A     		ldr	r2, .L162
 1553 0064 936A     		ldr	r3, [r2, #40]
 1554 0066 43F04003 		orr	r3, r3, #64
 1555 006a 9362     		str	r3, [r2, #40]
 1556              	.L155:
1088:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1089:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1090:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1557              		.loc 1 1090 0
 1558 006c 4368     		ldr	r3, [r0, #4]
 1559 006e 13F0020F 		tst	r3, #2
 1560 0072 00F0B780 		beq	.L160
1091:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
1092:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
 1561              		.loc 1 1092 0
 1562 0076 5C4A     		ldr	r2, .L162
 1563 0078 D36A     		ldr	r3, [r2, #44]
 1564 007a 43F04003 		orr	r3, r3, #64
 1565 007e D362     		str	r3, [r2, #44]
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1566              		.loc 1 956 0
 1567 0080 0020     		movs	r0, #0
 1568              	.LVL132:
 1569 0082 7047     		bx	lr
 1570              	.LVL133:
 1571              	.L161:
 966:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 1572              		.loc 1 966 0
 1573 0084 102B     		cmp	r3, #16
 1574 0086 40F0A580 		bne	.L156
 971:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1575              		.loc 1 971 0
 1576 008a 574B     		ldr	r3, .L162
 1577 008c 5A6A     		ldr	r2, [r3, #36]
 1578 008e 22F00802 		bic	r2, r2, #8
 1579 0092 5A62     		str	r2, [r3, #36]
 972:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();
 1580              		.loc 1 972 0
 1581 0094 1A6A     		ldr	r2, [r3, #32]
 1582 0096 22F00802 		bic	r2, r2, #8
 1583 009a 1A62     		str	r2, [r3, #32]
 973:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1584              		.loc 1 973 0
 1585 009c DA6A     		ldr	r2, [r3, #44]
 1586 009e 22F00802 		bic	r2, r2, #8
 1587 00a2 DA62     		str	r2, [r3, #44]
 974:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1588              		.loc 1 974 0
 1589 00a4 9A6A     		ldr	r2, [r3, #40]
ARM GAS  /tmp/ccSWp2BP.s 			page 48


 1590 00a6 22F00802 		bic	r2, r2, #8
 1591 00aa 9A62     		str	r2, [r3, #40]
 977:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1592              		.loc 1 977 0
 1593 00ac 4368     		ldr	r3, [r0, #4]
 1594 00ae 13F4803F 		tst	r3, #65536
 1595 00b2 04D0     		beq	.L144
 979:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1596              		.loc 1 979 0
 1597 00b4 4C4A     		ldr	r2, .L162
 1598 00b6 136A     		ldr	r3, [r2, #32]
 1599 00b8 43F00803 		orr	r3, r3, #8
 1600 00bc 1362     		str	r3, [r2, #32]
 1601              	.L144:
 983:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1602              		.loc 1 983 0
 1603 00be 4368     		ldr	r3, [r0, #4]
 1604 00c0 13F4003F 		tst	r3, #131072
 1605 00c4 04D0     		beq	.L145
 985:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1606              		.loc 1 985 0
 1607 00c6 484A     		ldr	r2, .L162
 1608 00c8 536A     		ldr	r3, [r2, #36]
 1609 00ca 43F00803 		orr	r3, r3, #8
 1610 00ce 5362     		str	r3, [r2, #36]
 1611              	.L145:
 989:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1612              		.loc 1 989 0
 1613 00d0 4368     		ldr	r3, [r0, #4]
 1614 00d2 13F0010F 		tst	r3, #1
 1615 00d6 04D0     		beq	.L146
 991:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1616              		.loc 1 991 0
 1617 00d8 434A     		ldr	r2, .L162
 1618 00da 936A     		ldr	r3, [r2, #40]
 1619 00dc 43F00803 		orr	r3, r3, #8
 1620 00e0 9362     		str	r3, [r2, #40]
 1621              	.L146:
 994:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1622              		.loc 1 994 0
 1623 00e2 4368     		ldr	r3, [r0, #4]
 1624 00e4 13F0020F 		tst	r3, #2
 1625 00e8 76D0     		beq	.L157
 996:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1626              		.loc 1 996 0
 1627 00ea 3F4A     		ldr	r2, .L162
 1628 00ec D36A     		ldr	r3, [r2, #44]
 1629 00ee 43F00803 		orr	r3, r3, #8
 1630 00f2 D362     		str	r3, [r2, #44]
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1631              		.loc 1 956 0
 1632 00f4 0020     		movs	r0, #0
 1633              	.LVL134:
 1634 00f6 7047     		bx	lr
 1635              	.LVL135:
 1636              	.L139:
1004:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
ARM GAS  /tmp/ccSWp2BP.s 			page 49


 1637              		.loc 1 1004 0
 1638 00f8 3B4B     		ldr	r3, .L162
 1639 00fa 5A6A     		ldr	r2, [r3, #36]
 1640 00fc 22F01002 		bic	r2, r2, #16
 1641 0100 5A62     		str	r2, [r3, #36]
1005:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();
 1642              		.loc 1 1005 0
 1643 0102 1A6A     		ldr	r2, [r3, #32]
 1644 0104 22F01002 		bic	r2, r2, #16
 1645 0108 1A62     		str	r2, [r3, #32]
1006:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1646              		.loc 1 1006 0
 1647 010a DA6A     		ldr	r2, [r3, #44]
 1648 010c 22F01002 		bic	r2, r2, #16
 1649 0110 DA62     		str	r2, [r3, #44]
1007:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1650              		.loc 1 1007 0
 1651 0112 9A6A     		ldr	r2, [r3, #40]
 1652 0114 22F01002 		bic	r2, r2, #16
 1653 0118 9A62     		str	r2, [r3, #40]
1010:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1654              		.loc 1 1010 0
 1655 011a 4368     		ldr	r3, [r0, #4]
 1656 011c 13F4803F 		tst	r3, #65536
 1657 0120 04D0     		beq	.L147
1012:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1658              		.loc 1 1012 0
 1659 0122 314A     		ldr	r2, .L162
 1660 0124 136A     		ldr	r3, [r2, #32]
 1661 0126 43F01003 		orr	r3, r3, #16
 1662 012a 1362     		str	r3, [r2, #32]
 1663              	.L147:
1016:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1664              		.loc 1 1016 0
 1665 012c 4368     		ldr	r3, [r0, #4]
 1666 012e 13F4003F 		tst	r3, #131072
 1667 0132 04D0     		beq	.L148
1018:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1668              		.loc 1 1018 0
 1669 0134 2C4A     		ldr	r2, .L162
 1670 0136 536A     		ldr	r3, [r2, #36]
 1671 0138 43F01003 		orr	r3, r3, #16
 1672 013c 5362     		str	r3, [r2, #36]
 1673              	.L148:
1022:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1674              		.loc 1 1022 0
 1675 013e 4368     		ldr	r3, [r0, #4]
 1676 0140 13F0010F 		tst	r3, #1
 1677 0144 04D0     		beq	.L149
1024:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1678              		.loc 1 1024 0
 1679 0146 284A     		ldr	r2, .L162
 1680 0148 936A     		ldr	r3, [r2, #40]
 1681 014a 43F01003 		orr	r3, r3, #16
 1682 014e 9362     		str	r3, [r2, #40]
 1683              	.L149:
1027:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
ARM GAS  /tmp/ccSWp2BP.s 			page 50


 1684              		.loc 1 1027 0
 1685 0150 4368     		ldr	r3, [r0, #4]
 1686 0152 13F0020F 		tst	r3, #2
 1687 0156 41D0     		beq	.L158
1029:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1688              		.loc 1 1029 0
 1689 0158 234A     		ldr	r2, .L162
 1690 015a D36A     		ldr	r3, [r2, #44]
 1691 015c 43F01003 		orr	r3, r3, #16
 1692 0160 D362     		str	r3, [r2, #44]
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1693              		.loc 1 956 0
 1694 0162 0020     		movs	r0, #0
 1695              	.LVL136:
 1696 0164 7047     		bx	lr
 1697              	.LVL137:
 1698              	.L142:
1036:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 1699              		.loc 1 1036 0
 1700 0166 204B     		ldr	r3, .L162
 1701 0168 5A6A     		ldr	r2, [r3, #36]
 1702 016a 22F02002 		bic	r2, r2, #32
 1703 016e 5A62     		str	r2, [r3, #36]
1037:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();
 1704              		.loc 1 1037 0
 1705 0170 1A6A     		ldr	r2, [r3, #32]
 1706 0172 22F02002 		bic	r2, r2, #32
 1707 0176 1A62     		str	r2, [r3, #32]
1038:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 1708              		.loc 1 1038 0
 1709 0178 DA6A     		ldr	r2, [r3, #44]
 1710 017a 22F02002 		bic	r2, r2, #32
 1711 017e DA62     		str	r2, [r3, #44]
1039:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1712              		.loc 1 1039 0
 1713 0180 9A6A     		ldr	r2, [r3, #40]
 1714 0182 22F02002 		bic	r2, r2, #32
 1715 0186 9A62     		str	r2, [r3, #40]
1042:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1716              		.loc 1 1042 0
 1717 0188 4368     		ldr	r3, [r0, #4]
 1718 018a 13F4803F 		tst	r3, #65536
 1719 018e 04D0     		beq	.L150
1044:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1720              		.loc 1 1044 0
 1721 0190 154A     		ldr	r2, .L162
 1722 0192 136A     		ldr	r3, [r2, #32]
 1723 0194 43F02003 		orr	r3, r3, #32
 1724 0198 1362     		str	r3, [r2, #32]
 1725              	.L150:
1048:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1726              		.loc 1 1048 0
 1727 019a 4368     		ldr	r3, [r0, #4]
 1728 019c 13F4003F 		tst	r3, #131072
 1729 01a0 04D0     		beq	.L151
1050:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1730              		.loc 1 1050 0
ARM GAS  /tmp/ccSWp2BP.s 			page 51


 1731 01a2 114A     		ldr	r2, .L162
 1732 01a4 536A     		ldr	r3, [r2, #36]
 1733 01a6 43F02003 		orr	r3, r3, #32
 1734 01aa 5362     		str	r3, [r2, #36]
 1735              	.L151:
1054:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1736              		.loc 1 1054 0
 1737 01ac 4368     		ldr	r3, [r0, #4]
 1738 01ae 13F0010F 		tst	r3, #1
 1739 01b2 04D0     		beq	.L152
1056:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1740              		.loc 1 1056 0
 1741 01b4 0C4A     		ldr	r2, .L162
 1742 01b6 936A     		ldr	r3, [r2, #40]
 1743 01b8 43F02003 		orr	r3, r3, #32
 1744 01bc 9362     		str	r3, [r2, #40]
 1745              	.L152:
1059:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 1746              		.loc 1 1059 0
 1747 01be 4368     		ldr	r3, [r0, #4]
 1748 01c0 13F0020F 		tst	r3, #2
 1749 01c4 0CD0     		beq	.L159
1061:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 1750              		.loc 1 1061 0
 1751 01c6 084A     		ldr	r2, .L162
 1752 01c8 D36A     		ldr	r3, [r2, #44]
 1753 01ca 43F02003 		orr	r3, r3, #32
 1754 01ce D362     		str	r3, [r2, #44]
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1755              		.loc 1 956 0
 1756 01d0 0020     		movs	r0, #0
 1757              	.LVL138:
 1758 01d2 7047     		bx	lr
 1759              	.LVL139:
 1760              	.L156:
1093:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
1094:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
1095:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1096:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
1097:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       status = HAL_ERROR;
 1761              		.loc 1 1097 0
 1762 01d4 0120     		movs	r0, #1
 1763              	.LVL140:
 1764 01d6 7047     		bx	lr
 1765              	.LVL141:
 1766              	.L157:
 956:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 1767              		.loc 1 956 0
 1768 01d8 0020     		movs	r0, #0
 1769              	.LVL142:
 1770 01da 7047     		bx	lr
 1771              	.LVL143:
 1772              	.L158:
 1773 01dc 0020     		movs	r0, #0
 1774              	.LVL144:
 1775 01de 7047     		bx	lr
 1776              	.LVL145:
ARM GAS  /tmp/ccSWp2BP.s 			page 52


 1777              	.L159:
 1778 01e0 0020     		movs	r0, #0
 1779              	.LVL146:
 1780 01e2 7047     		bx	lr
 1781              	.LVL147:
 1782              	.L160:
 1783 01e4 0020     		movs	r0, #0
 1784              	.LVL148:
1098:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
1099:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return status;
1102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1785              		.loc 1 1102 0
 1786 01e6 7047     		bx	lr
 1787              	.L163:
 1788              		.align	2
 1789              	.L162:
 1790 01e8 00040140 		.word	1073808384
 1791              		.cfi_endproc
 1792              	.LFE149:
 1794              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 1795              		.align	1
 1796              		.global	HAL_PWREx_EnableLowPowerRunMode
 1797              		.syntax unified
 1798              		.thumb
 1799              		.thumb_func
 1800              		.fpu fpv4-sp-d16
 1802              	HAL_PWREx_EnableLowPowerRunMode:
 1803              	.LFB150:
1103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
1108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.
1109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
1110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
1111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
1112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must
1113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.
1114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
1117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1804              		.loc 1 1117 0
 1805              		.cfi_startproc
 1806              		@ args = 0, pretend = 0, frame = 0
 1807              		@ frame_needed = 0, uses_anonymous_args = 0
 1808              		@ link register save eliminated.
1118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
1119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR);
 1809              		.loc 1 1119 0
 1810 0000 024A     		ldr	r2, .L165
 1811 0002 1368     		ldr	r3, [r2]
 1812 0004 43F48043 		orr	r3, r3, #16384
 1813 0008 1360     		str	r3, [r2]
ARM GAS  /tmp/ccSWp2BP.s 			page 53


1120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1814              		.loc 1 1120 0
 1815 000a 7047     		bx	lr
 1816              	.L166:
 1817              		.align	2
 1818              	.L165:
 1819 000c 00700040 		.word	1073770496
 1820              		.cfi_endproc
 1821              	.LFE150:
 1823              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 1824              		.align	1
 1825              		.global	HAL_PWREx_DisableLowPowerRunMode
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu fpv4-sp-d16
 1831              	HAL_PWREx_DisableLowPowerRunMode:
 1832              	.LFB151:
1121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
1125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that
1126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode
1127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
1128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.
1129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
1130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
1132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1833              		.loc 1 1132 0
 1834              		.cfi_startproc
 1835              		@ args = 0, pretend = 0, frame = 0
 1836              		@ frame_needed = 0, uses_anonymous_args = 0
 1837              		@ link register save eliminated.
1133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index;
1134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
1136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR);
 1838              		.loc 1 1136 0
 1839 0000 104A     		ldr	r2, .L174
 1840 0002 1368     		ldr	r3, [r2]
 1841 0004 23F48043 		bic	r3, r3, #16384
 1842 0008 1360     		str	r3, [r2]
1137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
1139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 1843              		.loc 1 1139 0
 1844 000a 0F4B     		ldr	r3, .L174+4
 1845 000c 1A68     		ldr	r2, [r3]
 1846 000e 3223     		movs	r3, #50
 1847 0010 03FB02F3 		mul	r3, r3, r2
 1848 0014 0D4A     		ldr	r2, .L174+8
 1849 0016 A2FB0323 		umull	r2, r3, r2, r3
 1850 001a 9B0C     		lsrs	r3, r3, #18
 1851 001c 0133     		adds	r3, r3, #1
 1852              	.LVL149:
ARM GAS  /tmp/ccSWp2BP.s 			page 54


1140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1853              		.loc 1 1140 0
 1854 001e 00E0     		b	.L168
 1855              	.L170:
1141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     wait_loop_index--;
 1856              		.loc 1 1142 0
 1857 0020 013B     		subs	r3, r3, #1
 1858              	.LVL150:
 1859              	.L168:
1140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1860              		.loc 1 1140 0
 1861 0022 084A     		ldr	r2, .L174
 1862 0024 5269     		ldr	r2, [r2, #20]
 1863 0026 12F4007F 		tst	r2, #512
 1864 002a 01D0     		beq	.L169
1140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)) && (wait_loop_index != 0U))
 1865              		.loc 1 1140 0 is_stmt 0 discriminator 1
 1866 002c 002B     		cmp	r3, #0
 1867 002e F7D1     		bne	.L170
 1868              	.L169:
1143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 1869              		.loc 1 1144 0 is_stmt 1
 1870 0030 044B     		ldr	r3, .L174
 1871              	.LVL151:
 1872 0032 5B69     		ldr	r3, [r3, #20]
 1873 0034 13F4007F 		tst	r3, #512
 1874 0038 01D1     		bne	.L173
1145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
1147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1875              		.loc 1 1149 0
 1876 003a 0020     		movs	r0, #0
1150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1877              		.loc 1 1150 0
 1878 003c 7047     		bx	lr
 1879              	.L173:
1146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 1880              		.loc 1 1146 0
 1881 003e 0320     		movs	r0, #3
 1882 0040 7047     		bx	lr
 1883              	.L175:
 1884 0042 00BF     		.align	2
 1885              	.L174:
 1886 0044 00700040 		.word	1073770496
 1887 0048 00000000 		.word	SystemCoreClock
 1888 004c 83DE1B43 		.word	1125899907
 1889              		.cfi_endproc
 1890              	.LFE151:
 1892              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 1893              		.align	1
 1894              		.global	HAL_PWREx_EnterSTOP0Mode
 1895              		.syntax unified
 1896              		.thumb
ARM GAS  /tmp/ccSWp2BP.s 			page 55


 1897              		.thumb_func
 1898              		.fpu fpv4-sp-d16
 1900              	HAL_PWREx_EnterSTOP0Mode:
 1901              	.LFB152:
1151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
1155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
1156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
1157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
1158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
1165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
1168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
1169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
1176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1902              		.loc 1 1176 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907              	.LVL152:
1177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
1181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 1908              		.loc 1 1181 0
 1909 0000 0B4A     		ldr	r2, .L180
 1910 0002 1368     		ldr	r3, [r2]
 1911 0004 23F00703 		bic	r3, r3, #7
 1912 0008 1360     		str	r3, [r2]
1182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1913              		.loc 1 1184 0
 1914 000a 0A4A     		ldr	r2, .L180+4
 1915 000c 1369     		ldr	r3, [r2, #16]
 1916 000e 43F00403 		orr	r3, r3, #4
 1917 0012 1361     		str	r3, [r2, #16]
1185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
ARM GAS  /tmp/ccSWp2BP.s 			page 56


 1918              		.loc 1 1187 0
 1919 0014 0128     		cmp	r0, #1
 1920 0016 08D0     		beq	.L179
 1921              	.LBB28:
 1922              	.LBB29:
 1923              		.file 2 "../../core/ST/CMSIS/Include/cmsis_gcc.h"
   1:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
   9:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  34:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  35:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  38:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  46:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  47:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccSWp2BP.s 			page 57


  52:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  53:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  60:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  62:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  63:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  64:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  71:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  73:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  74:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  75:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  82:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  84:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  87:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  88:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  89:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  96:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  98:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  99:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 100:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 107:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 58


 109:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 112:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 113:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 114:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 121:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 123:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 126:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 127:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 128:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 132:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 136:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 138:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 141:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 142:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 143:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 150:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 152:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 155:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 156:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 157:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 164:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccSWp2BP.s 			page 59


 166:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 167:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 168:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 175:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 177:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 180:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 181:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 182:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 186:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 190:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 192:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 193:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 194:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 201:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 203:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 206:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 207:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 208:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 215:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 217:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 218:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 219:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 221:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
ARM GAS  /tmp/ccSWp2BP.s 			page 60


 223:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 228:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 230:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 231:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 232:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 239:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 241:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 242:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 243:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 250:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 252:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 255:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 256:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 257:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 264:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 266:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 267:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 268:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 276:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 278:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 279:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 61


 280:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 287:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 289:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 292:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 293:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 294:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 301:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 303:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 304:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 306:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 307:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 309:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 316:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 319:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 328:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 329:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 330:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccSWp2BP.s 			page 62


 337:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 344:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 345:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 347:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 348:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 349:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 351:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 352:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../core/ST/CMSIS/Include/cmsis_gcc.h **** */
 357:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 358:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 369:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 375:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 377:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 378:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 379:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 387:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 388:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 389:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccSWp2BP.s 			page 63


 394:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 396:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 398:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 399:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 400:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 406:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 1924              		.loc 2 406 0
 1925              		.syntax unified
 1926              	@ 406 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 1927 0018 40BF     		sev
 1928              	@ 0 "" 2
 1929              		.thumb
 1930              		.syntax unified
 1931              	.LBE29:
 1932              	.LBE28:
 1933              	.LBB30:
 1934              	.LBB31:
 396:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 1935              		.loc 2 396 0
 1936              		.syntax unified
 1937              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 1938 001a 20BF     		wfe
 1939              	@ 0 "" 2
 1940              		.thumb
 1941              		.syntax unified
 1942              	.LBE31:
 1943              	.LBE30:
 1944              	.LBB32:
 1945              	.LBB33:
 1946              		.syntax unified
 1947              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 1948 001c 20BF     		wfe
 1949              	@ 0 "" 2
 1950              		.thumb
 1951              		.syntax unified
 1952              	.L178:
 1953              	.LBE33:
 1954              	.LBE32:
1188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 64


1200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 1955              		.loc 1 1201 0
 1956 001e 054A     		ldr	r2, .L180+4
 1957 0020 1369     		ldr	r3, [r2, #16]
 1958 0022 23F00403 		bic	r3, r3, #4
 1959 0026 1361     		str	r3, [r2, #16]
1202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1960              		.loc 1 1202 0
 1961 0028 7047     		bx	lr
 1962              	.L179:
 1963              	.LBB34:
 1964              	.LBB35:
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 1965              		.loc 2 385 0
 1966              		.syntax unified
 1967              	@ 385 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 1968 002a 30BF     		wfi
 1969              	@ 0 "" 2
 1970              		.thumb
 1971              		.syntax unified
 1972 002c F7E7     		b	.L178
 1973              	.L181:
 1974 002e 00BF     		.align	2
 1975              	.L180:
 1976 0030 00700040 		.word	1073770496
 1977 0034 00ED00E0 		.word	-536810240
 1978              	.LBE35:
 1979              	.LBE34:
 1980              		.cfi_endproc
 1981              	.LFE152:
 1983              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 1984              		.align	1
 1985              		.global	HAL_PWREx_EnterSTOP1Mode
 1986              		.syntax unified
 1987              		.thumb
 1988              		.thumb_func
 1989              		.fpu fpv4-sp-d16
 1991              	HAL_PWREx_EnterSTOP1Mode:
 1992              	.LFB153:
1203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
1207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
1208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
1209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
1210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
1211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
1212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
1213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
1214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
1217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
ARM GAS  /tmp/ccSWp2BP.s 			page 65


1220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
1227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1993              		.loc 1 1227 0
 1994              		.cfi_startproc
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              		@ link register save eliminated.
 1998              	.LVL153:
1228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
1229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
1232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 1999              		.loc 1 1232 0
 2000 0000 0C4A     		ldr	r2, .L186
 2001 0002 1368     		ldr	r3, [r2]
 2002 0004 23F00703 		bic	r3, r3, #7
 2003 0008 43F00103 		orr	r3, r3, #1
 2004 000c 1360     		str	r3, [r2]
1233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2005              		.loc 1 1235 0
 2006 000e 0A4A     		ldr	r2, .L186+4
 2007 0010 1369     		ldr	r3, [r2, #16]
 2008 0012 43F00403 		orr	r3, r3, #4
 2009 0016 1361     		str	r3, [r2, #16]
1236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2010              		.loc 1 1238 0
 2011 0018 0128     		cmp	r0, #1
 2012 001a 08D0     		beq	.L185
 2013              	.LBB36:
 2014              	.LBB37:
 2015              		.loc 2 406 0
 2016              		.syntax unified
 2017              	@ 406 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2018 001c 40BF     		sev
 2019              	@ 0 "" 2
 2020              		.thumb
 2021              		.syntax unified
 2022              	.LBE37:
 2023              	.LBE36:
 2024              	.LBB38:
 2025              	.LBB39:
 396:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 2026              		.loc 2 396 0
 2027              		.syntax unified
 2028              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2029 001e 20BF     		wfe
ARM GAS  /tmp/ccSWp2BP.s 			page 66


 2030              	@ 0 "" 2
 2031              		.thumb
 2032              		.syntax unified
 2033              	.LBE39:
 2034              	.LBE38:
 2035              	.LBB40:
 2036              	.LBB41:
 2037              		.syntax unified
 2038              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2039 0020 20BF     		wfe
 2040              	@ 0 "" 2
 2041              		.thumb
 2042              		.syntax unified
 2043              	.L184:
 2044              	.LBE41:
 2045              	.LBE40:
1239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2046              		.loc 1 1252 0
 2047 0022 054A     		ldr	r2, .L186+4
 2048 0024 1369     		ldr	r3, [r2, #16]
 2049 0026 23F00403 		bic	r3, r3, #4
 2050 002a 1361     		str	r3, [r2, #16]
1253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2051              		.loc 1 1253 0
 2052 002c 7047     		bx	lr
 2053              	.L185:
 2054              	.LBB42:
 2055              	.LBB43:
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 2056              		.loc 2 385 0
 2057              		.syntax unified
 2058              	@ 385 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2059 002e 30BF     		wfi
 2060              	@ 0 "" 2
 2061              		.thumb
 2062              		.syntax unified
 2063 0030 F7E7     		b	.L184
 2064              	.L187:
 2065 0032 00BF     		.align	2
 2066              	.L186:
 2067 0034 00700040 		.word	1073770496
 2068 0038 00ED00E0 		.word	-536810240
 2069              	.LBE43:
 2070              	.LBE42:
ARM GAS  /tmp/ccSWp2BP.s 			page 67


 2071              		.cfi_endproc
 2072              	.LFE153:
 2074              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 2075              		.align	1
 2076              		.global	HAL_PWREx_EnterSTOP2Mode
 2077              		.syntax unified
 2078              		.thumb
 2079              		.thumb_func
 2080              		.fpu fpv4-sp-d16
 2082              	HAL_PWREx_EnterSTOP2Mode:
 2083              	.LFB154:
1254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
1258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, only low power voltage regulator is ON.
1259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
1260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI,
1261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability
1262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
1263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
1264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
1265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
1267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
1268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.
1269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
1270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
1271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
1272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
1279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2084              		.loc 1 1279 0
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 0
 2087              		@ frame_needed = 0, uses_anonymous_args = 0
 2088              		@ link register save eliminated.
 2089              	.LVL154:
1280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameter */
1281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
1284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP2);
 2090              		.loc 1 1284 0
 2091 0000 0C4A     		ldr	r2, .L192
 2092 0002 1368     		ldr	r3, [r2]
 2093 0004 23F00703 		bic	r3, r3, #7
 2094 0008 43F00203 		orr	r3, r3, #2
 2095 000c 1360     		str	r3, [r2]
1285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
ARM GAS  /tmp/ccSWp2BP.s 			page 68


 2096              		.loc 1 1287 0
 2097 000e 0A4A     		ldr	r2, .L192+4
 2098 0010 1369     		ldr	r3, [r2, #16]
 2099 0012 43F00403 		orr	r3, r3, #4
 2100 0016 1361     		str	r3, [r2, #16]
1288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2101              		.loc 1 1290 0
 2102 0018 0128     		cmp	r0, #1
 2103 001a 08D0     		beq	.L191
 2104              	.LBB44:
 2105              	.LBB45:
 2106              		.loc 2 406 0
 2107              		.syntax unified
 2108              	@ 406 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2109 001c 40BF     		sev
 2110              	@ 0 "" 2
 2111              		.thumb
 2112              		.syntax unified
 2113              	.LBE45:
 2114              	.LBE44:
 2115              	.LBB46:
 2116              	.LBB47:
 396:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 2117              		.loc 2 396 0
 2118              		.syntax unified
 2119              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2120 001e 20BF     		wfe
 2121              	@ 0 "" 2
 2122              		.thumb
 2123              		.syntax unified
 2124              	.LBE47:
 2125              	.LBE46:
 2126              	.LBB48:
 2127              	.LBB49:
 2128              		.syntax unified
 2129              	@ 396 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2130 0020 20BF     		wfe
 2131              	@ 0 "" 2
 2132              		.thumb
 2133              		.syntax unified
 2134              	.L190:
 2135              	.LBE49:
 2136              	.LBE48:
1291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/ccSWp2BP.s 			page 69


1303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2137              		.loc 1 1304 0
 2138 0022 054A     		ldr	r2, .L192+4
 2139 0024 1369     		ldr	r3, [r2, #16]
 2140 0026 23F00403 		bic	r3, r3, #4
 2141 002a 1361     		str	r3, [r2, #16]
1305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2142              		.loc 1 1305 0
 2143 002c 7047     		bx	lr
 2144              	.L191:
 2145              	.LBB50:
 2146              	.LBB51:
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 2147              		.loc 2 385 0
 2148              		.syntax unified
 2149              	@ 385 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2150 002e 30BF     		wfi
 2151              	@ 0 "" 2
 2152              		.thumb
 2153              		.syntax unified
 2154 0030 F7E7     		b	.L190
 2155              	.L193:
 2156 0032 00BF     		.align	2
 2157              	.L192:
 2158 0034 00700040 		.word	1073770496
 2159 0038 00ED00E0 		.word	-536810240
 2160              	.LBE51:
 2161              	.LBE50:
 2162              		.cfi_endproc
 2163              	.LFE154:
 2165              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 2166              		.align	1
 2167              		.global	HAL_PWREx_EnterSHUTDOWNMode
 2168              		.syntax unified
 2169              		.thumb
 2170              		.thumb_func
 2171              		.fpu fpv4-sp-d16
 2173              	HAL_PWREx_EnterSHUTDOWNMode:
 2174              	.LFB155:
1306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode.
1313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
1314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off.
1315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
1316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is not available.
1317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2175              		.loc 1 1321 0
ARM GAS  /tmp/ccSWp2BP.s 			page 70


 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 0
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 2179              		@ link register save eliminated.
1322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 2180              		.loc 1 1324 0
 2181 0000 064A     		ldr	r2, .L195
 2182 0002 1368     		ldr	r3, [r2]
 2183 0004 23F00703 		bic	r3, r3, #7
 2184 0008 43F00403 		orr	r3, r3, #4
 2185 000c 1360     		str	r3, [r2]
1325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2186              		.loc 1 1327 0
 2187 000e 044A     		ldr	r2, .L195+4
 2188 0010 1369     		ldr	r3, [r2, #16]
 2189 0012 43F00403 		orr	r3, r3, #4
 2190 0016 1361     		str	r3, [r2, #16]
 2191              	.LBB52:
 2192              	.LBB53:
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 2193              		.loc 2 385 0
 2194              		.syntax unified
 2195              	@ 385 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 2196 0018 30BF     		wfi
 2197              	@ 0 "" 2
 2198              		.thumb
 2199              		.syntax unified
 2200              	.LBE53:
 2201              	.LBE52:
1328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __force_stores();
1332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
1333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __WFI();
1335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2202              		.loc 1 1335 0
 2203 001a 7047     		bx	lr
 2204              	.L196:
 2205              		.align	2
 2206              	.L195:
 2207 001c 00700040 		.word	1073770496
 2208 0020 00ED00E0 		.word	-536810240
 2209              		.cfi_endproc
 2210              	.LFE155:
 2212              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2213              		.align	1
 2214              		.weak	HAL_PWREx_PVM1Callback
 2215              		.syntax unified
 2216              		.thumb
 2217              		.thumb_func
 2218              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccSWp2BP.s 			page 71


 2220              	HAL_PWREx_PVM1Callback:
 2221              	.LFB157:
1336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().
1343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
1347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != 0x0U)
1349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
1352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
1355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != 0x0U)
1359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
1362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
1365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != 0x0U)
1369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
1372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
1375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != 0x0U)
1378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
1381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
1384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != 0x0U)
1386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
1389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
ARM GAS  /tmp/ccSWp2BP.s 			page 72


1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
1392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
1394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME1)
1397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2222              		.loc 1 1402 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 0
 2225              		@ frame_needed = 0, uses_anonymous_args = 0
 2226              		@ link register save eliminated.
1403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2227              		.loc 1 1406 0
 2228 0000 7047     		bx	lr
 2229              		.cfi_endproc
 2230              	.LFE157:
 2232              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2233              		.align	1
 2234              		.weak	HAL_PWREx_PVM2Callback
 2235              		.syntax unified
 2236              		.thumb
 2237              		.thumb_func
 2238              		.fpu fpv4-sp-d16
 2240              	HAL_PWREx_PVM2Callback:
 2241              	.LFB158:
1407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME1 */
1408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined(PWR_CR2_PVME2)
1410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2242              		.loc 1 1415 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 0
 2245              		@ frame_needed = 0, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
1416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2247              		.loc 1 1419 0
 2248 0000 7047     		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE158:
 2252              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
ARM GAS  /tmp/ccSWp2BP.s 			page 73


 2253              		.align	1
 2254              		.weak	HAL_PWREx_PVM3Callback
 2255              		.syntax unified
 2256              		.thumb
 2257              		.thumb_func
 2258              		.fpu fpv4-sp-d16
 2260              	HAL_PWREx_PVM3Callback:
 2261              	.LFB159:
1420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* PWR_CR2_PVME2 */
1421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2262              		.loc 1 1427 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 0
 2265              		@ frame_needed = 0, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
1428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2267              		.loc 1 1431 0
 2268 0000 7047     		bx	lr
 2269              		.cfi_endproc
 2270              	.LFE159:
 2272              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 2273              		.align	1
 2274              		.weak	HAL_PWREx_PVM4Callback
 2275              		.syntax unified
 2276              		.thumb
 2277              		.thumb_func
 2278              		.fpu fpv4-sp-d16
 2280              	HAL_PWREx_PVM4Callback:
 2281              	.LFB160:
1432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2282              		.loc 1 1438 0
 2283              		.cfi_startproc
 2284              		@ args = 0, pretend = 0, frame = 0
 2285              		@ frame_needed = 0, uses_anonymous_args = 0
 2286              		@ link register save eliminated.
1439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2287              		.loc 1 1442 0
 2288 0000 7047     		bx	lr
 2289              		.cfi_endproc
ARM GAS  /tmp/ccSWp2BP.s 			page 74


 2290              	.LFE160:
 2292              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2293              		.align	1
 2294              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2295              		.syntax unified
 2296              		.thumb
 2297              		.thumb_func
 2298              		.fpu fpv4-sp-d16
 2300              	HAL_PWREx_PVD_PVM_IRQHandler:
 2301              	.LFB156:
1346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
 2302              		.loc 1 1346 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 0, uses_anonymous_args = 0
 2306 0000 08B5     		push	{r3, lr}
 2307              	.LCFI0:
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 3, -8
 2310              		.cfi_offset 14, -4
1348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2311              		.loc 1 1348 0
 2312 0002 1C4B     		ldr	r3, .L213
 2313 0004 5B69     		ldr	r3, [r3, #20]
 2314 0006 13F4803F 		tst	r3, #65536
 2315 000a 14D1     		bne	.L208
 2316              	.L202:
1358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2317              		.loc 1 1358 0
 2318 000c 194B     		ldr	r3, .L213
 2319 000e 5B6B     		ldr	r3, [r3, #52]
 2320 0010 13F0080F 		tst	r3, #8
 2321 0014 16D1     		bne	.L209
 2322              	.L203:
1368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2323              		.loc 1 1368 0
 2324 0016 174B     		ldr	r3, .L213
 2325 0018 5B6B     		ldr	r3, [r3, #52]
 2326 001a 13F0100F 		tst	r3, #16
 2327 001e 17D1     		bne	.L210
 2328              	.L204:
1377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2329              		.loc 1 1377 0
 2330 0020 144B     		ldr	r3, .L213
 2331 0022 5B6B     		ldr	r3, [r3, #52]
 2332 0024 13F0200F 		tst	r3, #32
 2333 0028 18D1     		bne	.L211
 2334              	.L205:
1385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 2335              		.loc 1 1385 0
 2336 002a 124B     		ldr	r3, .L213
 2337 002c 5B6B     		ldr	r3, [r3, #52]
 2338 002e 13F0400F 		tst	r3, #64
 2339 0032 19D1     		bne	.L212
 2340              	.L201:
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2341              		.loc 1 1393 0
ARM GAS  /tmp/ccSWp2BP.s 			page 75


 2342 0034 08BD     		pop	{r3, pc}
 2343              	.L208:
1351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2344              		.loc 1 1351 0
 2345 0036 FFF7FEFF 		bl	HAL_PWR_PVDCallback
 2346              	.LVL155:
1354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2347              		.loc 1 1354 0
 2348 003a 0E4B     		ldr	r3, .L213
 2349 003c 4FF48032 		mov	r2, #65536
 2350 0040 5A61     		str	r2, [r3, #20]
 2351 0042 E3E7     		b	.L202
 2352              	.L209:
1361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2353              		.loc 1 1361 0
 2354 0044 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
 2355              	.LVL156:
1364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2356              		.loc 1 1364 0
 2357 0048 0A4B     		ldr	r3, .L213
 2358 004a 0822     		movs	r2, #8
 2359 004c 5A63     		str	r2, [r3, #52]
 2360 004e E2E7     		b	.L203
 2361              	.L210:
1371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2362              		.loc 1 1371 0
 2363 0050 FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
 2364              	.LVL157:
1374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2365              		.loc 1 1374 0
 2366 0054 074B     		ldr	r3, .L213
 2367 0056 1022     		movs	r2, #16
 2368 0058 5A63     		str	r2, [r3, #52]
 2369 005a E1E7     		b	.L204
 2370              	.L211:
1380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2371              		.loc 1 1380 0
 2372 005c FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
 2373              	.LVL158:
1383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2374              		.loc 1 1383 0
 2375 0060 044B     		ldr	r3, .L213
 2376 0062 2022     		movs	r2, #32
 2377 0064 5A63     		str	r2, [r3, #52]
 2378 0066 E0E7     		b	.L205
 2379              	.L212:
1388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2380              		.loc 1 1388 0
 2381 0068 FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
 2382              	.LVL159:
1391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 2383              		.loc 1 1391 0
 2384 006c 014B     		ldr	r3, .L213
 2385 006e 4022     		movs	r2, #64
 2386 0070 5A63     		str	r2, [r3, #52]
1393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 2387              		.loc 1 1393 0
ARM GAS  /tmp/ccSWp2BP.s 			page 76


 2388 0072 DFE7     		b	.L201
 2389              	.L214:
 2390              		.align	2
 2391              	.L213:
 2392 0074 00040140 		.word	1073808384
 2393              		.cfi_endproc
 2394              	.LFE156:
 2396              		.text
 2397              	.Letext0:
 2398              		.file 3 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2399              		.file 4 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2400              		.file 5 "../../core/ST/CMSIS/Include/core_cm4.h"
 2401              		.file 6 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2402              		.file 7 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 2403              		.file 8 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2404              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2405              		.file 10 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2406              		.file 11 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
ARM GAS  /tmp/ccSWp2BP.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_pwr_ex.c
     /tmp/ccSWp2BP.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/ccSWp2BP.s:25     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/ccSWp2BP.s:42     .text.HAL_PWREx_GetVoltageRange:000000000000000c $d
     /tmp/ccSWp2BP.s:47     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/ccSWp2BP.s:54     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/ccSWp2BP.s:152    .text.HAL_PWREx_ControlVoltageScaling:0000000000000084 $d
     /tmp/ccSWp2BP.s:159    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/ccSWp2BP.s:166    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/ccSWp2BP.s:190    .text.HAL_PWREx_EnableBatteryCharging:0000000000000018 $d
     /tmp/ccSWp2BP.s:195    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/ccSWp2BP.s:202    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/ccSWp2BP.s:219    .text.HAL_PWREx_DisableBatteryCharging:000000000000000c $d
     /tmp/ccSWp2BP.s:224    .text.HAL_PWREx_EnableVddUSB:0000000000000000 $t
     /tmp/ccSWp2BP.s:231    .text.HAL_PWREx_EnableVddUSB:0000000000000000 HAL_PWREx_EnableVddUSB
     /tmp/ccSWp2BP.s:248    .text.HAL_PWREx_EnableVddUSB:000000000000000c $d
     /tmp/ccSWp2BP.s:253    .text.HAL_PWREx_DisableVddUSB:0000000000000000 $t
     /tmp/ccSWp2BP.s:260    .text.HAL_PWREx_DisableVddUSB:0000000000000000 HAL_PWREx_DisableVddUSB
     /tmp/ccSWp2BP.s:277    .text.HAL_PWREx_DisableVddUSB:000000000000000c $d
     /tmp/ccSWp2BP.s:282    .text.HAL_PWREx_EnableVddIO2:0000000000000000 $t
     /tmp/ccSWp2BP.s:289    .text.HAL_PWREx_EnableVddIO2:0000000000000000 HAL_PWREx_EnableVddIO2
     /tmp/ccSWp2BP.s:306    .text.HAL_PWREx_EnableVddIO2:000000000000000c $d
     /tmp/ccSWp2BP.s:311    .text.HAL_PWREx_DisableVddIO2:0000000000000000 $t
     /tmp/ccSWp2BP.s:318    .text.HAL_PWREx_DisableVddIO2:0000000000000000 HAL_PWREx_DisableVddIO2
     /tmp/ccSWp2BP.s:335    .text.HAL_PWREx_DisableVddIO2:000000000000000c $d
     /tmp/ccSWp2BP.s:340    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccSWp2BP.s:347    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/ccSWp2BP.s:364    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000000c $d
     /tmp/ccSWp2BP.s:369    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/ccSWp2BP.s:376    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/ccSWp2BP.s:393    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000000c $d
     /tmp/ccSWp2BP.s:398    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/ccSWp2BP.s:405    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/ccSWp2BP.s:418    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000008 $d
     /tmp/ccSWp2BP.s:598    .text.HAL_PWREx_EnableGPIOPullUp:00000000000000e4 $d
     /tmp/ccSWp2BP.s:603    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/ccSWp2BP.s:610    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/ccSWp2BP.s:623    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000008 $d
     /tmp/ccSWp2BP.s:762    .text.HAL_PWREx_DisableGPIOPullUp:00000000000000a0 $d
     /tmp/ccSWp2BP.s:767    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/ccSWp2BP.s:774    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/ccSWp2BP.s:787    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000008 $d
     /tmp/ccSWp2BP.s:966    .text.HAL_PWREx_EnableGPIOPullDown:00000000000000e4 $d
     /tmp/ccSWp2BP.s:971    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/ccSWp2BP.s:978    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/ccSWp2BP.s:991    .text.HAL_PWREx_DisableGPIOPullDown:0000000000000008 $d
     /tmp/ccSWp2BP.s:1133   .text.HAL_PWREx_DisableGPIOPullDown:00000000000000a8 $d
     /tmp/ccSWp2BP.s:1138   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccSWp2BP.s:1145   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/ccSWp2BP.s:1162   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccSWp2BP.s:1167   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/ccSWp2BP.s:1174   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
     /tmp/ccSWp2BP.s:1191   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000000c $d
     /tmp/ccSWp2BP.s:1196   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccSWp2BP.s:1203   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/ccSWp2BP.s:1220   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000000c $d
ARM GAS  /tmp/ccSWp2BP.s 			page 78


     /tmp/ccSWp2BP.s:1225   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/ccSWp2BP.s:1232   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/ccSWp2BP.s:1249   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000000c $d
     /tmp/ccSWp2BP.s:1254   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
     /tmp/ccSWp2BP.s:1261   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
     /tmp/ccSWp2BP.s:1278   .text.HAL_PWREx_EnablePVM1:000000000000000c $d
     /tmp/ccSWp2BP.s:1283   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
     /tmp/ccSWp2BP.s:1290   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
     /tmp/ccSWp2BP.s:1307   .text.HAL_PWREx_DisablePVM1:000000000000000c $d
     /tmp/ccSWp2BP.s:1312   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/ccSWp2BP.s:1319   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/ccSWp2BP.s:1336   .text.HAL_PWREx_EnablePVM2:000000000000000c $d
     /tmp/ccSWp2BP.s:1341   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/ccSWp2BP.s:1348   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/ccSWp2BP.s:1365   .text.HAL_PWREx_DisablePVM2:000000000000000c $d
     /tmp/ccSWp2BP.s:1370   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/ccSWp2BP.s:1377   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/ccSWp2BP.s:1394   .text.HAL_PWREx_EnablePVM3:000000000000000c $d
     /tmp/ccSWp2BP.s:1399   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/ccSWp2BP.s:1406   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/ccSWp2BP.s:1423   .text.HAL_PWREx_DisablePVM3:000000000000000c $d
     /tmp/ccSWp2BP.s:1428   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/ccSWp2BP.s:1435   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/ccSWp2BP.s:1452   .text.HAL_PWREx_EnablePVM4:000000000000000c $d
     /tmp/ccSWp2BP.s:1457   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/ccSWp2BP.s:1464   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/ccSWp2BP.s:1481   .text.HAL_PWREx_DisablePVM4:000000000000000c $d
     /tmp/ccSWp2BP.s:1486   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/ccSWp2BP.s:1493   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/ccSWp2BP.s:1790   .text.HAL_PWREx_ConfigPVM:00000000000001e8 $d
     /tmp/ccSWp2BP.s:1795   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/ccSWp2BP.s:1802   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/ccSWp2BP.s:1819   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000000c $d
     /tmp/ccSWp2BP.s:1824   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/ccSWp2BP.s:1831   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/ccSWp2BP.s:1886   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000044 $d
     /tmp/ccSWp2BP.s:1893   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/ccSWp2BP.s:1900   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/ccSWp2BP.s:1976   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000030 $d
     /tmp/ccSWp2BP.s:1984   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/ccSWp2BP.s:1991   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/ccSWp2BP.s:2067   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000034 $d
     /tmp/ccSWp2BP.s:2075   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 $t
     /tmp/ccSWp2BP.s:2082   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 HAL_PWREx_EnterSTOP2Mode
     /tmp/ccSWp2BP.s:2158   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000034 $d
     /tmp/ccSWp2BP.s:2166   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/ccSWp2BP.s:2173   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/ccSWp2BP.s:2207   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000001c $d
     /tmp/ccSWp2BP.s:2213   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
     /tmp/ccSWp2BP.s:2220   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
     /tmp/ccSWp2BP.s:2233   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/ccSWp2BP.s:2240   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/ccSWp2BP.s:2253   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/ccSWp2BP.s:2260   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
     /tmp/ccSWp2BP.s:2273   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
     /tmp/ccSWp2BP.s:2280   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/ccSWp2BP.s:2293   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
ARM GAS  /tmp/ccSWp2BP.s 			page 79


     /tmp/ccSWp2BP.s:2300   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/ccSWp2BP.s:2392   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000074 $d
     /tmp/ccSWp2BP.s:427    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000011 $d
     /tmp/ccSWp2BP.s:427    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000012 $t
     /tmp/ccSWp2BP.s:632    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000011 $d
     /tmp/ccSWp2BP.s:632    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000012 $t
     /tmp/ccSWp2BP.s:796    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000011 $d
     /tmp/ccSWp2BP.s:796    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000012 $t
     /tmp/ccSWp2BP.s:1000   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000011 $d
     /tmp/ccSWp2BP.s:1000   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000012 $t

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
