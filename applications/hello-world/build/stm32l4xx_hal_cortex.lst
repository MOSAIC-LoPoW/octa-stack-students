ARM GAS  /tmp/ccSVWazR.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_NVIC_SetPriorityGrouping
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_NVIC_SetPriorityGrouping:
  26              	.LFB123:
  27              		.file 1 "../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c"
   1:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
   2:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  11:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  12:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  13:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  16:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  17:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  19:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  20:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  23:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  24:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  25:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  26:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  27:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  28:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  29:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  30:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  31:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
ARM GAS  /tmp/ccSVWazR.s 			page 2


  32:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  33:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  34:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  35:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  36:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  37:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  38:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  39:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  40:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  41:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  42:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  43:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  44:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  45:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  46:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  47:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  48:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  49:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  50:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  51:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  52:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  53:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  54:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  55:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  56:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  57:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  58:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  59:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  60:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  61:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  62:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  63:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  64:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  65:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  66:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  67:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  68:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  69:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  70:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
  71:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  72:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  73:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  74:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  75:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 4 bi
  76:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  77:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  78:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 3 bi
  79:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  80:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  81:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 2 bi
  82:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  83:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  84:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 1 bi
  85:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  86:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
  87:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 0 bi
  88:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
ARM GAS  /tmp/ccSVWazR.s 			page 3


  89:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  90:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  91:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @attention
  92:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  93:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  94:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  95:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  96:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  97:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  98:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  99:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 100:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 101:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 102:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 103:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 104:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      without specific prior written permission.
 105:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 106:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 107:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 108:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 109:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 110:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 111:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 112:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 113:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 114:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 115:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 116:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 117:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 118:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 119:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 120:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 121:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 122:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 123:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 124:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 125:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 126:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 127:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 128:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 129:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 130:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 131:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 132:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 133:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 134:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 135:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 136:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 137:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 138:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 139:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 140:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 141:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 142:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 143:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 144:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 145:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
ARM GAS  /tmp/ccSVWazR.s 			page 4


 146:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 147:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 148:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 149:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 150:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 151:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 152:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 153:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 154:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 155:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 156:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 157:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 158:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 159:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 160:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 161:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 162:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 163:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 164:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 165:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 166:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 167:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 168:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 169:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 170:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 171:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 172:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 173:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 174:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 175:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 176:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 177:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 178:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 179:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 180:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 181:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB46:
  35              	.LBB47:
  36              		.file 2 "../../core/ST/CMSIS/Include/core_cm4.h"
   1:../../core/ST/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../../core/ST/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../../core/ST/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../../core/ST/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:../../core/ST/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:../../core/ST/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../../core/ST/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../core/ST/CMSIS/Include/core_cm4.h **** 
   9:../../core/ST/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:../../core/ST/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:../../core/ST/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:../../core/ST/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
ARM GAS  /tmp/ccSVWazR.s 			page 5


  13:../../core/ST/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:../../core/ST/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../core/ST/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../core/ST/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:../../core/ST/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../core/ST/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:../../core/ST/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:../../core/ST/CMSIS/Include/core_cm4.h ****    *
  21:../../core/ST/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../core/ST/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../core/ST/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../core/ST/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../core/ST/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../core/ST/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../core/ST/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../core/ST/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../core/ST/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../core/ST/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../core/ST/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../core/ST/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:../../core/ST/CMSIS/Include/core_cm4.h **** 
  34:../../core/ST/CMSIS/Include/core_cm4.h **** 
  35:../../core/ST/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:../../core/ST/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../../core/ST/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
  40:../../core/ST/CMSIS/Include/core_cm4.h **** 
  41:../../core/ST/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:../../core/ST/CMSIS/Include/core_cm4.h **** 
  44:../../core/ST/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:../../core/ST/CMSIS/Include/core_cm4.h **** 
  46:../../core/ST/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:../../core/ST/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
  49:../../core/ST/CMSIS/Include/core_cm4.h **** 
  50:../../core/ST/CMSIS/Include/core_cm4.h **** /**
  51:../../core/ST/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:../../core/ST/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:../../core/ST/CMSIS/Include/core_cm4.h **** 
  54:../../core/ST/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:../../core/ST/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:../../core/ST/CMSIS/Include/core_cm4.h **** 
  57:../../core/ST/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:../../core/ST/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:../../core/ST/CMSIS/Include/core_cm4.h **** 
  60:../../core/ST/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:../../core/ST/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:../../core/ST/CMSIS/Include/core_cm4.h ****  */
  63:../../core/ST/CMSIS/Include/core_cm4.h **** 
  64:../../core/ST/CMSIS/Include/core_cm4.h **** 
  65:../../core/ST/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:../../core/ST/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:../../core/ST/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:../../core/ST/CMSIS/Include/core_cm4.h **** /**
  69:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
ARM GAS  /tmp/ccSVWazR.s 			page 6


  70:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
  71:../../core/ST/CMSIS/Include/core_cm4.h ****  */
  72:../../core/ST/CMSIS/Include/core_cm4.h **** 
  73:../../core/ST/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:../../core/ST/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:../../core/ST/CMSIS/Include/core_cm4.h **** 
  79:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:../../core/ST/CMSIS/Include/core_cm4.h **** 
  81:../../core/ST/CMSIS/Include/core_cm4.h **** 
  82:../../core/ST/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:../../core/ST/CMSIS/Include/core_cm4.h **** 
  87:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:../../core/ST/CMSIS/Include/core_cm4.h **** 
  92:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:../../core/ST/CMSIS/Include/core_cm4.h **** 
  97:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:../../core/ST/CMSIS/Include/core_cm4.h **** 
 102:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:../../core/ST/CMSIS/Include/core_cm4.h **** 
 106:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:../../core/ST/CMSIS/Include/core_cm4.h **** 
 111:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __packed
 113:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:../../core/ST/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:../../core/ST/CMSIS/Include/core_cm4.h **** 
 117:../../core/ST/CMSIS/Include/core_cm4.h **** #else
 118:../../core/ST/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 120:../../core/ST/CMSIS/Include/core_cm4.h **** 
 121:../../core/ST/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:../../core/ST/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:../../core/ST/CMSIS/Include/core_cm4.h **** */
 124:../../core/ST/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
ARM GAS  /tmp/ccSVWazR.s 			page 7


 127:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 129:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 132:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 133:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 135:../../core/ST/CMSIS/Include/core_cm4.h **** 
 136:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 141:../../core/ST/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 144:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 145:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 147:../../core/ST/CMSIS/Include/core_cm4.h **** 
 148:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 153:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 156:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 157:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 159:../../core/ST/CMSIS/Include/core_cm4.h **** 
 160:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 165:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 168:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 169:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 171:../../core/ST/CMSIS/Include/core_cm4.h **** 
 172:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 177:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 180:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 181:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 183:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 8


 184:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:../../core/ST/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 189:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 192:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 193:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 195:../../core/ST/CMSIS/Include/core_cm4.h **** 
 196:../../core/ST/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:../../core/ST/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:../../core/ST/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:../../core/ST/CMSIS/Include/core_cm4.h ****     #else
 201:../../core/ST/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:../../core/ST/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:../../core/ST/CMSIS/Include/core_cm4.h ****     #endif
 204:../../core/ST/CMSIS/Include/core_cm4.h ****   #else
 205:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 207:../../core/ST/CMSIS/Include/core_cm4.h **** 
 208:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 209:../../core/ST/CMSIS/Include/core_cm4.h **** 
 210:../../core/ST/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:../../core/ST/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:../../core/ST/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:../../core/ST/CMSIS/Include/core_cm4.h **** 
 214:../../core/ST/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:../../core/ST/CMSIS/Include/core_cm4.h **** }
 216:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 217:../../core/ST/CMSIS/Include/core_cm4.h **** 
 218:../../core/ST/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:../../core/ST/CMSIS/Include/core_cm4.h **** 
 220:../../core/ST/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:../../core/ST/CMSIS/Include/core_cm4.h **** 
 222:../../core/ST/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:../../core/ST/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:../../core/ST/CMSIS/Include/core_cm4.h **** 
 225:../../core/ST/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:../../core/ST/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 228:../../core/ST/CMSIS/Include/core_cm4.h **** 
 229:../../core/ST/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 230:../../core/ST/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:../../core/ST/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:../../core/ST/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 235:../../core/ST/CMSIS/Include/core_cm4.h **** 
 236:../../core/ST/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:../../core/ST/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 240:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 9


 241:../../core/ST/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:../../core/ST/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 245:../../core/ST/CMSIS/Include/core_cm4.h **** 
 246:../../core/ST/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:../../core/ST/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 250:../../core/ST/CMSIS/Include/core_cm4.h **** 
 251:../../core/ST/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:../../core/ST/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:../../core/ST/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:../../core/ST/CMSIS/Include/core_cm4.h ****   #endif
 255:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 256:../../core/ST/CMSIS/Include/core_cm4.h **** 
 257:../../core/ST/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 259:../../core/ST/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:../../core/ST/CMSIS/Include/core_cm4.h **** 
 261:../../core/ST/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:../../core/ST/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:../../core/ST/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:../../core/ST/CMSIS/Include/core_cm4.h **** */
 265:../../core/ST/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:../../core/ST/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:../../core/ST/CMSIS/Include/core_cm4.h **** #else
 268:../../core/ST/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
 270:../../core/ST/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:../../core/ST/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:../../core/ST/CMSIS/Include/core_cm4.h **** 
 273:../../core/ST/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:../../core/ST/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:../../core/ST/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:../../core/ST/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:../../core/ST/CMSIS/Include/core_cm4.h **** 
 278:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:../../core/ST/CMSIS/Include/core_cm4.h **** 
 280:../../core/ST/CMSIS/Include/core_cm4.h **** 
 281:../../core/ST/CMSIS/Include/core_cm4.h **** 
 282:../../core/ST/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:../../core/ST/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:../../core/ST/CMSIS/Include/core_cm4.h ****   Core Register contain:
 285:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core Register
 286:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 287:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:../../core/ST/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 294:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:../../core/ST/CMSIS/Include/core_cm4.h **** */
 297:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 10


 298:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 299:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 303:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 304:../../core/ST/CMSIS/Include/core_cm4.h **** 
 305:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 306:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 308:../../core/ST/CMSIS/Include/core_cm4.h **** typedef union
 309:../../core/ST/CMSIS/Include/core_cm4.h **** {
 310:../../core/ST/CMSIS/Include/core_cm4.h ****   struct
 311:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 312:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:../../core/ST/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:../../core/ST/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:../../core/ST/CMSIS/Include/core_cm4.h **** 
 324:../../core/ST/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:../../core/ST/CMSIS/Include/core_cm4.h **** 
 328:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:../../core/ST/CMSIS/Include/core_cm4.h **** 
 331:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:../../core/ST/CMSIS/Include/core_cm4.h **** 
 334:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:../../core/ST/CMSIS/Include/core_cm4.h **** 
 337:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:../../core/ST/CMSIS/Include/core_cm4.h **** 
 340:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:../../core/ST/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:../../core/ST/CMSIS/Include/core_cm4.h **** 
 343:../../core/ST/CMSIS/Include/core_cm4.h **** 
 344:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 345:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 347:../../core/ST/CMSIS/Include/core_cm4.h **** typedef union
 348:../../core/ST/CMSIS/Include/core_cm4.h **** {
 349:../../core/ST/CMSIS/Include/core_cm4.h ****   struct
 350:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 351:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:../../core/ST/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
ARM GAS  /tmp/ccSVWazR.s 			page 11


 355:../../core/ST/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:../../core/ST/CMSIS/Include/core_cm4.h **** 
 357:../../core/ST/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:../../core/ST/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:../../core/ST/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:../../core/ST/CMSIS/Include/core_cm4.h **** 
 361:../../core/ST/CMSIS/Include/core_cm4.h **** 
 362:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 363:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 365:../../core/ST/CMSIS/Include/core_cm4.h **** typedef union
 366:../../core/ST/CMSIS/Include/core_cm4.h **** {
 367:../../core/ST/CMSIS/Include/core_cm4.h ****   struct
 368:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 369:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:../../core/ST/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:../../core/ST/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:../../core/ST/CMSIS/Include/core_cm4.h **** 
 384:../../core/ST/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:../../core/ST/CMSIS/Include/core_cm4.h **** 
 388:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:../../core/ST/CMSIS/Include/core_cm4.h **** 
 391:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:../../core/ST/CMSIS/Include/core_cm4.h **** 
 394:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:../../core/ST/CMSIS/Include/core_cm4.h **** 
 397:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:../../core/ST/CMSIS/Include/core_cm4.h **** 
 400:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:../../core/ST/CMSIS/Include/core_cm4.h **** 
 403:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:../../core/ST/CMSIS/Include/core_cm4.h **** 
 406:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:../../core/ST/CMSIS/Include/core_cm4.h **** 
 409:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:../../core/ST/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 12


 412:../../core/ST/CMSIS/Include/core_cm4.h **** 
 413:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 414:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 416:../../core/ST/CMSIS/Include/core_cm4.h **** typedef union
 417:../../core/ST/CMSIS/Include/core_cm4.h **** {
 418:../../core/ST/CMSIS/Include/core_cm4.h ****   struct
 419:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 420:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:../../core/ST/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:../../core/ST/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:../../core/ST/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:../../core/ST/CMSIS/Include/core_cm4.h **** 
 428:../../core/ST/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:../../core/ST/CMSIS/Include/core_cm4.h **** 
 432:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:../../core/ST/CMSIS/Include/core_cm4.h **** 
 435:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:../../core/ST/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:../../core/ST/CMSIS/Include/core_cm4.h **** 
 438:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:../../core/ST/CMSIS/Include/core_cm4.h **** 
 440:../../core/ST/CMSIS/Include/core_cm4.h **** 
 441:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 442:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 446:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 447:../../core/ST/CMSIS/Include/core_cm4.h **** 
 448:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 449:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 451:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 452:../../core/ST/CMSIS/Include/core_cm4.h **** {
 453:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:../../core/ST/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:../../core/ST/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:../../core/ST/CMSIS/Include/core_cm4.h **** 
 468:../../core/ST/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
ARM GAS  /tmp/ccSVWazR.s 			page 13


 469:../../core/ST/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:../../core/ST/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:../../core/ST/CMSIS/Include/core_cm4.h **** 
 472:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:../../core/ST/CMSIS/Include/core_cm4.h **** 
 474:../../core/ST/CMSIS/Include/core_cm4.h **** 
 475:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 476:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 480:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 481:../../core/ST/CMSIS/Include/core_cm4.h **** 
 482:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 483:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 485:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 486:../../core/ST/CMSIS/Include/core_cm4.h **** {
 487:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:../../core/ST/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:../../core/ST/CMSIS/Include/core_cm4.h **** 
 510:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:../../core/ST/CMSIS/Include/core_cm4.h **** 
 514:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:../../core/ST/CMSIS/Include/core_cm4.h **** 
 517:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:../../core/ST/CMSIS/Include/core_cm4.h **** 
 520:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:../../core/ST/CMSIS/Include/core_cm4.h **** 
 523:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 14


 526:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:../../core/ST/CMSIS/Include/core_cm4.h **** 
 530:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:../../core/ST/CMSIS/Include/core_cm4.h **** 
 533:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:../../core/ST/CMSIS/Include/core_cm4.h **** 
 536:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:../../core/ST/CMSIS/Include/core_cm4.h **** 
 539:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:../../core/ST/CMSIS/Include/core_cm4.h **** 
 542:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:../../core/ST/CMSIS/Include/core_cm4.h **** 
 545:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:../../core/ST/CMSIS/Include/core_cm4.h **** 
 548:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:../../core/ST/CMSIS/Include/core_cm4.h **** 
 551:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:../../core/ST/CMSIS/Include/core_cm4.h **** 
 554:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:../../core/ST/CMSIS/Include/core_cm4.h **** 
 557:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:../../core/ST/CMSIS/Include/core_cm4.h **** 
 561:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:../../core/ST/CMSIS/Include/core_cm4.h **** 
 565:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:../../core/ST/CMSIS/Include/core_cm4.h **** 
 568:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:../../core/ST/CMSIS/Include/core_cm4.h **** 
 571:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:../../core/ST/CMSIS/Include/core_cm4.h **** 
 574:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:../../core/ST/CMSIS/Include/core_cm4.h **** 
 577:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:../../core/ST/CMSIS/Include/core_cm4.h **** 
 580:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 15


 583:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:../../core/ST/CMSIS/Include/core_cm4.h **** 
 587:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:../../core/ST/CMSIS/Include/core_cm4.h **** 
 590:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:../../core/ST/CMSIS/Include/core_cm4.h **** 
 593:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:../../core/ST/CMSIS/Include/core_cm4.h **** 
 597:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:../../core/ST/CMSIS/Include/core_cm4.h **** 
 600:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:../../core/ST/CMSIS/Include/core_cm4.h **** 
 603:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:../../core/ST/CMSIS/Include/core_cm4.h **** 
 606:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:../../core/ST/CMSIS/Include/core_cm4.h **** 
 609:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:../../core/ST/CMSIS/Include/core_cm4.h **** 
 612:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:../../core/ST/CMSIS/Include/core_cm4.h **** 
 616:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:../../core/ST/CMSIS/Include/core_cm4.h **** 
 619:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:../../core/ST/CMSIS/Include/core_cm4.h **** 
 622:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:../../core/ST/CMSIS/Include/core_cm4.h **** 
 625:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:../../core/ST/CMSIS/Include/core_cm4.h **** 
 628:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:../../core/ST/CMSIS/Include/core_cm4.h **** 
 631:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:../../core/ST/CMSIS/Include/core_cm4.h **** 
 634:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:../../core/ST/CMSIS/Include/core_cm4.h **** 
 637:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 16


 640:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:../../core/ST/CMSIS/Include/core_cm4.h **** 
 643:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:../../core/ST/CMSIS/Include/core_cm4.h **** 
 646:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:../../core/ST/CMSIS/Include/core_cm4.h **** 
 649:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:../../core/ST/CMSIS/Include/core_cm4.h **** 
 652:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:../../core/ST/CMSIS/Include/core_cm4.h **** 
 655:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:../../core/ST/CMSIS/Include/core_cm4.h **** 
 659:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:../../core/ST/CMSIS/Include/core_cm4.h **** 
 662:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:../../core/ST/CMSIS/Include/core_cm4.h **** 
 665:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:../../core/ST/CMSIS/Include/core_cm4.h **** 
 669:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:../../core/ST/CMSIS/Include/core_cm4.h **** 
 672:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:../../core/ST/CMSIS/Include/core_cm4.h **** 
 675:../../core/ST/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:../../core/ST/CMSIS/Include/core_cm4.h **** 
 679:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:../../core/ST/CMSIS/Include/core_cm4.h **** 
 682:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:../../core/ST/CMSIS/Include/core_cm4.h **** 
 685:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:../../core/ST/CMSIS/Include/core_cm4.h **** 
 688:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:../../core/ST/CMSIS/Include/core_cm4.h **** 
 691:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:../../core/ST/CMSIS/Include/core_cm4.h **** 
 693:../../core/ST/CMSIS/Include/core_cm4.h **** 
 694:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 695:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
ARM GAS  /tmp/ccSVWazR.s 			page 17


 697:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 699:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 700:../../core/ST/CMSIS/Include/core_cm4.h **** 
 701:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 702:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 704:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 705:../../core/ST/CMSIS/Include/core_cm4.h **** {
 706:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:../../core/ST/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:../../core/ST/CMSIS/Include/core_cm4.h **** 
 711:../../core/ST/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:../../core/ST/CMSIS/Include/core_cm4.h **** 
 715:../../core/ST/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:../../core/ST/CMSIS/Include/core_cm4.h **** 
 719:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:../../core/ST/CMSIS/Include/core_cm4.h **** 
 722:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:../../core/ST/CMSIS/Include/core_cm4.h **** 
 725:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:../../core/ST/CMSIS/Include/core_cm4.h **** 
 728:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:../../core/ST/CMSIS/Include/core_cm4.h **** 
 731:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:../../core/ST/CMSIS/Include/core_cm4.h **** 
 733:../../core/ST/CMSIS/Include/core_cm4.h **** 
 734:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 735:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 739:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 740:../../core/ST/CMSIS/Include/core_cm4.h **** 
 741:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 742:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 744:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 745:../../core/ST/CMSIS/Include/core_cm4.h **** {
 746:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:../../core/ST/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:../../core/ST/CMSIS/Include/core_cm4.h **** 
 752:../../core/ST/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
ARM GAS  /tmp/ccSVWazR.s 			page 18


 754:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:../../core/ST/CMSIS/Include/core_cm4.h **** 
 756:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:../../core/ST/CMSIS/Include/core_cm4.h **** 
 759:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:../../core/ST/CMSIS/Include/core_cm4.h **** 
 762:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:../../core/ST/CMSIS/Include/core_cm4.h **** 
 765:../../core/ST/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:../../core/ST/CMSIS/Include/core_cm4.h **** 
 769:../../core/ST/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:../../core/ST/CMSIS/Include/core_cm4.h **** 
 773:../../core/ST/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:../../core/ST/CMSIS/Include/core_cm4.h **** 
 777:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:../../core/ST/CMSIS/Include/core_cm4.h **** 
 780:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:../../core/ST/CMSIS/Include/core_cm4.h **** 
 783:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:../../core/ST/CMSIS/Include/core_cm4.h **** 
 785:../../core/ST/CMSIS/Include/core_cm4.h **** 
 786:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 787:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 791:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 792:../../core/ST/CMSIS/Include/core_cm4.h **** 
 793:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 794:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 796:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 797:../../core/ST/CMSIS/Include/core_cm4.h **** {
 798:../../core/ST/CMSIS/Include/core_cm4.h ****   __OM  union
 799:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 800:../../core/ST/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:../../core/ST/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:../../core/ST/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:../../core/ST/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
ARM GAS  /tmp/ccSVWazR.s 			page 19


 811:../../core/ST/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:../../core/ST/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:../../core/ST/CMSIS/Include/core_cm4.h **** } ITM_Type;
 831:../../core/ST/CMSIS/Include/core_cm4.h **** 
 832:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:../../core/ST/CMSIS/Include/core_cm4.h **** 
 836:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:../../core/ST/CMSIS/Include/core_cm4.h **** 
 840:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:../../core/ST/CMSIS/Include/core_cm4.h **** 
 843:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:../../core/ST/CMSIS/Include/core_cm4.h **** 
 846:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:../../core/ST/CMSIS/Include/core_cm4.h **** 
 849:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:../../core/ST/CMSIS/Include/core_cm4.h **** 
 852:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:../../core/ST/CMSIS/Include/core_cm4.h **** 
 855:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:../../core/ST/CMSIS/Include/core_cm4.h **** 
 858:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:../../core/ST/CMSIS/Include/core_cm4.h **** 
 861:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:../../core/ST/CMSIS/Include/core_cm4.h **** 
 864:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 20


 868:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:../../core/ST/CMSIS/Include/core_cm4.h **** 
 872:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:../../core/ST/CMSIS/Include/core_cm4.h **** 
 876:../../core/ST/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../../core/ST/CMSIS/Include/core_cm4.h **** 
 880:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../../core/ST/CMSIS/Include/core_cm4.h **** 
 883:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../../core/ST/CMSIS/Include/core_cm4.h **** 
 886:../../core/ST/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../../core/ST/CMSIS/Include/core_cm4.h **** 
 888:../../core/ST/CMSIS/Include/core_cm4.h **** 
 889:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 890:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
 894:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 895:../../core/ST/CMSIS/Include/core_cm4.h **** 
 896:../../core/ST/CMSIS/Include/core_cm4.h **** /**
 897:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../../core/ST/CMSIS/Include/core_cm4.h ****  */
 899:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
 900:../../core/ST/CMSIS/Include/core_cm4.h **** {
 901:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../../core/ST/CMSIS/Include/core_cm4.h **** } DWT_Type;
ARM GAS  /tmp/ccSVWazR.s 			page 21


 925:../../core/ST/CMSIS/Include/core_cm4.h **** 
 926:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../../core/ST/CMSIS/Include/core_cm4.h **** 
 930:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../../core/ST/CMSIS/Include/core_cm4.h **** 
 933:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../../core/ST/CMSIS/Include/core_cm4.h **** 
 936:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../../core/ST/CMSIS/Include/core_cm4.h **** 
 939:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../../core/ST/CMSIS/Include/core_cm4.h **** 
 942:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../../core/ST/CMSIS/Include/core_cm4.h **** 
 945:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../../core/ST/CMSIS/Include/core_cm4.h **** 
 948:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../../core/ST/CMSIS/Include/core_cm4.h **** 
 951:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../../core/ST/CMSIS/Include/core_cm4.h **** 
 954:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../../core/ST/CMSIS/Include/core_cm4.h **** 
 957:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../../core/ST/CMSIS/Include/core_cm4.h **** 
 960:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../../core/ST/CMSIS/Include/core_cm4.h **** 
 963:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../../core/ST/CMSIS/Include/core_cm4.h **** 
 966:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../../core/ST/CMSIS/Include/core_cm4.h **** 
 969:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../../core/ST/CMSIS/Include/core_cm4.h **** 
 972:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../../core/ST/CMSIS/Include/core_cm4.h **** 
 975:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../../core/ST/CMSIS/Include/core_cm4.h **** 
 978:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../../core/ST/CMSIS/Include/core_cm4.h **** 
 981:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
ARM GAS  /tmp/ccSVWazR.s 			page 22


 982:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../../core/ST/CMSIS/Include/core_cm4.h **** 
 985:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../../core/ST/CMSIS/Include/core_cm4.h **** 
 989:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../../core/ST/CMSIS/Include/core_cm4.h **** 
 993:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../../core/ST/CMSIS/Include/core_cm4.h **** 
 997:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../../core/ST/CMSIS/Include/core_cm4.h **** 
1001:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../../core/ST/CMSIS/Include/core_cm4.h **** 
1005:../../core/ST/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../../core/ST/CMSIS/Include/core_cm4.h **** 
1009:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../../core/ST/CMSIS/Include/core_cm4.h **** 
1012:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../../core/ST/CMSIS/Include/core_cm4.h **** 
1015:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../../core/ST/CMSIS/Include/core_cm4.h **** 
1018:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../../core/ST/CMSIS/Include/core_cm4.h **** 
1021:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../../core/ST/CMSIS/Include/core_cm4.h **** 
1024:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../../core/ST/CMSIS/Include/core_cm4.h **** 
1027:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../../core/ST/CMSIS/Include/core_cm4.h **** 
1030:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../../core/ST/CMSIS/Include/core_cm4.h **** 
1033:../../core/ST/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../../core/ST/CMSIS/Include/core_cm4.h **** 
1035:../../core/ST/CMSIS/Include/core_cm4.h **** 
1036:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1037:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
ARM GAS  /tmp/ccSVWazR.s 			page 23


1039:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1041:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1042:../../core/ST/CMSIS/Include/core_cm4.h **** 
1043:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1044:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1046:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
1047:../../core/ST/CMSIS/Include/core_cm4.h **** {
1048:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../../core/ST/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:../../core/ST/CMSIS/Include/core_cm4.h **** 
1074:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../../core/ST/CMSIS/Include/core_cm4.h **** 
1078:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../../core/ST/CMSIS/Include/core_cm4.h **** 
1082:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../../core/ST/CMSIS/Include/core_cm4.h **** 
1086:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../../core/ST/CMSIS/Include/core_cm4.h **** 
1089:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../../core/ST/CMSIS/Include/core_cm4.h **** 
1092:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../../core/ST/CMSIS/Include/core_cm4.h **** 
1095:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
ARM GAS  /tmp/ccSVWazR.s 			page 24


1096:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../../core/ST/CMSIS/Include/core_cm4.h **** 
1099:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../../core/ST/CMSIS/Include/core_cm4.h **** 
1102:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:../../core/ST/CMSIS/Include/core_cm4.h **** 
1106:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../../core/ST/CMSIS/Include/core_cm4.h **** 
1110:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../../core/ST/CMSIS/Include/core_cm4.h **** 
1113:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../../core/ST/CMSIS/Include/core_cm4.h **** 
1116:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../../core/ST/CMSIS/Include/core_cm4.h **** 
1119:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../../core/ST/CMSIS/Include/core_cm4.h **** 
1122:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../../core/ST/CMSIS/Include/core_cm4.h **** 
1125:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../../core/ST/CMSIS/Include/core_cm4.h **** 
1128:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:../../core/ST/CMSIS/Include/core_cm4.h **** 
1132:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:../../core/ST/CMSIS/Include/core_cm4.h **** 
1136:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:../../core/ST/CMSIS/Include/core_cm4.h **** 
1139:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:../../core/ST/CMSIS/Include/core_cm4.h **** 
1142:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:../../core/ST/CMSIS/Include/core_cm4.h **** 
1145:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:../../core/ST/CMSIS/Include/core_cm4.h **** 
1148:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:../../core/ST/CMSIS/Include/core_cm4.h **** 
1151:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
ARM GAS  /tmp/ccSVWazR.s 			page 25


1153:../../core/ST/CMSIS/Include/core_cm4.h **** 
1154:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:../../core/ST/CMSIS/Include/core_cm4.h **** 
1158:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:../../core/ST/CMSIS/Include/core_cm4.h **** 
1162:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:../../core/ST/CMSIS/Include/core_cm4.h **** 
1166:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:../../core/ST/CMSIS/Include/core_cm4.h **** 
1169:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:../../core/ST/CMSIS/Include/core_cm4.h **** 
1172:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:../../core/ST/CMSIS/Include/core_cm4.h **** 
1175:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:../../core/ST/CMSIS/Include/core_cm4.h **** 
1178:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:../../core/ST/CMSIS/Include/core_cm4.h **** 
1181:../../core/ST/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:../../core/ST/CMSIS/Include/core_cm4.h **** 
1185:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:../../core/ST/CMSIS/Include/core_cm4.h **** 
1188:../../core/ST/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:../../core/ST/CMSIS/Include/core_cm4.h **** 
1190:../../core/ST/CMSIS/Include/core_cm4.h **** 
1191:../../core/ST/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1193:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1197:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1198:../../core/ST/CMSIS/Include/core_cm4.h **** 
1199:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1200:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1202:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
1203:../../core/ST/CMSIS/Include/core_cm4.h **** {
1204:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
ARM GAS  /tmp/ccSVWazR.s 			page 26


1210:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:../../core/ST/CMSIS/Include/core_cm4.h **** } MPU_Type;
1216:../../core/ST/CMSIS/Include/core_cm4.h **** 
1217:../../core/ST/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:../../core/ST/CMSIS/Include/core_cm4.h **** 
1221:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:../../core/ST/CMSIS/Include/core_cm4.h **** 
1224:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:../../core/ST/CMSIS/Include/core_cm4.h **** 
1227:../../core/ST/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:../../core/ST/CMSIS/Include/core_cm4.h **** 
1231:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:../../core/ST/CMSIS/Include/core_cm4.h **** 
1234:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:../../core/ST/CMSIS/Include/core_cm4.h **** 
1237:../../core/ST/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:../../core/ST/CMSIS/Include/core_cm4.h **** 
1241:../../core/ST/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:../../core/ST/CMSIS/Include/core_cm4.h **** 
1245:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:../../core/ST/CMSIS/Include/core_cm4.h **** 
1248:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:../../core/ST/CMSIS/Include/core_cm4.h **** 
1251:../../core/ST/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:../../core/ST/CMSIS/Include/core_cm4.h **** 
1255:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:../../core/ST/CMSIS/Include/core_cm4.h **** 
1258:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:../../core/ST/CMSIS/Include/core_cm4.h **** 
1261:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:../../core/ST/CMSIS/Include/core_cm4.h **** 
1264:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 27


1267:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:../../core/ST/CMSIS/Include/core_cm4.h **** 
1270:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:../../core/ST/CMSIS/Include/core_cm4.h **** 
1273:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:../../core/ST/CMSIS/Include/core_cm4.h **** 
1276:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:../../core/ST/CMSIS/Include/core_cm4.h **** 
1279:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:../../core/ST/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:../../core/ST/CMSIS/Include/core_cm4.h **** 
1282:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
1284:../../core/ST/CMSIS/Include/core_cm4.h **** 
1285:../../core/ST/CMSIS/Include/core_cm4.h **** 
1286:../../core/ST/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1288:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1292:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1293:../../core/ST/CMSIS/Include/core_cm4.h **** 
1294:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1295:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1297:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
1298:../../core/ST/CMSIS/Include/core_cm4.h **** {
1299:../../core/ST/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:../../core/ST/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:../../core/ST/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:../../core/ST/CMSIS/Include/core_cm4.h **** 
1307:../../core/ST/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:../../core/ST/CMSIS/Include/core_cm4.h **** 
1311:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:../../core/ST/CMSIS/Include/core_cm4.h **** 
1314:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:../../core/ST/CMSIS/Include/core_cm4.h **** 
1317:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:../../core/ST/CMSIS/Include/core_cm4.h **** 
1320:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:../../core/ST/CMSIS/Include/core_cm4.h **** 
1323:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
ARM GAS  /tmp/ccSVWazR.s 			page 28


1324:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:../../core/ST/CMSIS/Include/core_cm4.h **** 
1326:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:../../core/ST/CMSIS/Include/core_cm4.h **** 
1329:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:../../core/ST/CMSIS/Include/core_cm4.h **** 
1332:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:../../core/ST/CMSIS/Include/core_cm4.h **** 
1335:../../core/ST/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:../../core/ST/CMSIS/Include/core_cm4.h **** 
1339:../../core/ST/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:../../core/ST/CMSIS/Include/core_cm4.h **** 
1343:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:../../core/ST/CMSIS/Include/core_cm4.h **** 
1346:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:../../core/ST/CMSIS/Include/core_cm4.h **** 
1349:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:../../core/ST/CMSIS/Include/core_cm4.h **** 
1352:../../core/ST/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:../../core/ST/CMSIS/Include/core_cm4.h **** 
1356:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:../../core/ST/CMSIS/Include/core_cm4.h **** 
1359:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:../../core/ST/CMSIS/Include/core_cm4.h **** 
1362:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:../../core/ST/CMSIS/Include/core_cm4.h **** 
1365:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:../../core/ST/CMSIS/Include/core_cm4.h **** 
1368:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:../../core/ST/CMSIS/Include/core_cm4.h **** 
1371:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:../../core/ST/CMSIS/Include/core_cm4.h **** 
1374:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:../../core/ST/CMSIS/Include/core_cm4.h **** 
1377:../../core/ST/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 29


1381:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:../../core/ST/CMSIS/Include/core_cm4.h **** 
1384:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:../../core/ST/CMSIS/Include/core_cm4.h **** 
1387:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:../../core/ST/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:../../core/ST/CMSIS/Include/core_cm4.h **** 
1390:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
1392:../../core/ST/CMSIS/Include/core_cm4.h **** 
1393:../../core/ST/CMSIS/Include/core_cm4.h **** 
1394:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1395:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1399:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1400:../../core/ST/CMSIS/Include/core_cm4.h **** 
1401:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1402:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1404:../../core/ST/CMSIS/Include/core_cm4.h **** typedef struct
1405:../../core/ST/CMSIS/Include/core_cm4.h **** {
1406:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:../../core/ST/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:../../core/ST/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:../../core/ST/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:../../core/ST/CMSIS/Include/core_cm4.h **** 
1412:../../core/ST/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:../../core/ST/CMSIS/Include/core_cm4.h **** 
1416:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:../../core/ST/CMSIS/Include/core_cm4.h **** 
1419:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:../../core/ST/CMSIS/Include/core_cm4.h **** 
1422:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:../../core/ST/CMSIS/Include/core_cm4.h **** 
1425:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:../../core/ST/CMSIS/Include/core_cm4.h **** 
1428:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:../../core/ST/CMSIS/Include/core_cm4.h **** 
1431:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:../../core/ST/CMSIS/Include/core_cm4.h **** 
1434:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:../../core/ST/CMSIS/Include/core_cm4.h **** 
1437:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
ARM GAS  /tmp/ccSVWazR.s 			page 30


1438:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:../../core/ST/CMSIS/Include/core_cm4.h **** 
1440:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:../../core/ST/CMSIS/Include/core_cm4.h **** 
1443:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:../../core/ST/CMSIS/Include/core_cm4.h **** 
1446:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:../../core/ST/CMSIS/Include/core_cm4.h **** 
1449:../../core/ST/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:../../core/ST/CMSIS/Include/core_cm4.h **** 
1453:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:../../core/ST/CMSIS/Include/core_cm4.h **** 
1456:../../core/ST/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:../../core/ST/CMSIS/Include/core_cm4.h **** 
1460:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:../../core/ST/CMSIS/Include/core_cm4.h **** 
1463:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:../../core/ST/CMSIS/Include/core_cm4.h **** 
1466:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:../../core/ST/CMSIS/Include/core_cm4.h **** 
1469:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:../../core/ST/CMSIS/Include/core_cm4.h **** 
1472:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:../../core/ST/CMSIS/Include/core_cm4.h **** 
1475:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:../../core/ST/CMSIS/Include/core_cm4.h **** 
1478:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:../../core/ST/CMSIS/Include/core_cm4.h **** 
1481:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:../../core/ST/CMSIS/Include/core_cm4.h **** 
1484:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:../../core/ST/CMSIS/Include/core_cm4.h **** 
1487:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:../../core/ST/CMSIS/Include/core_cm4.h **** 
1490:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:../../core/ST/CMSIS/Include/core_cm4.h **** 
1493:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
ARM GAS  /tmp/ccSVWazR.s 			page 31


1495:../../core/ST/CMSIS/Include/core_cm4.h **** 
1496:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:../../core/ST/CMSIS/Include/core_cm4.h **** 
1498:../../core/ST/CMSIS/Include/core_cm4.h **** 
1499:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1500:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1504:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1505:../../core/ST/CMSIS/Include/core_cm4.h **** 
1506:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1507:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:../../core/ST/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:../../core/ST/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:../../core/ST/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:../../core/ST/CMSIS/Include/core_cm4.h **** */
1512:../../core/ST/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:../../core/ST/CMSIS/Include/core_cm4.h **** 
1514:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1515:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:../../core/ST/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:../../core/ST/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:../../core/ST/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:../../core/ST/CMSIS/Include/core_cm4.h **** */
1520:../../core/ST/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:../../core/ST/CMSIS/Include/core_cm4.h **** 
1522:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:../../core/ST/CMSIS/Include/core_cm4.h **** 
1524:../../core/ST/CMSIS/Include/core_cm4.h **** 
1525:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1526:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1530:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1531:../../core/ST/CMSIS/Include/core_cm4.h **** 
1532:../../core/ST/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:../../core/ST/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:../../core/ST/CMSIS/Include/core_cm4.h **** 
1542:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:../../core/ST/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:../../core/ST/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:../../core/ST/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:../../core/ST/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:../../core/ST/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:../../core/ST/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:../../core/ST/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:../../core/ST/CMSIS/Include/core_cm4.h **** 
1551:../../core/ST/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
ARM GAS  /tmp/ccSVWazR.s 			page 32


1552:../../core/ST/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:../../core/ST/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
1555:../../core/ST/CMSIS/Include/core_cm4.h **** 
1556:../../core/ST/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:../../core/ST/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:../../core/ST/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:../../core/ST/CMSIS/Include/core_cm4.h **** #endif
1560:../../core/ST/CMSIS/Include/core_cm4.h **** 
1561:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} */
1562:../../core/ST/CMSIS/Include/core_cm4.h **** 
1563:../../core/ST/CMSIS/Include/core_cm4.h **** 
1564:../../core/ST/CMSIS/Include/core_cm4.h **** 
1565:../../core/ST/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:../../core/ST/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:../../core/ST/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:../../core/ST/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1572:../../core/ST/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1574:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:../../core/ST/CMSIS/Include/core_cm4.h **** */
1576:../../core/ST/CMSIS/Include/core_cm4.h **** 
1577:../../core/ST/CMSIS/Include/core_cm4.h **** 
1578:../../core/ST/CMSIS/Include/core_cm4.h **** 
1579:../../core/ST/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1581:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1585:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1586:../../core/ST/CMSIS/Include/core_cm4.h **** 
1587:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1588:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:../../core/ST/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:../../core/ST/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:../../core/ST/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:../../core/ST/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1596:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:../../core/ST/CMSIS/Include/core_cm4.h **** {
1598:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1599:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:../../core/ST/CMSIS/Include/core_cm4.h **** 
1601:../../core/ST/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  37              		.loc 2 1601 0
  38 0000 074A     		ldr	r2, .L2
  39 0002 D368     		ldr	r3, [r2, #12]
  40              	.LVL1:
1602:../../core/ST/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  41              		.loc 2 1602 0
  42 0004 23F4E063 		bic	r3, r3, #1792
ARM GAS  /tmp/ccSVWazR.s 			page 33


  43              	.LVL2:
  44 0008 1B04     		lsls	r3, r3, #16
  45 000a 1B0C     		lsrs	r3, r3, #16
  46              	.LVL3:
1603:../../core/ST/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:../../core/ST/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:../../core/ST/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  47              		.loc 2 1605 0
  48 000c 0002     		lsls	r0, r0, #8
  49              	.LVL4:
  50 000e 00F4E060 		and	r0, r0, #1792
1604:../../core/ST/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  51              		.loc 2 1604 0
  52 0012 1843     		orrs	r0, r0, r3
1603:../../core/ST/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  53              		.loc 2 1603 0
  54 0014 40F0BF60 		orr	r0, r0, #100139008
  55 0018 40F40030 		orr	r0, r0, #131072
  56              	.LVL5:
1606:../../core/ST/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  57              		.loc 2 1606 0
  58 001c D060     		str	r0, [r2, #12]
  59              	.LVL6:
  60              	.LBE47:
  61              	.LBE46:
 182:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 183:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 184:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 185:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 186:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 187:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
  62              		.loc 1 187 0
  63 001e 7047     		bx	lr
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0020 00ED00E0 		.word	-536810240
  68              		.cfi_endproc
  69              	.LFE123:
  71              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  72              		.align	1
  73              		.global	HAL_NVIC_SetPriority
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	HAL_NVIC_SetPriority:
  80              	.LFB124:
 188:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 189:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 190:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 191:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 192:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 193:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 194:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 195:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 196:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
ARM GAS  /tmp/ccSVWazR.s 			page 34


 197:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 198:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 199:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 200:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 201:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 202:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 203:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
  81              		.loc 1 203 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL7:
  87 0000 30B4     		push	{r4, r5}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 5, -4
  92              	.LVL8:
  93              	.LBB48:
  94              	.LBB49:
1607:../../core/ST/CMSIS/Include/core_cm4.h **** }
1608:../../core/ST/CMSIS/Include/core_cm4.h **** 
1609:../../core/ST/CMSIS/Include/core_cm4.h **** 
1610:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1611:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:../../core/ST/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1615:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:../../core/ST/CMSIS/Include/core_cm4.h **** {
1617:../../core/ST/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  95              		.loc 2 1617 0
  96 0002 174B     		ldr	r3, .L11
  97 0004 DB68     		ldr	r3, [r3, #12]
  98 0006 C3F30223 		ubfx	r3, r3, #8, #3
  99              	.LVL9:
 100              	.LBE49:
 101              	.LBE48:
 102              	.LBB50:
 103              	.LBB51:
1618:../../core/ST/CMSIS/Include/core_cm4.h **** }
1619:../../core/ST/CMSIS/Include/core_cm4.h **** 
1620:../../core/ST/CMSIS/Include/core_cm4.h **** 
1621:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1622:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1626:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:../../core/ST/CMSIS/Include/core_cm4.h **** {
1628:../../core/ST/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:../../core/ST/CMSIS/Include/core_cm4.h **** }
1630:../../core/ST/CMSIS/Include/core_cm4.h **** 
1631:../../core/ST/CMSIS/Include/core_cm4.h **** 
1632:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1633:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
ARM GAS  /tmp/ccSVWazR.s 			page 35


1634:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1637:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:../../core/ST/CMSIS/Include/core_cm4.h **** {
1639:../../core/ST/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:../../core/ST/CMSIS/Include/core_cm4.h **** }
1641:../../core/ST/CMSIS/Include/core_cm4.h **** 
1642:../../core/ST/CMSIS/Include/core_cm4.h **** 
1643:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1644:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:../../core/ST/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:../../core/ST/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1650:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:../../core/ST/CMSIS/Include/core_cm4.h **** {
1652:../../core/ST/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:../../core/ST/CMSIS/Include/core_cm4.h **** }
1654:../../core/ST/CMSIS/Include/core_cm4.h **** 
1655:../../core/ST/CMSIS/Include/core_cm4.h **** 
1656:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1657:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1661:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:../../core/ST/CMSIS/Include/core_cm4.h **** {
1663:../../core/ST/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:../../core/ST/CMSIS/Include/core_cm4.h **** }
1665:../../core/ST/CMSIS/Include/core_cm4.h **** 
1666:../../core/ST/CMSIS/Include/core_cm4.h **** 
1667:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1668:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1672:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:../../core/ST/CMSIS/Include/core_cm4.h **** {
1674:../../core/ST/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:../../core/ST/CMSIS/Include/core_cm4.h **** }
1676:../../core/ST/CMSIS/Include/core_cm4.h **** 
1677:../../core/ST/CMSIS/Include/core_cm4.h **** 
1678:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1679:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:../../core/ST/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:../../core/ST/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1685:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:../../core/ST/CMSIS/Include/core_cm4.h **** {
1687:../../core/ST/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:../../core/ST/CMSIS/Include/core_cm4.h **** }
1689:../../core/ST/CMSIS/Include/core_cm4.h **** 
1690:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 36


1691:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1692:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:../../core/ST/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1698:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:../../core/ST/CMSIS/Include/core_cm4.h **** {
1700:../../core/ST/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1702:../../core/ST/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1704:../../core/ST/CMSIS/Include/core_cm4.h ****   else
1705:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1706:../../core/ST/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1708:../../core/ST/CMSIS/Include/core_cm4.h **** }
1709:../../core/ST/CMSIS/Include/core_cm4.h **** 
1710:../../core/ST/CMSIS/Include/core_cm4.h **** 
1711:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1712:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1713:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:../../core/ST/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:../../core/ST/CMSIS/Include/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:../../core/ST/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1718:../../core/ST/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1720:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:../../core/ST/CMSIS/Include/core_cm4.h **** {
1722:../../core/ST/CMSIS/Include/core_cm4.h **** 
1723:../../core/ST/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1725:../../core/ST/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1727:../../core/ST/CMSIS/Include/core_cm4.h ****   else
1728:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1729:../../core/ST/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1731:../../core/ST/CMSIS/Include/core_cm4.h **** }
1732:../../core/ST/CMSIS/Include/core_cm4.h **** 
1733:../../core/ST/CMSIS/Include/core_cm4.h **** 
1734:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1735:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1736:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:../../core/ST/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:../../core/ST/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:../../core/ST/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:../../core/ST/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1745:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:../../core/ST/CMSIS/Include/core_cm4.h **** {
1747:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
ARM GAS  /tmp/ccSVWazR.s 			page 37


1748:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1750:../../core/ST/CMSIS/Include/core_cm4.h **** 
1751:../../core/ST/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 104              		.loc 2 1751 0
 105 000a C3F10704 		rsb	r4, r3, #7
 106 000e 042C     		cmp	r4, #4
 107 0010 28BF     		it	cs
 108 0012 0424     		movcs	r4, #4
 109              	.LVL10:
1752:../../core/ST/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 110              		.loc 2 1752 0
 111 0014 1D1D     		adds	r5, r3, #4
 112 0016 062D     		cmp	r5, #6
 113 0018 18D9     		bls	.L8
 114 001a 033B     		subs	r3, r3, #3
 115              	.LVL11:
 116              	.L5:
1753:../../core/ST/CMSIS/Include/core_cm4.h **** 
1754:../../core/ST/CMSIS/Include/core_cm4.h ****   return (
1755:../../core/ST/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 117              		.loc 2 1755 0
 118 001c 4FF0FF35 		mov	r5, #-1
 119              	.LVL12:
 120 0020 05FA04F4 		lsl	r4, r5, r4
 121              	.LVL13:
 122 0024 21EA0401 		bic	r1, r1, r4
 123              	.LVL14:
 124 0028 9940     		lsls	r1, r1, r3
1756:../../core/ST/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 125              		.loc 2 1756 0
 126 002a 05FA03F3 		lsl	r3, r5, r3
 127              	.LVL15:
 128 002e 22EA0303 		bic	r3, r2, r3
1755:../../core/ST/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 129              		.loc 2 1755 0
 130 0032 1943     		orrs	r1, r1, r3
 131              	.LVL16:
 132              	.LBE51:
 133              	.LBE50:
 134              	.LBB53:
 135              	.LBB54:
1700:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 136              		.loc 2 1700 0
 137 0034 0028     		cmp	r0, #0
 138 0036 0BDB     		blt	.L10
1706:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 139              		.loc 2 1706 0
 140 0038 0901     		lsls	r1, r1, #4
 141 003a C9B2     		uxtb	r1, r1
 142 003c 00F16040 		add	r0, r0, #-536870912
 143              	.LVL17:
 144 0040 00F56140 		add	r0, r0, #57600
 145 0044 80F80013 		strb	r1, [r0, #768]
 146              	.LVL18:
 147              	.L4:
 148              	.LBE54:
ARM GAS  /tmp/ccSVWazR.s 			page 38


 149              	.LBE53:
 204:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 205:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 206:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 207:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 208:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 209:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 210:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 211:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 212:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 213:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 150              		.loc 1 213 0
 151 0048 30BC     		pop	{r4, r5}
 152              	.LCFI1:
 153              		.cfi_remember_state
 154              		.cfi_restore 5
 155              		.cfi_restore 4
 156              		.cfi_def_cfa_offset 0
 157 004a 7047     		bx	lr
 158              	.LVL19:
 159              	.L8:
 160              	.LCFI2:
 161              		.cfi_restore_state
 162              	.LBB56:
 163              	.LBB52:
1752:../../core/ST/CMSIS/Include/core_cm4.h **** 
 164              		.loc 2 1752 0
 165 004c 0023     		movs	r3, #0
 166              	.LVL20:
 167 004e E5E7     		b	.L5
 168              	.LVL21:
 169              	.L10:
 170              	.LBE52:
 171              	.LBE56:
 172              	.LBB57:
 173              	.LBB55:
1702:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 174              		.loc 2 1702 0
 175 0050 00F00F00 		and	r0, r0, #15
 176              	.LVL22:
 177 0054 0901     		lsls	r1, r1, #4
 178 0056 C9B2     		uxtb	r1, r1
 179 0058 024B     		ldr	r3, .L11+4
 180 005a 1954     		strb	r1, [r3, r0]
 181 005c F4E7     		b	.L4
 182              	.L12:
 183 005e 00BF     		.align	2
 184              	.L11:
 185 0060 00ED00E0 		.word	-536810240
 186 0064 14ED00E0 		.word	-536810220
 187              	.LBE55:
 188              	.LBE57:
 189              		.cfi_endproc
 190              	.LFE124:
 192              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 193              		.align	1
 194              		.global	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccSVWazR.s 			page 39


 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	HAL_NVIC_EnableIRQ:
 201              	.LFB125:
 214:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 215:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 216:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 217:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 218:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 219:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 220:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 221:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 222:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 223:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 224:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 225:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 202              		.loc 1 225 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL23:
 208              	.LBB58:
 209              	.LBB59:
1628:../../core/ST/CMSIS/Include/core_cm4.h **** }
 210              		.loc 2 1628 0
 211 0000 00F01F02 		and	r2, r0, #31
 212 0004 4009     		lsrs	r0, r0, #5
 213              	.LVL24:
 214 0006 0123     		movs	r3, #1
 215 0008 9340     		lsls	r3, r3, r2
 216 000a 024A     		ldr	r2, .L14
 217 000c 42F82030 		str	r3, [r2, r0, lsl #2]
 218              	.LVL25:
 219              	.LBE59:
 220              	.LBE58:
 226:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 227:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 228:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 229:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 230:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 231:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 221              		.loc 1 231 0
 222 0010 7047     		bx	lr
 223              	.L15:
 224 0012 00BF     		.align	2
 225              	.L14:
 226 0014 00E100E0 		.word	-536813312
 227              		.cfi_endproc
 228              	.LFE125:
 230              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 231              		.align	1
 232              		.global	HAL_NVIC_DisableIRQ
 233              		.syntax unified
 234              		.thumb
ARM GAS  /tmp/ccSVWazR.s 			page 40


 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	HAL_NVIC_DisableIRQ:
 239              	.LFB126:
 232:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 233:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 234:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 235:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 236:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 237:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 238:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 239:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 240:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 241:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 240              		.loc 1 241 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245              	.LVL26:
 246              	.LBB60:
 247              	.LBB61:
1639:../../core/ST/CMSIS/Include/core_cm4.h **** }
 248              		.loc 2 1639 0
 249 0000 00F01F02 		and	r2, r0, #31
 250 0004 4009     		lsrs	r0, r0, #5
 251              	.LVL27:
 252 0006 0123     		movs	r3, #1
 253 0008 9340     		lsls	r3, r3, r2
 254 000a 2030     		adds	r0, r0, #32
 255 000c 014A     		ldr	r2, .L17
 256 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 257              	.LVL28:
 258              	.LBE61:
 259              	.LBE60:
 242:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 243:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 244:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 245:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 246:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 247:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 260              		.loc 1 247 0
 261 0012 7047     		bx	lr
 262              	.L18:
 263              		.align	2
 264              	.L17:
 265 0014 00E100E0 		.word	-536813312
 266              		.cfi_endproc
 267              	.LFE126:
 269              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 270              		.align	1
 271              		.global	HAL_NVIC_SystemReset
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	HAL_NVIC_SystemReset:
ARM GAS  /tmp/ccSVWazR.s 			page 41


 278              	.LFB127:
 248:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 249:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 250:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 251:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 252:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 253:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 254:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 279              		.loc 1 254 0
 280              		.cfi_startproc
 281              		@ Volatile: function does not return.
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LBB70:
 286              	.LBB71:
 287              	.LBB72:
 288              	.LBB73:
 289              		.file 3 "../../core/ST/CMSIS/Include/cmsis_gcc.h"
   1:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
   9:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../core/ST/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  34:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  35:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  38:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccSVWazR.s 			page 42


  39:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  46:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  47:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  53:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  60:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  62:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  63:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  64:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  71:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  73:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  74:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  75:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
  82:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  84:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  87:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  88:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  89:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccSVWazR.s 			page 43


  96:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
  98:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
  99:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 100:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 107:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 109:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 112:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 113:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 114:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 121:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 123:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 126:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 127:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 128:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 132:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 136:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 138:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 141:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 142:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 143:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 150:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 152:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
ARM GAS  /tmp/ccSVWazR.s 			page 44


 153:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 155:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 156:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 157:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 164:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 166:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 167:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 168:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 175:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 177:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 180:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 181:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 182:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 186:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 190:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 192:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 193:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 194:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 201:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 203:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 206:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 207:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 208:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
ARM GAS  /tmp/ccSVWazR.s 			page 45


 210:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 215:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 217:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 218:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 219:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 221:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 228:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 230:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 231:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 232:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 239:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 241:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 242:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 243:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 250:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 252:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 255:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 256:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 257:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 264:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 266:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 46


 267:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 268:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 276:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 278:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 279:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 280:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 287:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 289:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 292:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 293:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 294:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 301:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 303:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 304:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 306:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 307:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 309:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 316:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 319:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  /tmp/ccSVWazR.s 			page 47


 324:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../core/ST/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 328:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 329:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 330:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 337:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 344:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 345:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 347:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 348:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 349:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 351:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 352:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../core/ST/CMSIS/Include/cmsis_gcc.h **** */
 357:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 358:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../core/ST/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 369:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 375:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 377:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 378:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 379:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  /tmp/ccSVWazR.s 			page 48


 381:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 385:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 387:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 388:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 389:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../core/ST/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 396:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 398:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 399:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 400:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 406:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 408:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 409:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 410:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 418:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 420:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 421:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 422:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 429:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 290              		.loc 3 429 0
 291              		.syntax unified
 292              	@ 429 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 293 0000 BFF34F8F 		dsb 0xF
 294              	@ 0 "" 2
 295              		.thumb
 296              		.syntax unified
 297              	.LBE73:
ARM GAS  /tmp/ccSVWazR.s 			page 49


 298              	.LBE72:
1757:../../core/ST/CMSIS/Include/core_cm4.h ****          );
1758:../../core/ST/CMSIS/Include/core_cm4.h **** }
1759:../../core/ST/CMSIS/Include/core_cm4.h **** 
1760:../../core/ST/CMSIS/Include/core_cm4.h **** 
1761:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1762:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1763:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:../../core/ST/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1765:../../core/ST/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:../../core/ST/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1772:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:../../core/ST/CMSIS/Include/core_cm4.h **** {
1774:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1775:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1777:../../core/ST/CMSIS/Include/core_cm4.h **** 
1778:../../core/ST/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1779:../../core/ST/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1780:../../core/ST/CMSIS/Include/core_cm4.h **** 
1781:../../core/ST/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1782:../../core/ST/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1783:../../core/ST/CMSIS/Include/core_cm4.h **** }
1784:../../core/ST/CMSIS/Include/core_cm4.h **** 
1785:../../core/ST/CMSIS/Include/core_cm4.h **** 
1786:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1787:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1788:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1790:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:../../core/ST/CMSIS/Include/core_cm4.h **** {
1792:../../core/ST/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1793:../../core/ST/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1794:../../core/ST/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1795:../../core/ST/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 299              		.loc 2 1795 0
 300 0004 0549     		ldr	r1, .L21
 301 0006 CA68     		ldr	r2, [r1, #12]
 302 0008 02F4E062 		and	r2, r2, #1792
1794:../../core/ST/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 303              		.loc 2 1794 0
 304 000c 044B     		ldr	r3, .L21+4
 305 000e 1343     		orrs	r3, r3, r2
 306 0010 CB60     		str	r3, [r1, #12]
 307              	.LBB74:
 308              	.LBB75:
 309              		.loc 3 429 0
 310              		.syntax unified
 311              	@ 429 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 312 0012 BFF34F8F 		dsb 0xF
 313              	@ 0 "" 2
 314              		.thumb
ARM GAS  /tmp/ccSVWazR.s 			page 50


 315              		.syntax unified
 316              	.L20:
 317              	.LBE75:
 318              	.LBE74:
 319              	.LBB76:
 320              	.LBB77:
 375:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 321              		.loc 3 375 0
 322              		.syntax unified
 323              	@ 375 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 324 0016 00BF     		nop
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 0018 FDE7     		b	.L20
 329              	.L22:
 330 001a 00BF     		.align	2
 331              	.L21:
 332 001c 00ED00E0 		.word	-536810240
 333 0020 0400FA05 		.word	100270084
 334              	.LBE77:
 335              	.LBE76:
 336              	.LBE71:
 337              	.LBE70:
 338              		.cfi_endproc
 339              	.LFE127:
 341              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_SYSTICK_Config
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	HAL_SYSTICK_Config:
 350              	.LFB128:
 255:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 256:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 257:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 258:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 259:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 260:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 261:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 262:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 263:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 264:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 265:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 266:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 267:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 351              		.loc 1 267 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356              	.LVL29:
 357              	.LBB78:
 358              	.LBB79:
1796:../../core/ST/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
ARM GAS  /tmp/ccSVWazR.s 			page 51


1797:../../core/ST/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1798:../../core/ST/CMSIS/Include/core_cm4.h **** 
1799:../../core/ST/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1800:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1801:../../core/ST/CMSIS/Include/core_cm4.h ****     __NOP();
1802:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1803:../../core/ST/CMSIS/Include/core_cm4.h **** }
1804:../../core/ST/CMSIS/Include/core_cm4.h **** 
1805:../../core/ST/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:../../core/ST/CMSIS/Include/core_cm4.h **** 
1807:../../core/ST/CMSIS/Include/core_cm4.h **** 
1808:../../core/ST/CMSIS/Include/core_cm4.h **** 
1809:../../core/ST/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1811:../../core/ST/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:../../core/ST/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
1814:../../core/ST/CMSIS/Include/core_cm4.h ****   @{
1815:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1816:../../core/ST/CMSIS/Include/core_cm4.h **** 
1817:../../core/ST/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:../../core/ST/CMSIS/Include/core_cm4.h **** 
1819:../../core/ST/CMSIS/Include/core_cm4.h **** /**
1820:../../core/ST/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
1821:../../core/ST/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:../../core/ST/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:../../core/ST/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1824:../../core/ST/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
1825:../../core/ST/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
1826:../../core/ST/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:../../core/ST/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:../../core/ST/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:../../core/ST/CMSIS/Include/core_cm4.h ****  */
1830:../../core/ST/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1831:../../core/ST/CMSIS/Include/core_cm4.h **** {
1832:../../core/ST/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 359              		.loc 2 1832 0
 360 0000 0138     		subs	r0, r0, #1
 361              	.LVL30:
 362 0002 B0F1807F 		cmp	r0, #16777216
 363 0006 0AD2     		bcs	.L25
1833:../../core/ST/CMSIS/Include/core_cm4.h ****   {
1834:../../core/ST/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
1835:../../core/ST/CMSIS/Include/core_cm4.h ****   }
1836:../../core/ST/CMSIS/Include/core_cm4.h **** 
1837:../../core/ST/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 364              		.loc 2 1837 0
 365 0008 064B     		ldr	r3, .L26
 366 000a 5860     		str	r0, [r3, #4]
 367              	.LVL31:
 368              	.LBB80:
 369              	.LBB81:
1702:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 370              		.loc 2 1702 0
 371 000c 064A     		ldr	r2, .L26+4
 372 000e F021     		movs	r1, #240
 373 0010 82F82310 		strb	r1, [r2, #35]
ARM GAS  /tmp/ccSVWazR.s 			page 52


 374              	.LVL32:
 375              	.LBE81:
 376              	.LBE80:
1838:../../core/ST/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1839:../../core/ST/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 377              		.loc 2 1839 0
 378 0014 0020     		movs	r0, #0
 379              	.LVL33:
 380 0016 9860     		str	r0, [r3, #8]
1840:../../core/ST/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 381              		.loc 2 1840 0
 382 0018 0722     		movs	r2, #7
 383 001a 1A60     		str	r2, [r3]
 384 001c 7047     		bx	lr
 385              	.L25:
1834:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 386              		.loc 2 1834 0
 387 001e 0120     		movs	r0, #1
 388              	.LVL34:
 389              	.LBE79:
 390              	.LBE78:
 268:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 269:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 391              		.loc 1 269 0
 392 0020 7047     		bx	lr
 393              	.L27:
 394 0022 00BF     		.align	2
 395              	.L26:
 396 0024 10E000E0 		.word	-536813552
 397 0028 00ED00E0 		.word	-536810240
 398              		.cfi_endproc
 399              	.LFE128:
 401              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_NVIC_GetPriorityGrouping
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_NVIC_GetPriorityGrouping:
 410              	.LFB129:
 270:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 271:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @}
 272:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 273:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 274:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 275:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 276:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 277:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 278:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 279:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 280:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 281:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 282:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 283:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 284:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 285:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccSVWazR.s 			page 53


 286:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 287:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 288:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 289:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 290:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 291:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 292:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 293:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 294:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 295:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 411              		.loc 1 295 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LBB82:
 417              	.LBB83:
1617:../../core/ST/CMSIS/Include/core_cm4.h **** }
 418              		.loc 2 1617 0
 419 0000 024B     		ldr	r3, .L29
 420 0002 D868     		ldr	r0, [r3, #12]
 421              	.LBE83:
 422              	.LBE82:
 296:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 297:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 298:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 423              		.loc 1 298 0
 424 0004 C0F30220 		ubfx	r0, r0, #8, #3
 425 0008 7047     		bx	lr
 426              	.L30:
 427 000a 00BF     		.align	2
 428              	.L29:
 429 000c 00ED00E0 		.word	-536810240
 430              		.cfi_endproc
 431              	.LFE129:
 433              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 434              		.align	1
 435              		.global	HAL_NVIC_GetPriority
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	HAL_NVIC_GetPriority:
 442              	.LFB130:
 299:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 300:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 301:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 302:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 303:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 304:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 305:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 306:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 307:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 308:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 309:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 310:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 311:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
ARM GAS  /tmp/ccSVWazR.s 			page 54


 312:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 313:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 314:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 315:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 316:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 317:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 318:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 319:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 320:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 321:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 322:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 443              		.loc 1 322 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 448              	.LVL35:
 449 0000 70B4     		push	{r4, r5, r6}
 450              	.LCFI3:
 451              		.cfi_def_cfa_offset 12
 452              		.cfi_offset 4, -12
 453              		.cfi_offset 5, -8
 454              		.cfi_offset 6, -4
 455              	.LVL36:
 456              	.LBB84:
 457              	.LBB85:
1723:../../core/ST/CMSIS/Include/core_cm4.h ****   {
 458              		.loc 2 1723 0
 459 0002 0028     		cmp	r0, #0
 460              	.LVL37:
 461 0004 21DB     		blt	.L37
1729:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 462              		.loc 2 1729 0
 463 0006 00F16040 		add	r0, r0, #-536870912
 464 000a 00F56140 		add	r0, r0, #57600
 465 000e 90F80003 		ldrb	r0, [r0, #768]	@ zero_extendqisi2
 466 0012 0009     		lsrs	r0, r0, #4
 467              	.L33:
 468              	.LVL38:
 469              	.LBE85:
 470              	.LBE84:
 471              	.LBB87:
 472              	.LBB88:
1774:../../core/ST/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 473              		.loc 2 1774 0
 474 0014 01F00701 		and	r1, r1, #7
 475              	.LVL39:
1778:../../core/ST/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 476              		.loc 2 1778 0
 477 0018 C1F10704 		rsb	r4, r1, #7
 478 001c 042C     		cmp	r4, #4
 479 001e 28BF     		it	cs
 480 0020 0424     		movcs	r4, #4
 481              	.LVL40:
1779:../../core/ST/CMSIS/Include/core_cm4.h **** 
 482              		.loc 2 1779 0
 483 0022 0D1D     		adds	r5, r1, #4
ARM GAS  /tmp/ccSVWazR.s 			page 55


 484 0024 062D     		cmp	r5, #6
 485 0026 16D9     		bls	.L35
 486 0028 0339     		subs	r1, r1, #3
 487              	.LVL41:
 488              	.L34:
1781:../../core/ST/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 489              		.loc 2 1781 0
 490 002a 20FA01F6 		lsr	r6, r0, r1
 491 002e 4FF0FF35 		mov	r5, #-1
 492              	.LVL42:
 493 0032 05FA04F4 		lsl	r4, r5, r4
 494              	.LVL43:
 495 0036 26EA0404 		bic	r4, r6, r4
 496 003a 1460     		str	r4, [r2]
1782:../../core/ST/CMSIS/Include/core_cm4.h **** }
 497              		.loc 2 1782 0
 498 003c 05FA01F1 		lsl	r1, r5, r1
 499              	.LVL44:
 500 0040 20EA0100 		bic	r0, r0, r1
 501 0044 1860     		str	r0, [r3]
 502              	.LVL45:
 503              	.LBE88:
 504              	.LBE87:
 323:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 324:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 325:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 326:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 327:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 505              		.loc 1 327 0
 506 0046 70BC     		pop	{r4, r5, r6}
 507              	.LCFI4:
 508              		.cfi_remember_state
 509              		.cfi_restore 6
 510              		.cfi_restore 5
 511              		.cfi_restore 4
 512              		.cfi_def_cfa_offset 0
 513 0048 7047     		bx	lr
 514              	.LVL46:
 515              	.L37:
 516              	.LCFI5:
 517              		.cfi_restore_state
 518              	.LBB90:
 519              	.LBB86:
1725:../../core/ST/CMSIS/Include/core_cm4.h ****   }
 520              		.loc 2 1725 0
 521 004a 00F00F00 		and	r0, r0, #15
 522 004e 034C     		ldr	r4, .L38
 523 0050 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
 524 0052 0009     		lsrs	r0, r0, #4
 525 0054 DEE7     		b	.L33
 526              	.LVL47:
 527              	.L35:
 528              	.LBE86:
 529              	.LBE90:
 530              	.LBB91:
 531              	.LBB89:
1779:../../core/ST/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccSVWazR.s 			page 56


 532              		.loc 2 1779 0
 533 0056 0021     		movs	r1, #0
 534              	.LVL48:
 535 0058 E7E7     		b	.L34
 536              	.L39:
 537 005a 00BF     		.align	2
 538              	.L38:
 539 005c 14ED00E0 		.word	-536810220
 540              	.LBE89:
 541              	.LBE91:
 542              		.cfi_endproc
 543              	.LFE130:
 545              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 546              		.align	1
 547              		.global	HAL_NVIC_SetPendingIRQ
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu fpv4-sp-d16
 553              	HAL_NVIC_SetPendingIRQ:
 554              	.LFB131:
 328:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 329:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 330:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 331:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 332:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 333:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 334:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 335:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 336:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 337:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 555              		.loc 1 337 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL49:
 561              	.LBB92:
 562              	.LBB93:
1663:../../core/ST/CMSIS/Include/core_cm4.h **** }
 563              		.loc 2 1663 0
 564 0000 00F01F02 		and	r2, r0, #31
 565 0004 4009     		lsrs	r0, r0, #5
 566              	.LVL50:
 567 0006 0123     		movs	r3, #1
 568 0008 9340     		lsls	r3, r3, r2
 569 000a 4030     		adds	r0, r0, #64
 570 000c 014A     		ldr	r2, .L41
 571 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 572              	.LVL51:
 573              	.LBE93:
 574              	.LBE92:
 338:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 339:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 340:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 341:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 342:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
ARM GAS  /tmp/ccSVWazR.s 			page 57


 343:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 575              		.loc 1 343 0
 576 0012 7047     		bx	lr
 577              	.L42:
 578              		.align	2
 579              	.L41:
 580 0014 00E100E0 		.word	-536813312
 581              		.cfi_endproc
 582              	.LFE131:
 584              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 585              		.align	1
 586              		.global	HAL_NVIC_GetPendingIRQ
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 590              		.fpu fpv4-sp-d16
 592              	HAL_NVIC_GetPendingIRQ:
 593              	.LFB132:
 344:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 345:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 346:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 347:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 348:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 349:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 350:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 351:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 352:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 353:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 354:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 355:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 594              		.loc 1 355 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
 599              	.LVL52:
 600              	.LBB94:
 601              	.LBB95:
1652:../../core/ST/CMSIS/Include/core_cm4.h **** }
 602              		.loc 2 1652 0
 603 0000 4309     		lsrs	r3, r0, #5
 604 0002 4033     		adds	r3, r3, #64
 605 0004 044A     		ldr	r2, .L44
 606 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 607 000a 00F01F00 		and	r0, r0, #31
 608              	.LVL53:
 609 000e 23FA00F0 		lsr	r0, r3, r0
 610              	.LVL54:
 611              	.LBE95:
 612              	.LBE94:
 356:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 357:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 358:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 359:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 360:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 361:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 613              		.loc 1 361 0
ARM GAS  /tmp/ccSVWazR.s 			page 58


 614 0012 00F00100 		and	r0, r0, #1
 615 0016 7047     		bx	lr
 616              	.L45:
 617              		.align	2
 618              	.L44:
 619 0018 00E100E0 		.word	-536813312
 620              		.cfi_endproc
 621              	.LFE132:
 623              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 624              		.align	1
 625              		.global	HAL_NVIC_ClearPendingIRQ
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 629              		.fpu fpv4-sp-d16
 631              	HAL_NVIC_ClearPendingIRQ:
 632              	.LFB133:
 362:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 363:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 364:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 365:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 366:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 367:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 368:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 369:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 370:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 371:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 633              		.loc 1 371 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638              	.LVL55:
 639              	.LBB96:
 640              	.LBB97:
1674:../../core/ST/CMSIS/Include/core_cm4.h **** }
 641              		.loc 2 1674 0
 642 0000 00F01F02 		and	r2, r0, #31
 643 0004 4009     		lsrs	r0, r0, #5
 644              	.LVL56:
 645 0006 0123     		movs	r3, #1
 646 0008 9340     		lsls	r3, r3, r2
 647 000a 6030     		adds	r0, r0, #96
 648 000c 014A     		ldr	r2, .L47
 649 000e 42F82030 		str	r3, [r2, r0, lsl #2]
 650              	.LVL57:
 651              	.LBE97:
 652              	.LBE96:
 372:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 373:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 374:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 375:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 376:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 377:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 653              		.loc 1 377 0
 654 0012 7047     		bx	lr
 655              	.L48:
ARM GAS  /tmp/ccSVWazR.s 			page 59


 656              		.align	2
 657              	.L47:
 658 0014 00E100E0 		.word	-536813312
 659              		.cfi_endproc
 660              	.LFE133:
 662              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 663              		.align	1
 664              		.global	HAL_NVIC_GetActive
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 668              		.fpu fpv4-sp-d16
 670              	HAL_NVIC_GetActive:
 671              	.LFB134:
 378:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 379:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 380:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 381:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 382:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 383:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 384:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 385:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 386:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 387:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 388:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 672              		.loc 1 388 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677              	.LVL58:
 678              	.LBB98:
 679              	.LBB99:
1687:../../core/ST/CMSIS/Include/core_cm4.h **** }
 680              		.loc 2 1687 0
 681 0000 4309     		lsrs	r3, r0, #5
 682 0002 8033     		adds	r3, r3, #128
 683 0004 044A     		ldr	r2, .L50
 684 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 685 000a 00F01F00 		and	r0, r0, #31
 686              	.LVL59:
 687 000e 23FA00F0 		lsr	r0, r3, r0
 688              	.LVL60:
 689              	.LBE99:
 690              	.LBE98:
 389:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 390:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 391:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 691              		.loc 1 391 0
 692 0012 00F00100 		and	r0, r0, #1
 693 0016 7047     		bx	lr
 694              	.L51:
 695              		.align	2
 696              	.L50:
 697 0018 00E100E0 		.word	-536813312
 698              		.cfi_endproc
 699              	.LFE134:
ARM GAS  /tmp/ccSVWazR.s 			page 60


 701              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_SYSTICK_CLKSourceConfig
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 707              		.fpu fpv4-sp-d16
 709              	HAL_SYSTICK_CLKSourceConfig:
 710              	.LFB135:
 392:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 393:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 394:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 395:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 396:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 397:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 398:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 399:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 400:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 401:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 402:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 711              		.loc 1 402 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              	.LVL61:
 403:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 404:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 405:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 717              		.loc 1 405 0
 718 0000 0428     		cmp	r0, #4
 719 0002 05D0     		beq	.L55
 406:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 408:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 409:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 410:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 411:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 720              		.loc 1 411 0
 721 0004 054A     		ldr	r2, .L56
 722 0006 1368     		ldr	r3, [r2]
 723 0008 23F00403 		bic	r3, r3, #4
 724 000c 1360     		str	r3, [r2]
 412:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 413:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 725              		.loc 1 413 0
 726 000e 7047     		bx	lr
 727              	.L55:
 407:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 728              		.loc 1 407 0
 729 0010 024A     		ldr	r2, .L56
 730 0012 1368     		ldr	r3, [r2]
 731 0014 43F00403 		orr	r3, r3, #4
 732 0018 1360     		str	r3, [r2]
 733 001a 7047     		bx	lr
 734              	.L57:
 735              		.align	2
ARM GAS  /tmp/ccSVWazR.s 			page 61


 736              	.L56:
 737 001c 10E000E0 		.word	-536813552
 738              		.cfi_endproc
 739              	.LFE135:
 741              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 742              		.align	1
 743              		.weak	HAL_SYSTICK_Callback
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 747              		.fpu fpv4-sp-d16
 749              	HAL_SYSTICK_Callback:
 750              	.LFB137:
 414:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 415:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 416:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 417:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 418:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 419:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 423:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 424:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 425:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 426:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 427:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 428:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 429:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 751              		.loc 1 429 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 430:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 431:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 432:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    */
 433:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 756              		.loc 1 433 0
 757 0000 7047     		bx	lr
 758              		.cfi_endproc
 759              	.LFE137:
 761              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 762              		.align	1
 763              		.global	HAL_SYSTICK_IRQHandler
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu fpv4-sp-d16
 769              	HAL_SYSTICK_IRQHandler:
 770              	.LFB136:
 420:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 771              		.loc 1 420 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 0
 774              		@ frame_needed = 0, uses_anonymous_args = 0
 775 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccSVWazR.s 			page 62


 776              	.LCFI6:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 3, -8
 779              		.cfi_offset 14, -4
 421:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 780              		.loc 1 421 0
 781 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 782              	.LVL62:
 422:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 783              		.loc 1 422 0
 784 0006 08BD     		pop	{r3, pc}
 785              		.cfi_endproc
 786              	.LFE136:
 788              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 789              		.align	1
 790              		.global	HAL_MPU_Disable
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 794              		.fpu fpv4-sp-d16
 796              	HAL_MPU_Disable:
 797              	.LFB138:
 434:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 435:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 436:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 437:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable the MPU.
 438:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 439:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 440:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 441:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 798              		.loc 1 441 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 803              	.LBB100:
 804              	.LBB101:
 430:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 431:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 432:../../core/ST/CMSIS/Include/cmsis_gcc.h **** 
 433:../../core/ST/CMSIS/Include/cmsis_gcc.h **** /**
 434:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:../../core/ST/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:../../core/ST/CMSIS/Include/cmsis_gcc.h ****  */
 438:../../core/ST/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:../../core/ST/CMSIS/Include/cmsis_gcc.h **** {
 440:../../core/ST/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 805              		.loc 3 440 0
 806              		.syntax unified
 807              	@ 440 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 808 0000 BFF35F8F 		dmb 0xF
 809              	@ 0 "" 2
 810              		.thumb
 811              		.syntax unified
 812              	.LBE101:
 813              	.LBE100:
ARM GAS  /tmp/ccSVWazR.s 			page 63


 442:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 443:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DMB();
 444:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 445:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable fault exceptions */
 446:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 814              		.loc 1 446 0
 815 0004 044A     		ldr	r2, .L62
 816 0006 536A     		ldr	r3, [r2, #36]
 817 0008 23F48033 		bic	r3, r3, #65536
 818 000c 5362     		str	r3, [r2, #36]
 447:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 448:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 449:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = 0U;
 819              		.loc 1 449 0
 820 000e 034B     		ldr	r3, .L62+4
 821 0010 0022     		movs	r2, #0
 822 0012 5A60     		str	r2, [r3, #4]
 450:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 823              		.loc 1 450 0
 824 0014 7047     		bx	lr
 825              	.L63:
 826 0016 00BF     		.align	2
 827              	.L62:
 828 0018 00ED00E0 		.word	-536810240
 829 001c 90ED00E0 		.word	-536810096
 830              		.cfi_endproc
 831              	.LFE138:
 833              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 834              		.align	1
 835              		.global	HAL_MPU_Enable
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 839              		.fpu fpv4-sp-d16
 841              	HAL_MPU_Enable:
 842              	.LFB139:
 451:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 452:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 453:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable the MPU.
 454:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 455:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged accessto the default memory 
 456:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 457:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 458:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 459:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 460:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 461:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 462:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 463:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 464:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 843              		.loc 1 464 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848              	.LVL63:
 465:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable the MPU */
ARM GAS  /tmp/ccSVWazR.s 			page 64


 466:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 849              		.loc 1 466 0
 850 0000 40F00100 		orr	r0, r0, #1
 851              	.LVL64:
 852 0004 054B     		ldr	r3, .L65
 853 0006 5860     		str	r0, [r3, #4]
 467:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 468:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable fault exceptions */
 469:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 854              		.loc 1 469 0
 855 0008 054A     		ldr	r2, .L65+4
 856 000a 536A     		ldr	r3, [r2, #36]
 857 000c 43F48033 		orr	r3, r3, #65536
 858 0010 5362     		str	r3, [r2, #36]
 859              	.LBB102:
 860              	.LBB103:
 429:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 861              		.loc 3 429 0
 862              		.syntax unified
 863              	@ 429 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 864 0012 BFF34F8F 		dsb 0xF
 865              	@ 0 "" 2
 866              		.thumb
 867              		.syntax unified
 868              	.LBE103:
 869              	.LBE102:
 870              	.LBB104:
 871              	.LBB105:
 418:../../core/ST/CMSIS/Include/cmsis_gcc.h **** }
 872              		.loc 3 418 0
 873              		.syntax unified
 874              	@ 418 "../../core/ST/CMSIS/Include/cmsis_gcc.h" 1
 875 0016 BFF36F8F 		isb 0xF
 876              	@ 0 "" 2
 877              		.thumb
 878              		.syntax unified
 879              	.LBE105:
 880              	.LBE104:
 470:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 471:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Ensure MPU settings take effects */
 472:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DSB();
 473:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __ISB();
 474:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 881              		.loc 1 474 0
 882 001a 7047     		bx	lr
 883              	.L66:
 884              		.align	2
 885              	.L65:
 886 001c 90ED00E0 		.word	-536810096
 887 0020 00ED00E0 		.word	-536810240
 888              		.cfi_endproc
 889              	.LFE139:
 891              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 892              		.align	1
 893              		.global	HAL_MPU_ConfigRegion
 894              		.syntax unified
 895              		.thumb
ARM GAS  /tmp/ccSVWazR.s 			page 65


 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	HAL_MPU_ConfigRegion:
 900              	.LFB140:
 475:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 476:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 477:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 478:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 479:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 480:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 481:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 482:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 483:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 901              		.loc 1 483 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL65:
 484:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 485:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 486:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 487:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 488:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 489:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 907              		.loc 1 489 0
 908 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 909 0002 134B     		ldr	r3, .L71
 910 0004 9A60     		str	r2, [r3, #8]
 490:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 491:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 911              		.loc 1 491 0
 912 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 913 0008 23B9     		cbnz	r3, .L70
 492:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 493:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     /* Check the parameters */
 494:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 495:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 496:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 497:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 498:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 499:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 500:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 501:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 502:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 513:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 514:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
ARM GAS  /tmp/ccSVWazR.s 			page 66


 515:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 516:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 914              		.loc 1 516 0
 915 000a 114B     		ldr	r3, .L71
 916 000c 0022     		movs	r2, #0
 917 000e DA60     		str	r2, [r3, #12]
 517:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 918              		.loc 1 517 0
 919 0010 1A61     		str	r2, [r3, #16]
 518:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 519:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 920              		.loc 1 519 0
 921 0012 7047     		bx	lr
 922              	.L70:
 503:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 923              		.loc 1 503 0
 924 0014 4368     		ldr	r3, [r0, #4]
 925 0016 0E4A     		ldr	r2, .L71
 926 0018 D360     		str	r3, [r2, #12]
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 927              		.loc 1 504 0
 928 001a 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 929              		.loc 1 505 0
 930 001c C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 931 001e 1B06     		lsls	r3, r3, #24
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 932              		.loc 1 504 0
 933 0020 43EA0173 		orr	r3, r3, r1, lsl #28
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 934              		.loc 1 506 0
 935 0024 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 505:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 936              		.loc 1 505 0
 937 0026 43EAC143 		orr	r3, r3, r1, lsl #19
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 938              		.loc 1 507 0
 939 002a 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 506:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 940              		.loc 1 506 0
 941 002c 43EA8143 		orr	r3, r3, r1, lsl #18
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 942              		.loc 1 508 0
 943 0030 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 507:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 944              		.loc 1 507 0
 945 0032 43EA4143 		orr	r3, r3, r1, lsl #17
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 946              		.loc 1 509 0
 947 0036 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 508:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 948              		.loc 1 508 0
 949 0038 43EA0143 		orr	r3, r3, r1, lsl #16
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 950              		.loc 1 510 0
 951 003c 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 509:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
ARM GAS  /tmp/ccSVWazR.s 			page 67


 952              		.loc 1 509 0
 953 003e 43EA0123 		orr	r3, r3, r1, lsl #8
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 954              		.loc 1 511 0
 955 0042 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 510:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 956              		.loc 1 510 0
 957 0044 43EA4103 		orr	r3, r3, r1, lsl #1
 512:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 958              		.loc 1 512 0
 959 0048 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 511:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 960              		.loc 1 511 0
 961 004a 0B43     		orrs	r3, r3, r1
 504:../../core/ST/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 962              		.loc 1 504 0
 963 004c 1361     		str	r3, [r2, #16]
 964 004e 7047     		bx	lr
 965              	.L72:
 966              		.align	2
 967              	.L71:
 968 0050 90ED00E0 		.word	-536810096
 969              		.cfi_endproc
 970              	.LFE140:
 972              		.text
 973              	.Letext0:
 974              		.file 4 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l496xx.h"
 975              		.file 5 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 976              		.file 6 "/home/mats/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 977              		.file 7 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 978              		.file 8 "../../core/ST/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 979              		.file 9 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
 980              		.file 10 "../../core/ST/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccSVWazR.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_cortex.c
     /tmp/ccSVWazR.s:18     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccSVWazR.s:25     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccSVWazR.s:67     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
     /tmp/ccSVWazR.s:72     .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccSVWazR.s:79     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccSVWazR.s:185    .text.HAL_NVIC_SetPriority:0000000000000060 $d
     /tmp/ccSVWazR.s:193    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccSVWazR.s:200    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccSVWazR.s:226    .text.HAL_NVIC_EnableIRQ:0000000000000014 $d
     /tmp/ccSVWazR.s:231    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccSVWazR.s:238    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccSVWazR.s:265    .text.HAL_NVIC_DisableIRQ:0000000000000014 $d
     /tmp/ccSVWazR.s:270    .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccSVWazR.s:277    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccSVWazR.s:332    .text.HAL_NVIC_SystemReset:000000000000001c $d
     /tmp/ccSVWazR.s:342    .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccSVWazR.s:349    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccSVWazR.s:396    .text.HAL_SYSTICK_Config:0000000000000024 $d
     /tmp/ccSVWazR.s:402    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccSVWazR.s:409    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccSVWazR.s:429    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
     /tmp/ccSVWazR.s:434    .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccSVWazR.s:441    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccSVWazR.s:539    .text.HAL_NVIC_GetPriority:000000000000005c $d
     /tmp/ccSVWazR.s:546    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccSVWazR.s:553    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccSVWazR.s:580    .text.HAL_NVIC_SetPendingIRQ:0000000000000014 $d
     /tmp/ccSVWazR.s:585    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccSVWazR.s:592    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccSVWazR.s:619    .text.HAL_NVIC_GetPendingIRQ:0000000000000018 $d
     /tmp/ccSVWazR.s:624    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccSVWazR.s:631    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccSVWazR.s:658    .text.HAL_NVIC_ClearPendingIRQ:0000000000000014 $d
     /tmp/ccSVWazR.s:663    .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccSVWazR.s:670    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccSVWazR.s:697    .text.HAL_NVIC_GetActive:0000000000000018 $d
     /tmp/ccSVWazR.s:702    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccSVWazR.s:709    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccSVWazR.s:737    .text.HAL_SYSTICK_CLKSourceConfig:000000000000001c $d
     /tmp/ccSVWazR.s:742    .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/ccSVWazR.s:749    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccSVWazR.s:762    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccSVWazR.s:769    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccSVWazR.s:789    .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccSVWazR.s:796    .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccSVWazR.s:828    .text.HAL_MPU_Disable:0000000000000018 $d
     /tmp/ccSVWazR.s:834    .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccSVWazR.s:841    .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccSVWazR.s:886    .text.HAL_MPU_Enable:000000000000001c $d
     /tmp/ccSVWazR.s:892    .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccSVWazR.s:899    .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccSVWazR.s:968    .text.HAL_MPU_ConfigRegion:0000000000000050 $d

NO UNDEFINED SYMBOLS
